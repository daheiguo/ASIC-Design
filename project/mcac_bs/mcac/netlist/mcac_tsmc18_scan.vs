
module IN_REG_1_test_1 ( data_in, load, reset, data_out, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si2, test_si1, test_se );
  input [7:0] data_in;
  output [7:0] data_out;
  input load, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL data_out_reg_7_ ( .D(data_in[7]), .SI(data_out[6]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[7]) );
  SDFFRHQXL data_out_reg_5_ ( .D(data_in[5]), .SI(data_out[4]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[5]) );
  SDFFRHQXL data_out_reg_3_ ( .D(data_in[3]), .SI(data_out[2]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[3]) );
  SDFFRHQXL data_out_reg_1_ ( .D(data_in[1]), .SI(test_si2), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[1]) );
  SDFFRHQXL data_out_reg_0_ ( .D(data_in[0]), .SI(test_si1), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[0]) );
  SDFFRHQXL data_out_reg_2_ ( .D(data_in[2]), .SI(data_out[1]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[2]) );
  SDFFRHQXL data_out_reg_6_ ( .D(data_in[6]), .SI(data_out[5]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[6]) );
  SDFFRHQXL data_out_reg_4_ ( .D(data_in[4]), .SI(data_out[3]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[4]) );
endmodule


module G711_1 ( LAW, PCM, mag );
  input [7:0] PCM;
  output [13:0] mag;
  input LAW;
  wire   N44, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99,
         n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, mag_8_, mag_10_, mag_11_, mag_9_;
  assign N44 = PCM[4];
  assign mag[8] = mag_8_;
  assign mag[10] = mag_10_;
  assign mag[11] = mag_11_;
  assign mag[9] = mag_9_;

  NAND3X1 U4 ( .A(n3), .B(n4), .C(n90), .Y(mag[7]) );
  NAND3X1 U5 ( .A(n27), .B(n26), .C(n25), .Y(mag[2]) );
  NAND2X1 U6 ( .A(n12), .B(n93), .Y(n32) );
  NAND2BX2 U7 ( .AN(n43), .B(n42), .Y(n91) );
  OAI211X1 U8 ( .A0(n106), .A1(n117), .B0(n111), .C0(n115), .Y(mag_9_) );
  NAND3XL U9 ( .A(n65), .B(n17), .C(n42), .Y(n20) );
  OAI211X1 U10 ( .A0(n18), .A1(n59), .B0(n20), .C0(n19), .Y(mag[1]) );
  MXI2X1 U11 ( .A(n83), .B(n78), .S0(n16), .Y(n58) );
  NAND3BX1 U12 ( .AN(n91), .B(n38), .C(n76), .Y(n27) );
  OR3XL U13 ( .A(n32), .B(n1), .C(LAW), .Y(n35) );
  INVX1 U14 ( .A(n2), .Y(n1) );
  NAND2X1 U15 ( .A(n44), .B(n114), .Y(n53) );
  INVX1 U16 ( .A(n77), .Y(n44) );
  INVX1 U17 ( .A(n117), .Y(n114) );
  OAI22X1 U18 ( .A0(n37), .A1(n11), .B0(n106), .B1(n91), .Y(n64) );
  NOR2XL U19 ( .A(n65), .B(n89), .Y(n67) );
  OAI211XL U20 ( .A0(n78), .A1(n77), .B0(n114), .C0(n76), .Y(n79) );
  NAND2BX1 U21 ( .AN(n82), .B(n12), .Y(n22) );
  MXI2XL U22 ( .A(n66), .B(n7), .S0(n11), .Y(n106) );
  OAI2BB2X1 U23 ( .B0(n117), .B1(n113), .A0N(n116), .A1N(n115), .Y(mag_10_) );
  NAND2BXL U24 ( .AN(n12), .B(n68), .Y(n42) );
  NAND3X1 U25 ( .A(n95), .B(n96), .C(n110), .Y(n99) );
  CLKINVX3 U26 ( .A(n88), .Y(n65) );
  XOR2X2 U27 ( .A(n15), .B(LAW), .Y(n82) );
  OR2X2 U28 ( .A(n43), .B(n42), .Y(n117) );
  MX2X2 U29 ( .A(n47), .B(n46), .S0(n11), .Y(n8) );
  NAND2BX2 U30 ( .AN(n12), .B(n49), .Y(n74) );
  MXI2X1 U31 ( .A(n2), .B(n84), .S0(n12), .Y(n95) );
  INVX1 U32 ( .A(n82), .Y(n56) );
  MXI2X1 U33 ( .A(n59), .B(n109), .S0(n12), .Y(n73) );
  NAND2X1 U34 ( .A(n73), .B(n74), .Y(n96) );
  MXI2X1 U35 ( .A(n72), .B(n71), .S0(n12), .Y(n110) );
  INVX1 U36 ( .A(n112), .Y(n71) );
  INVX1 U37 ( .A(n37), .Y(n55) );
  INVX1 U38 ( .A(PCM[2]), .Y(n70) );
  NAND3BX1 U39 ( .AN(n16), .B(n12), .C(LAW), .Y(n37) );
  INVX1 U40 ( .A(n74), .Y(n51) );
  OAI2BB1X1 U41 ( .A0N(n102), .A1N(n41), .B0(n40), .Y(n100) );
  OAI2BB1X1 U42 ( .A0N(n12), .A1N(n56), .B0(LAW), .Y(n43) );
  BUFX3 U43 ( .A(PCM[6]), .Y(n12) );
  NAND2BX2 U44 ( .AN(n11), .B(n16), .Y(n93) );
  AOI21X1 U45 ( .A0(n44), .A1(PCM[2]), .B0(n10), .Y(n9) );
  MX2X1 U46 ( .A(n29), .B(n28), .S0(n65), .Y(n10) );
  INVX4 U47 ( .A(n16), .Y(n45) );
  MXI2X1 U48 ( .A(PCM[0]), .B(PCM[2]), .S0(n45), .Y(n47) );
  XNOR2X2 U49 ( .A(PCM[3]), .B(LAW), .Y(n83) );
  XNOR2X2 U50 ( .A(PCM[1]), .B(LAW), .Y(n78) );
  OAI21XL U51 ( .A0(n51), .A1(n50), .B0(n13), .Y(n52) );
  INVXL U52 ( .A(n61), .Y(n29) );
  MXI2X2 U53 ( .A(n48), .B(n8), .S0(n12), .Y(n49) );
  INVX1 U54 ( .A(PCM[5]), .Y(n15) );
  INVX1 U55 ( .A(n21), .Y(n72) );
  INVX1 U56 ( .A(n99), .Y(n85) );
  NAND4BXL U57 ( .AN(n5), .B(n54), .C(n53), .D(n52), .Y(mag[4]) );
  NAND3X1 U58 ( .A(n36), .B(n35), .C(n34), .Y(mag[3]) );
  AOI22X1 U59 ( .A0(n22), .A1(n13), .B0(n55), .B1(n41), .Y(n19) );
  NAND3BX1 U60 ( .AN(n64), .B(n63), .C(n62), .Y(mag[5]) );
  NAND2X1 U61 ( .A(n60), .B(n14), .Y(n63) );
  INVXL U62 ( .A(LAW), .Y(n13) );
  INVXL U63 ( .A(LAW), .Y(n14) );
  MX2X1 U64 ( .A(n31), .B(n47), .S0(n11), .Y(n2) );
  NAND2BX1 U65 ( .AN(LAW), .B(n75), .Y(n80) );
  NAND3BX1 U66 ( .AN(n81), .B(n80), .C(n79), .Y(mag[6]) );
  NAND2XL U67 ( .A(n110), .B(n96), .Y(n87) );
  AOI21XL U68 ( .A0(n87), .A1(n86), .B0(n85), .Y(n92) );
  OR2X2 U69 ( .A(n92), .B(LAW), .Y(n3) );
  OR2XL U70 ( .A(n118), .B(n91), .Y(n4) );
  OAI2BB1XL U71 ( .A0N(n11), .A1N(n89), .B0(n88), .Y(n118) );
  MX2XL U72 ( .A(n78), .B(n83), .S0(n65), .Y(n7) );
  NAND2BX4 U73 ( .AN(n69), .B(n45), .Y(n68) );
  INVXL U74 ( .A(n43), .Y(n17) );
  NOR2XL U75 ( .A(n89), .B(n37), .Y(n5) );
  XOR2XL U76 ( .A(n74), .B(n73), .Y(n60) );
  NOR2XL U77 ( .A(n49), .B(n121), .Y(n50) );
  NAND3XL U78 ( .A(n6), .B(n110), .C(n96), .Y(n107) );
  NAND3XL U79 ( .A(n6), .B(n110), .C(n109), .Y(n115) );
  OAI22XL U80 ( .A0(n120), .A1(n119), .B0(n118), .B1(n117), .Y(mag_11_) );
  MXI2X1 U81 ( .A(n58), .B(n57), .S0(n11), .Y(n108) );
  NOR2XL U82 ( .A(n56), .B(n70), .Y(n57) );
  AOI21XL U83 ( .A0(n55), .A1(n70), .B0(n33), .Y(n34) );
  NAND2XL U84 ( .A(n9), .B(n101), .Y(n36) );
  AOI21X1 U85 ( .A0(n32), .A1(n13), .B0(n24), .Y(n25) );
  NAND2XL U86 ( .A(n76), .B(n56), .Y(n59) );
  MXI2XL U87 ( .A(n8), .B(n122), .S0(n12), .Y(n94) );
  NOR2XL U88 ( .A(n78), .B(n69), .Y(n28) );
  NAND2XL U89 ( .A(PCM[0]), .B(n11), .Y(n76) );
  INVXL U90 ( .A(PCM[0]), .Y(n41) );
  INVX1 U91 ( .A(n91), .Y(n101) );
  INVX1 U92 ( .A(n107), .Y(n97) );
  INVX1 U93 ( .A(n38), .Y(n102) );
  INVX1 U94 ( .A(n22), .Y(n23) );
  NAND3BXL U95 ( .AN(n120), .B(n108), .C(n107), .Y(n111) );
  NAND2BX1 U96 ( .AN(LAW), .B(n121), .Y(n120) );
  OAI21XL U97 ( .A0(n110), .A1(n96), .B0(n87), .Y(n75) );
  NOR2X1 U98 ( .A(n120), .B(n112), .Y(n116) );
  OAI2BB1XL U99 ( .A0N(n18), .A1N(n14), .B0(n37), .Y(mag[0]) );
  NOR2XL U100 ( .A(n30), .B(n37), .Y(n24) );
  INVX1 U101 ( .A(n108), .Y(n109) );
  INVXL U102 ( .A(n93), .Y(n122) );
  INVX1 U103 ( .A(n95), .Y(n86) );
  NAND2BXL U104 ( .AN(n69), .B(n88), .Y(n38) );
  INVX1 U105 ( .A(n94), .Y(n98) );
  AND2X2 U106 ( .A(n95), .B(n94), .Y(n6) );
  NAND2XL U107 ( .A(n9), .B(n114), .Y(n90) );
  OAI221XL U108 ( .A0(LAW), .A1(n105), .B0(n104), .B1(n117), .C0(n103), .Y(
        mag_8_) );
  NAND2XL U109 ( .A(n102), .B(n101), .Y(n103) );
  INVX1 U110 ( .A(n100), .Y(n104) );
  AOI21X1 U111 ( .A0(n99), .A1(n98), .B0(n97), .Y(n105) );
  OAI221XL U112 ( .A0(n93), .A1(n70), .B0(n83), .B1(n69), .C0(n68), .Y(n112)
         );
  INVXL U113 ( .A(n68), .Y(n48) );
  NAND3XL U114 ( .A(n72), .B(n14), .C(n23), .Y(n26) );
  MXI2XL U115 ( .A(n123), .B(n124), .S0(LAW), .Y(mag[12]) );
  NAND2X1 U116 ( .A(n122), .B(n121), .Y(n123) );
  MXI2X1 U117 ( .A(n67), .B(n66), .S0(n11), .Y(n113) );
  OAI21XL U118 ( .A0(n11), .A1(n83), .B0(n16), .Y(n119) );
  INVX1 U119 ( .A(n119), .Y(n84) );
  NOR2XL U120 ( .A(n113), .B(n91), .Y(n81) );
  NAND3BX1 U121 ( .AN(n88), .B(n114), .C(n61), .Y(n62) );
  INVX1 U122 ( .A(n83), .Y(n89) );
  NAND3BXL U123 ( .AN(n121), .B(n45), .C(n11), .Y(n18) );
  INVX1 U124 ( .A(n78), .Y(n30) );
  NAND2BXL U125 ( .AN(n11), .B(n93), .Y(n77) );
  OAI211XL U126 ( .A0(n78), .A1(n68), .B0(n61), .C0(n93), .Y(n21) );
  NOR2XL U127 ( .A(n12), .B(LAW), .Y(n33) );
  NAND2XL U128 ( .A(n30), .B(n56), .Y(n31) );
  NOR2XL U129 ( .A(LAW), .B(n125), .Y(mag[13]) );
  INVX1 U130 ( .A(n124), .Y(n125) );
  NAND2BX1 U131 ( .AN(n91), .B(n100), .Y(n54) );
  INVX1 U132 ( .A(n12), .Y(n121) );
  INVX1 U133 ( .A(n11), .Y(n69) );
  NAND2XL U134 ( .A(PCM[2]), .B(n88), .Y(n66) );
  MXI2X1 U135 ( .A(n7), .B(n39), .S0(n11), .Y(n40) );
  NOR2XL U136 ( .A(PCM[2]), .B(n88), .Y(n39) );
  XNOR2XL U137 ( .A(PCM[7]), .B(LAW), .Y(n124) );
  NAND2BX1 U138 ( .AN(n11), .B(PCM[0]), .Y(n61) );
  NAND2X4 U139 ( .A(n68), .B(n93), .Y(n88) );
  XOR2X4 U140 ( .A(n15), .B(LAW), .Y(n16) );
  CLKINVX3 U141 ( .A(n58), .Y(n46) );
  BUFX3 U1 ( .A(N44), .Y(n11) );
endmodule


module EXPAND_1 ( SIN, LAW, SOUT );
  input [7:0] SIN;
  output [13:0] SOUT;
  input LAW;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, SOUT_0_;
  wire   [13:0] SS;
  assign SOUT[0] = SOUT_0_;

  MXI2X1 U3 ( .A(SS[1]), .B(SS[0]), .S0(n16), .Y(n19) );
  MXI2X1 U4 ( .A(SS[2]), .B(SS[1]), .S0(n16), .Y(n21) );
  NOR2X1 U5 ( .A(n15), .B(n45), .Y(n42) );
  CLKINVX3 U6 ( .A(n41), .Y(n45) );
  NAND2BX1 U7 ( .AN(n39), .B(n40), .Y(n41) );
  AOI21X2 U8 ( .A0(n45), .A1(n44), .B0(n15), .Y(SOUT[13]) );
  AOI21X1 U9 ( .A0(n14), .A1(n34), .B0(n43), .Y(n1) );
  INVX1 U10 ( .A(n1), .Y(n35) );
  AND3X2 U11 ( .A(n14), .B(n34), .C(n36), .Y(n13) );
  XNOR2X1 U12 ( .A(n4), .B(n10), .Y(SOUT[6]) );
  NOR2BX1 U13 ( .AN(n29), .B(n30), .Y(n31) );
  NAND2BX1 U14 ( .AN(n43), .B(n39), .Y(n38) );
  AOI21X1 U15 ( .A0(n19), .A1(n18), .B0(n43), .Y(n2) );
  INVX1 U16 ( .A(n2), .Y(n20) );
  NOR2BX2 U17 ( .AN(n3), .B(n33), .Y(n14) );
  AND3X2 U18 ( .A(n19), .B(n18), .C(n21), .Y(n24) );
  XOR2X1 U19 ( .A(n32), .B(n3), .Y(SOUT[7]) );
  NOR2XL U20 ( .A(n15), .B(n31), .Y(n10) );
  XNOR2X2 U21 ( .A(n44), .B(n42), .Y(SOUT[12]) );
  XOR2X1 U22 ( .A(n38), .B(n40), .Y(SOUT[11]) );
  AND2X2 U23 ( .A(n6), .B(n7), .Y(n3) );
  NAND2BXL U24 ( .AN(n15), .B(n33), .Y(n32) );
  MXI2X1 U25 ( .A(SS[4]), .B(SS[3]), .S0(n16), .Y(n26) );
  NAND2X1 U26 ( .A(n24), .B(n23), .Y(n27) );
  MXI2X1 U27 ( .A(SS[5]), .B(SS[4]), .S0(n16), .Y(n29) );
  NAND2BX1 U28 ( .AN(n27), .B(n26), .Y(n30) );
  MXI2X1 U29 ( .A(SS[3]), .B(SS[2]), .S0(n16), .Y(n23) );
  XNOR2X1 U30 ( .A(n37), .B(n11), .Y(SOUT[10]) );
  NOR2X1 U31 ( .A(n15), .B(n13), .Y(n11) );
  NAND2X1 U32 ( .A(n13), .B(n37), .Y(n39) );
  NAND2X1 U33 ( .A(SS[7]), .B(n5), .Y(n6) );
  AND2X2 U34 ( .A(n8), .B(n9), .Y(n4) );
  BUFX3 U35 ( .A(LAW), .Y(n16) );
  MXI2X1 U36 ( .A(SS[13]), .B(SS[12]), .S0(n16), .Y(n43) );
  XOR2XL U37 ( .A(n28), .B(n29), .Y(SOUT[5]) );
  XOR2X1 U38 ( .A(n35), .B(n36), .Y(SOUT[9]) );
  MXI2X1 U39 ( .A(SS[8]), .B(SS[7]), .S0(n16), .Y(n34) );
  NAND2XL U40 ( .A(SS[6]), .B(n5), .Y(n8) );
  NAND2XL U41 ( .A(SS[6]), .B(n16), .Y(n7) );
  INVXL U42 ( .A(n16), .Y(n5) );
  MXI2X1 U43 ( .A(SS[10]), .B(SS[9]), .S0(n16), .Y(n37) );
  MXI2X1 U44 ( .A(SS[9]), .B(SS[8]), .S0(n16), .Y(n36) );
  NAND2XL U45 ( .A(SS[5]), .B(n16), .Y(n9) );
  NAND2X1 U46 ( .A(n31), .B(n4), .Y(n33) );
  MXI2X1 U47 ( .A(SS[11]), .B(SS[10]), .S0(n16), .Y(n40) );
  INVXL U48 ( .A(n18), .Y(SOUT_0_) );
  XNOR2X1 U49 ( .A(n34), .B(n12), .Y(SOUT[8]) );
  NOR2XL U50 ( .A(n15), .B(n14), .Y(n12) );
  MXI2XL U51 ( .A(SS[12]), .B(SS[11]), .S0(n16), .Y(n44) );
  NAND2BXL U52 ( .AN(n15), .B(n27), .Y(n25) );
  NAND2BX1 U53 ( .AN(n16), .B(SS[0]), .Y(n18) );
  NAND2BXL U54 ( .AN(n15), .B(n30), .Y(n28) );
  XNOR2X1 U55 ( .A(n19), .B(n17), .Y(SOUT[1]) );
  NOR2X1 U56 ( .A(n15), .B(n18), .Y(n17) );
  XNOR2XL U57 ( .A(n22), .B(n23), .Y(SOUT[3]) );
  BUFX3 U58 ( .A(n43), .Y(n15) );
  XOR2XL U59 ( .A(n25), .B(n26), .Y(SOUT[4]) );
  XOR2XL U60 ( .A(n20), .B(n21), .Y(SOUT[2]) );
  NOR2XL U61 ( .A(n15), .B(n24), .Y(n22) );
  G711_1 inst_G711 ( .LAW(LAW), .PCM(SIN), .mag(SS) );
endmodule


module SUBTA_1_DW01_add_2 ( A, B, CI, SUM, CO );
  input [16:0] A;
  input [16:0] B;
  output [16:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n21, n22, n23, n24, n25, n26, n28, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40, n41, n42, n43, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n56, n57, n60, n61, n62, n63, n65, n68, n69, n70,
         n71, n72, n73, n74, n77, n78, n79, n80, n81, n82, n84, n85, n88, n89,
         n90, n91, n93, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n121, n122, SUM_0_, SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_,
         SUM_6_, SUM_7_, SUM_8_, SUM_9_, SUM_10_, SUM_11_, SUM_12_, SUM_13_,
         SUM_14_, SUM_15_, B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_,
         B_8_, B_9_, B_10_, B_11_, B_12_, B_13_, B_14_, B_15_, A_0_, A_1_,
         A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_, A_10_, A_11_, A_12_,
         A_13_, A_14_, A_15_, n190, n191, n192, n193, n194, n195;
  assign SUM[0] = SUM_0_;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign SUM[15] = SUM_15_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign B_13_ = B[13];
  assign B_14_ = B[14];
  assign B_15_ = B[15];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];

  XOR2X4 U2 ( .A(n22), .B(n4), .Y(SUM_15_) );
  AOI21X4 U8 ( .A0(n1), .A1(n23), .B0(n24), .Y(n22) );
  AOI21X4 U46 ( .A0(n50), .A1(n63), .B0(n51), .Y(n2) );
  INVX2 U153 ( .A(n43), .Y(n121) );
  OAI21X1 U154 ( .A0(n2), .A1(n43), .B0(n46), .Y(n42) );
  NOR2X4 U155 ( .A(B_12_), .B(A_12_), .Y(n43) );
  NOR2X2 U156 ( .A(n43), .B(n38), .Y(n36) );
  XOR2X1 U157 ( .A(n40), .B(n6), .Y(SUM_13_) );
  XOR2X1 U158 ( .A(n31), .B(n192), .Y(SUM_14_) );
  NOR2X2 U159 ( .A(B_9_), .B(A_9_), .Y(n68) );
  NOR2X1 U160 ( .A(B_13_), .B(A_13_), .Y(n38) );
  NAND2X2 U161 ( .A(n36), .B(n194), .Y(n25) );
  NOR2BX1 U162 ( .AN(n117), .B(n116), .Y(SUM_0_) );
  AOI31X1 U163 ( .A0(n190), .A1(n103), .A2(n90), .B0(n84), .Y(n82) );
  INVX1 U164 ( .A(n85), .Y(n190) );
  NOR2XL U165 ( .A(n34), .B(n3), .Y(n32) );
  NAND2BX1 U166 ( .AN(n80), .B(n81), .Y(n12) );
  NAND2BX1 U167 ( .AN(n96), .B(n97), .Y(n14) );
  NAND2BX1 U168 ( .AN(n38), .B(n39), .Y(n6) );
  AOI31X1 U169 ( .A0(n191), .A1(n1), .A2(n62), .B0(n56), .Y(n54) );
  OAI21XL U170 ( .A0(n34), .A1(n2), .B0(n35), .Y(n33) );
  NAND2BX1 U171 ( .AN(n114), .B(n115), .Y(n18) );
  INVXL U172 ( .A(n57), .Y(n191) );
  NAND2BX1 U173 ( .AN(n107), .B(n108), .Y(n16) );
  NAND2BXL U174 ( .AN(n68), .B(n69), .Y(n10) );
  XOR2X1 U175 ( .A(n47), .B(n7), .Y(SUM_12_) );
  NAND2BX1 U176 ( .AN(n110), .B(n111), .Y(n17) );
  NAND2BXL U177 ( .AN(n85), .B(n88), .Y(n13) );
  OAI21X1 U178 ( .A0(n52), .A1(n60), .B0(n53), .Y(n51) );
  NAND3X1 U179 ( .A(n103), .B(n90), .C(n78), .Y(n193) );
  NOR2X1 U180 ( .A(n85), .B(n80), .Y(n78) );
  NOR2X2 U181 ( .A(B_6_), .B(A_6_), .Y(n85) );
  NAND2X2 U182 ( .A(n62), .B(n50), .Y(n3) );
  AOI21X1 U183 ( .A0(n1), .A1(n32), .B0(n33), .Y(n31) );
  NOR2X2 U184 ( .A(n57), .B(n52), .Y(n50) );
  NOR2X1 U185 ( .A(B_10_), .B(A_10_), .Y(n57) );
  NAND2X1 U186 ( .A(B_0_), .B(A_0_), .Y(n117) );
  NOR2X2 U187 ( .A(B_11_), .B(A_11_), .Y(n52) );
  NAND2X1 U188 ( .A(B_11_), .B(A_11_), .Y(n53) );
  NOR2X1 U189 ( .A(B_3_), .B(A_3_), .Y(n107) );
  AOI21X1 U190 ( .A0(n37), .A1(n194), .B0(n28), .Y(n26) );
  AOI21X1 U191 ( .A0(n78), .A1(n91), .B0(n79), .Y(n77) );
  XOR2X2 U192 ( .A(n70), .B(n10), .Y(SUM_9_) );
  OAI21X2 U193 ( .A0(n46), .A1(n38), .B0(n39), .Y(n37) );
  XOR2X1 U194 ( .A(n61), .B(n9), .Y(SUM_10_) );
  OAI21X2 U195 ( .A0(n68), .A1(n74), .B0(n69), .Y(n63) );
  INVX1 U196 ( .A(n73), .Y(n71) );
  INVX1 U197 ( .A(n74), .Y(n72) );
  XOR2X1 U198 ( .A(n98), .B(n14), .Y(SUM_5_) );
  NAND2X1 U199 ( .A(B_9_), .B(A_9_), .Y(n69) );
  XOR2X2 U200 ( .A(n54), .B(n8), .Y(SUM_11_) );
  NAND2X1 U201 ( .A(n122), .B(n53), .Y(n8) );
  NOR2X1 U202 ( .A(n73), .B(n68), .Y(n62) );
  NAND2X1 U203 ( .A(B_4_), .B(A_4_), .Y(n102) );
  NOR2X1 U204 ( .A(B_5_), .B(A_5_), .Y(n96) );
  OAI21XL U205 ( .A0(n114), .A1(n117), .B0(n115), .Y(n113) );
  NAND2X1 U206 ( .A(B_2_), .B(A_2_), .Y(n111) );
  NOR2X1 U207 ( .A(B_2_), .B(A_2_), .Y(n110) );
  OAI21XL U208 ( .A0(n96), .A1(n102), .B0(n97), .Y(n91) );
  OAI21X2 U209 ( .A0(n2), .A1(n25), .B0(n26), .Y(n24) );
  NOR2X2 U210 ( .A(n3), .B(n25), .Y(n23) );
  INVX1 U211 ( .A(n104), .Y(n103) );
  OAI21XL U212 ( .A0(n80), .A1(n88), .B0(n81), .Y(n79) );
  NAND2XL U213 ( .A(B_15_), .B(A_14_), .Y(n30) );
  NOR2X1 U214 ( .A(n101), .B(n96), .Y(n90) );
  NOR2X1 U215 ( .A(B_4_), .B(A_4_), .Y(n101) );
  NAND2X2 U216 ( .A(B_12_), .B(A_12_), .Y(n46) );
  AOI21XL U217 ( .A0(n1), .A1(n62), .B0(n63), .Y(n61) );
  OR2X2 U218 ( .A(B_14_), .B(A_14_), .Y(n194) );
  NAND2BX1 U219 ( .AN(n57), .B(n60), .Y(n9) );
  NAND2XL U220 ( .A(n71), .B(n74), .Y(n11) );
  XNOR2X1 U221 ( .A(n1), .B(n11), .Y(SUM_8_) );
  NAND2X1 U222 ( .A(n194), .B(n30), .Y(n192) );
  NOR2XL U223 ( .A(n110), .B(n107), .Y(n105) );
  NAND2XL U224 ( .A(B_6_), .B(A_6_), .Y(n88) );
  XOR2X1 U225 ( .A(n82), .B(n12), .Y(SUM_7_) );
  NAND2XL U226 ( .A(B_5_), .B(A_5_), .Y(n97) );
  NAND2XL U227 ( .A(B_1_), .B(A_1_), .Y(n115) );
  NAND2X1 U228 ( .A(B_13_), .B(A_13_), .Y(n39) );
  NOR2XL U229 ( .A(B_0_), .B(A_0_), .Y(n116) );
  NAND2X4 U230 ( .A(n193), .B(n77), .Y(n1) );
  AOI21X2 U231 ( .A0(n1), .A1(n48), .B0(n49), .Y(n47) );
  INVX1 U232 ( .A(n3), .Y(n48) );
  XOR2X1 U233 ( .A(n112), .B(n17), .Y(SUM_2_) );
  XOR2X1 U234 ( .A(n89), .B(n13), .Y(SUM_6_) );
  AOI21X1 U235 ( .A0(n103), .A1(n90), .B0(n91), .Y(n89) );
  INVX1 U236 ( .A(n30), .Y(n28) );
  INVXL U237 ( .A(n37), .Y(n35) );
  XNOR2X1 U238 ( .A(n103), .B(n15), .Y(SUM_4_) );
  NAND2X1 U239 ( .A(n99), .B(n102), .Y(n15) );
  OAI21XL U240 ( .A0(n93), .A1(n85), .B0(n88), .Y(n84) );
  INVX1 U241 ( .A(n91), .Y(n93) );
  OAI21XL U242 ( .A0(n65), .A1(n57), .B0(n60), .Y(n56) );
  INVXL U243 ( .A(n63), .Y(n65) );
  NOR2XL U244 ( .A(n3), .B(n43), .Y(n41) );
  INVX1 U245 ( .A(n101), .Y(n99) );
  INVXL U246 ( .A(n36), .Y(n34) );
  INVXL U247 ( .A(n2), .Y(n49) );
  INVX1 U248 ( .A(n102), .Y(n100) );
  AOI21X1 U249 ( .A0(n105), .A1(n113), .B0(n106), .Y(n104) );
  OAI21XL U250 ( .A0(n107), .A1(n111), .B0(n108), .Y(n106) );
  AOI21X1 U251 ( .A0(n103), .A1(n99), .B0(n100), .Y(n98) );
  NAND2X1 U252 ( .A(B_10_), .B(A_10_), .Y(n60) );
  NAND2X1 U253 ( .A(B_8_), .B(A_8_), .Y(n74) );
  NOR2X1 U254 ( .A(B_8_), .B(A_8_), .Y(n73) );
  AOI21X1 U255 ( .A0(n1), .A1(n71), .B0(n72), .Y(n70) );
  XNOR2X1 U256 ( .A(n109), .B(n16), .Y(SUM_3_) );
  OAI21XL U257 ( .A0(n112), .A1(n110), .B0(n111), .Y(n109) );
  INVXL U258 ( .A(n52), .Y(n122) );
  AOI21X1 U259 ( .A0(n1), .A1(n41), .B0(n42), .Y(n40) );
  INVX1 U260 ( .A(n113), .Y(n112) );
  NAND2X1 U261 ( .A(n195), .B(n21), .Y(n4) );
  NOR2X2 U262 ( .A(B_7_), .B(A_7_), .Y(n80) );
  NOR2X1 U263 ( .A(B_1_), .B(A_1_), .Y(n114) );
  XOR2X1 U264 ( .A(n18), .B(n117), .Y(SUM_1_) );
  NAND2XL U265 ( .A(B_7_), .B(A_7_), .Y(n81) );
  NAND2X1 U266 ( .A(B_3_), .B(A_3_), .Y(n108) );
  NAND2XL U267 ( .A(B_15_), .B(A_15_), .Y(n21) );
  OR2XL U268 ( .A(B_15_), .B(A_15_), .Y(n195) );
  NAND2XL U269 ( .A(n121), .B(n46), .Y(n7) );
endmodule


module SUBTA_1 ( SL, SE, D );
  input [13:0] SL;
  input [14:0] SE;
  output [15:0] D;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N16, N15, N14, N13, N12, N11, N10, N1,
         N0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, SYNOPSYS_UNCONNECTED__0;
  assign N0 = SE[0];

  XOR2X1 U3 ( .A(n11), .B(n5), .Y(N12) );
  XOR2X1 U4 ( .A(n17), .B(n2), .Y(N6) );
  INVX1 U5 ( .A(SE[4]), .Y(n19) );
  INVX1 U6 ( .A(SE[2]), .Y(n21) );
  INVX1 U7 ( .A(SE[6]), .Y(n17) );
  INVX1 U8 ( .A(SE[8]), .Y(n15) );
  INVX1 U9 ( .A(SE[10]), .Y(n13) );
  INVX1 U10 ( .A(SE[12]), .Y(n11) );
  INVX1 U11 ( .A(SE[14]), .Y(n9) );
  NOR2X1 U12 ( .A(n16), .B(SE[7]), .Y(n3) );
  XOR2XL U13 ( .A(n19), .B(n1), .Y(N4) );
  XOR2XL U14 ( .A(n13), .B(n4), .Y(N10) );
  XOR2XL U15 ( .A(n21), .B(n7), .Y(N2) );
  NAND2XL U16 ( .A(n6), .B(n9), .Y(n8) );
  XOR2XL U17 ( .A(N0), .B(SE[1]), .Y(N1) );
  INVX1 U18 ( .A(n8), .Y(N16) );
  NAND2X1 U19 ( .A(n7), .B(n21), .Y(n20) );
  NAND2X1 U20 ( .A(n1), .B(n19), .Y(n18) );
  NAND2X1 U21 ( .A(n2), .B(n17), .Y(n16) );
  NAND2X1 U22 ( .A(n3), .B(n15), .Y(n14) );
  NAND2X1 U23 ( .A(n4), .B(n13), .Y(n12) );
  NAND2X1 U24 ( .A(n5), .B(n11), .Y(n10) );
  XOR2X1 U25 ( .A(n9), .B(n6), .Y(N14) );
  XOR2X1 U26 ( .A(n15), .B(n3), .Y(N8) );
  NOR2BX1 U27 ( .AN(n8), .B(SE[14]), .Y(N15) );
  NOR2X1 U28 ( .A(n20), .B(SE[3]), .Y(n1) );
  NOR2X1 U29 ( .A(n18), .B(SE[5]), .Y(n2) );
  NOR2X1 U30 ( .A(n14), .B(SE[9]), .Y(n4) );
  NOR2X1 U31 ( .A(n12), .B(SE[11]), .Y(n5) );
  NOR2X1 U32 ( .A(n10), .B(SE[13]), .Y(n6) );
  NOR2X1 U33 ( .A(N0), .B(SE[1]), .Y(n7) );
  XOR2X1 U34 ( .A(n10), .B(SE[13]), .Y(N13) );
  XOR2X1 U35 ( .A(n14), .B(SE[9]), .Y(N9) );
  XOR2X1 U36 ( .A(n16), .B(SE[7]), .Y(N7) );
  XOR2X1 U37 ( .A(n12), .B(SE[11]), .Y(N11) );
  XOR2X1 U38 ( .A(n18), .B(SE[5]), .Y(N5) );
  XOR2X1 U39 ( .A(n20), .B(SE[3]), .Y(N3) );
  SUBTA_1_DW01_add_2 add_0_root_sub_0_root_sub_59 ( .A({N16, N15, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), .B({1'b0, 
        SL[13], SL[13], SL}), .CI(1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, D}) );
endmodule


module IN_PCM ( S, SE, LAW, D );
  input [7:0] S;
  input [14:0] SE;
  output [15:0] D;
  input LAW;

  wire   [13:0] SL;

  EXPAND_1 IEXPAND ( .SIN(S), .LAW(LAW), .SOUT(SL) );
  SUBTA_1 ISUBTA ( .SL(SL), .SE(SE), .D(D) );
endmodule


module LOG_1 ( D, DL, DS );
  input [15:0] D;
  output [10:0] DL;
  output DS;
  wire   n211, n212, N4, n1, n2, n3, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99,
         n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176,
         n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187,
         n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198,
         n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209,
         DL_10_;
  assign N4 = D[0];
  assign DL[10] = DL_10_;

  MXI2X1 U3 ( .A(n30), .B(n29), .S0(DS), .Y(n31) );
  AOI22X1 U4 ( .A0(n201), .A1(n199), .B0(n146), .B1(n202), .Y(n147) );
  NAND4X1 U5 ( .A(n145), .B(n144), .C(n143), .D(n142), .Y(n202) );
  OAI211X2 U6 ( .A0(n115), .A1(n138), .B0(n114), .C0(n113), .Y(DL[0]) );
  NAND4BX2 U7 ( .AN(n191), .B(n190), .C(n189), .D(n188), .Y(DL[5]) );
  NAND4X2 U8 ( .A(n3), .B(n208), .C(n207), .D(n206), .Y(DL[6]) );
  OAI211X2 U9 ( .A0(n128), .A1(n138), .B0(n127), .C0(n126), .Y(DL[1]) );
  BUFX12 U10 ( .A(n211), .Y(DL[8]) );
  XNOR2X1 U11 ( .A(D[14]), .B(DS), .Y(n60) );
  NOR2X1 U12 ( .A(n159), .B(n158), .Y(n160) );
  NOR2X1 U13 ( .A(n13), .B(n6), .Y(n24) );
  NAND2X1 U14 ( .A(n185), .B(n201), .Y(n127) );
  INVX1 U15 ( .A(n186), .Y(n128) );
  AND4X2 U16 ( .A(n21), .B(n17), .C(n57), .D(n1), .Y(n36) );
  NAND4X1 U17 ( .A(n137), .B(n136), .C(n135), .D(n134), .Y(n199) );
  AND2X2 U18 ( .A(n42), .B(n184), .Y(n44) );
  NAND2X1 U19 ( .A(n32), .B(n35), .Y(n197) );
  INVX1 U20 ( .A(n32), .Y(n38) );
  NAND2X1 U21 ( .A(n200), .B(n199), .Y(n208) );
  NAND2X1 U22 ( .A(n47), .B(n52), .Y(n102) );
  NAND2XL U23 ( .A(n139), .B(n120), .Y(n110) );
  OR2XL U24 ( .A(DL_10_), .B(DL[9]), .Y(n203) );
  NAND2BX2 U25 ( .AN(n211), .B(DL[7]), .Y(n198) );
  INVX1 U26 ( .A(n53), .Y(n1) );
  MXI2X1 U27 ( .A(n160), .B(n161), .S0(DL[9]), .Y(n169) );
  OAI222XL U28 ( .A0(n196), .A1(n184), .B0(n173), .B1(n172), .C0(n198), .C1(
        n174), .Y(n2) );
  INVX1 U29 ( .A(n2), .Y(n175) );
  NAND2X1 U30 ( .A(n42), .B(n60), .Y(n84) );
  NOR2X2 U31 ( .A(n95), .B(n61), .Y(n88) );
  INVX1 U32 ( .A(n209), .Y(n3) );
  NAND2X1 U33 ( .A(D[6]), .B(n47), .Y(n8) );
  NAND2XL U34 ( .A(n170), .B(DL[9]), .Y(n176) );
  AOI2BB2X1 U35 ( .B0(n81), .B1(n80), .A0N(DL_10_), .A1N(n101), .Y(n82) );
  AND2X2 U36 ( .A(n30), .B(n59), .Y(n13) );
  INVX1 U37 ( .A(n23), .Y(n59) );
  NAND2X1 U38 ( .A(n201), .B(n202), .Y(n207) );
  INVX1 U39 ( .A(DL[9]), .Y(n201) );
  NAND4BXL U40 ( .AN(n112), .B(n109), .C(n111), .D(n110), .Y(n171) );
  NAND2XL U41 ( .A(n193), .B(n192), .Y(n194) );
  NAND3X1 U42 ( .A(n100), .B(n197), .C(n11), .Y(DL[9]) );
  INVX1 U43 ( .A(n184), .Y(n193) );
  NAND2BX1 U44 ( .AN(n89), .B(n90), .Y(n92) );
  OR2X2 U45 ( .A(n178), .B(n176), .Y(n113) );
  OAI2BB1X2 U46 ( .A0N(n204), .A1N(n200), .B0(n147), .Y(DL[2]) );
  NAND3BX1 U47 ( .AN(D[12]), .B(n15), .C(n36), .Y(n32) );
  AND2X2 U48 ( .A(n36), .B(n15), .Y(n10) );
  NAND4BBX1 U49 ( .AN(D[13]), .BN(D[12]), .C(n15), .D(n36), .Y(n37) );
  OAI21X1 U50 ( .A0(n157), .A1(n198), .B0(n156), .Y(n158) );
  NAND2X1 U51 ( .A(n192), .B(n155), .Y(n156) );
  BUFX4 U52 ( .A(n212), .Y(DL[3]) );
  NAND2BX2 U53 ( .AN(n55), .B(n54), .Y(n101) );
  NAND3X1 U54 ( .A(n88), .B(n164), .C(n155), .Y(n79) );
  NAND4X1 U55 ( .A(n107), .B(n106), .C(n105), .D(n104), .Y(n179) );
  NAND4X1 U56 ( .A(n116), .B(n174), .C(n172), .D(n60), .Y(n61) );
  NAND3BX2 U57 ( .AN(n84), .B(n83), .C(n82), .Y(n211) );
  NOR2X1 U58 ( .A(D[11]), .B(D[10]), .Y(n15) );
  NAND2BX1 U59 ( .AN(D[1]), .B(n131), .Y(n75) );
  NAND2X1 U60 ( .A(n172), .B(n174), .Y(n89) );
  NAND2X1 U61 ( .A(n205), .B(n204), .Y(n206) );
  CLKINVX3 U62 ( .A(DL[7]), .Y(n125) );
  INVX1 U63 ( .A(n79), .Y(n74) );
  INVX1 U64 ( .A(D[13]), .Y(n40) );
  OAI21XL U65 ( .A0(n170), .A1(n169), .B0(n168), .Y(n212) );
  OAI21XL U66 ( .A0(n167), .A1(n166), .B0(n200), .Y(n168) );
  NAND2BX2 U67 ( .AN(n181), .B(n180), .Y(DL[4]) );
  OAI21XL U68 ( .A0(n177), .A1(n176), .B0(n175), .Y(n181) );
  OAI221XL U69 ( .A0(n198), .A1(n184), .B0(n196), .B1(n197), .C0(n183), .Y(
        n191) );
  INVX1 U70 ( .A(n179), .Y(n115) );
  AND2X2 U71 ( .A(n197), .B(n195), .Y(n5) );
  INVX1 U72 ( .A(D[9]), .Y(n6) );
  CLKINVX3 U73 ( .A(n196), .Y(n141) );
  NAND2BX4 U74 ( .AN(DL[7]), .B(DL[8]), .Y(n196) );
  INVX1 U75 ( .A(n94), .Y(n83) );
  NOR2X2 U76 ( .A(D[8]), .B(D[9]), .Y(n21) );
  AOI31X2 U77 ( .A0(n101), .A1(n170), .A2(n95), .B0(n94), .Y(n96) );
  NAND3X2 U78 ( .A(n102), .B(n101), .C(n103), .Y(n95) );
  MX2X1 U79 ( .A(D[6]), .B(n8), .S0(DS), .Y(n54) );
  NAND3X1 U80 ( .A(n88), .B(n5), .C(n155), .Y(n99) );
  NAND2BX1 U81 ( .AN(n89), .B(n116), .Y(n45) );
  NAND2BX2 U82 ( .AN(n10), .B(n43), .Y(n184) );
  NAND2XL U83 ( .A(n139), .B(n153), .Y(n107) );
  INVX1 U84 ( .A(D[3]), .Y(n66) );
  NAND2BX1 U85 ( .AN(D[2]), .B(n86), .Y(n77) );
  INVX1 U86 ( .A(N4), .Y(n131) );
  INVX1 U87 ( .A(n37), .Y(n41) );
  INVX1 U88 ( .A(D[10]), .Y(n27) );
  NOR2X1 U89 ( .A(n87), .B(n86), .Y(n129) );
  OAI21XL U90 ( .A0(n163), .A1(n79), .B0(n174), .Y(n80) );
  NAND3X1 U91 ( .A(n91), .B(n197), .C(n11), .Y(n73) );
  NAND4X1 U92 ( .A(n9), .B(n119), .C(n118), .D(n117), .Y(n186) );
  NAND2X1 U93 ( .A(n192), .B(n153), .Y(n117) );
  NAND2X1 U94 ( .A(n148), .B(n141), .Y(n119) );
  INVX1 U95 ( .A(n162), .Y(n187) );
  MXI2X1 U96 ( .A(n34), .B(n33), .S0(DS), .Y(n35) );
  NOR2X2 U97 ( .A(n10), .B(n34), .Y(n33) );
  INVX1 U98 ( .A(D[12]), .Y(n34) );
  NAND2X1 U99 ( .A(n171), .B(n201), .Y(n114) );
  INVX1 U100 ( .A(n176), .Y(n200) );
  NAND2BX1 U101 ( .AN(n193), .B(n5), .Y(n91) );
  CLKINVX3 U102 ( .A(D[15]), .Y(n20) );
  OR2X2 U103 ( .A(n7), .B(n172), .Y(n9) );
  NAND2BX2 U104 ( .AN(n36), .B(n25), .Y(n172) );
  NAND2BX4 U105 ( .AN(DL[8]), .B(n125), .Y(n173) );
  MXI2X1 U106 ( .A(n27), .B(n26), .S0(DS), .Y(n28) );
  NOR2XL U107 ( .A(n36), .B(n27), .Y(n26) );
  BUFX4 U108 ( .A(n165), .Y(n7) );
  NAND2BX2 U109 ( .AN(n12), .B(n28), .Y(n174) );
  CLKINVX2 U110 ( .A(n7), .Y(n140) );
  CLKINVX8 U111 ( .A(n20), .Y(DS) );
  NAND2BX1 U112 ( .AN(n59), .B(n58), .Y(n103) );
  INVXL U113 ( .A(n203), .Y(n205) );
  NAND4X1 U114 ( .A(n163), .B(n155), .C(n88), .D(n129), .Y(n90) );
  INVX4 U115 ( .A(n173), .Y(n192) );
  NOR2XL U116 ( .A(n55), .B(n57), .Y(n56) );
  AND2X2 U117 ( .A(n27), .B(n36), .Y(n12) );
  OR2X4 U118 ( .A(n41), .B(n14), .Y(n195) );
  MX2X1 U119 ( .A(n40), .B(n39), .S0(DS), .Y(n14) );
  NAND2BX1 U120 ( .AN(n20), .B(n41), .Y(n42) );
  NAND3BXL U121 ( .AN(D[3]), .B(n62), .C(n86), .Y(n63) );
  NOR2X2 U122 ( .A(D[5]), .B(D[6]), .Y(n17) );
  AOI2BB2XL U123 ( .B0(n179), .B1(n201), .A0N(n203), .A1N(n178), .Y(n180) );
  NAND2XL U124 ( .A(n141), .B(n154), .Y(n104) );
  NOR3X1 U125 ( .A(n152), .B(n151), .C(n150), .Y(n161) );
  INVXL U126 ( .A(n101), .Y(n153) );
  INVXL U127 ( .A(n116), .Y(n148) );
  INVXL U128 ( .A(n174), .Y(n182) );
  INVXL U129 ( .A(n164), .Y(n133) );
  INVXL U130 ( .A(n155), .Y(n132) );
  NOR2XL U131 ( .A(n59), .B(n30), .Y(n29) );
  MXI2XL U132 ( .A(n57), .B(n56), .S0(DS), .Y(n58) );
  NOR2XL U133 ( .A(n64), .B(n66), .Y(n65) );
  INVXL U134 ( .A(D[4]), .Y(n70) );
  INVXL U135 ( .A(n102), .Y(n157) );
  INVXL U136 ( .A(n163), .Y(n120) );
  NAND2BX1 U137 ( .AN(n12), .B(D[11]), .Y(n16) );
  NAND3BXL U138 ( .AN(D[7]), .B(n17), .C(n22), .Y(n23) );
  INVXL U139 ( .A(n53), .Y(n22) );
  NOR3XL U140 ( .A(n53), .B(D[5]), .C(D[6]), .Y(n55) );
  NAND2BXL U141 ( .AN(D[3]), .B(n64), .Y(n46) );
  INVXL U142 ( .A(D[2]), .Y(n62) );
  NAND2XL U143 ( .A(D[1]), .B(N4), .Y(n85) );
  NAND2XL U144 ( .A(n148), .B(n139), .Y(n145) );
  NAND2XL U145 ( .A(n132), .B(n139), .Y(n137) );
  NAND2XL U146 ( .A(n133), .B(n139), .Y(n124) );
  NAND2XL U147 ( .A(n139), .B(n154), .Y(n118) );
  INVX1 U148 ( .A(n91), .Y(n81) );
  INVX1 U149 ( .A(DL[8]), .Y(n108) );
  NAND2XL U150 ( .A(n99), .B(n170), .Y(n100) );
  NAND2X1 U151 ( .A(n140), .B(n153), .Y(n135) );
  NAND2X1 U152 ( .A(n157), .B(n141), .Y(n134) );
  NAND2XL U153 ( .A(n133), .B(n192), .Y(n136) );
  NAND2X1 U154 ( .A(n182), .B(n140), .Y(n143) );
  NAND2X1 U155 ( .A(n149), .B(n141), .Y(n142) );
  NAND2XL U156 ( .A(n192), .B(n154), .Y(n144) );
  INVX1 U157 ( .A(n77), .Y(n64) );
  NAND4X1 U158 ( .A(n124), .B(n123), .C(n122), .D(n121), .Y(n185) );
  NAND2X1 U159 ( .A(n157), .B(n140), .Y(n122) );
  NAND2XL U160 ( .A(n132), .B(n141), .Y(n121) );
  NAND2XL U161 ( .A(n192), .B(n120), .Y(n123) );
  INVX1 U162 ( .A(n103), .Y(n154) );
  NOR2XL U163 ( .A(n149), .B(n198), .Y(n150) );
  NOR2XL U164 ( .A(n148), .B(n173), .Y(n151) );
  INVX1 U165 ( .A(n84), .Y(n98) );
  NAND2XL U166 ( .A(DL[8]), .B(DL[7]), .Y(n165) );
  NAND2BX1 U167 ( .AN(n72), .B(n71), .Y(n155) );
  MXI2X1 U168 ( .A(n70), .B(n69), .S0(DS), .Y(n71) );
  NOR2X1 U169 ( .A(n68), .B(n70), .Y(n69) );
  NAND3BX1 U170 ( .AN(D[4]), .B(n66), .C(n64), .Y(n53) );
  NAND3BXL U171 ( .AN(n116), .B(DL[8]), .C(DL[7]), .Y(n105) );
  NAND2XL U172 ( .A(n157), .B(n192), .Y(n106) );
  NAND2BX1 U173 ( .AN(n13), .B(n31), .Y(n116) );
  INVX1 U174 ( .A(n172), .Y(n149) );
  NAND2BX1 U175 ( .AN(n68), .B(n67), .Y(n164) );
  MXI2X1 U176 ( .A(n66), .B(n65), .S0(DS), .Y(n67) );
  INVX1 U177 ( .A(D[8]), .Y(n30) );
  AND2X2 U178 ( .A(n98), .B(n195), .Y(n11) );
  INVX1 U179 ( .A(n49), .Y(n72) );
  NAND2BX1 U180 ( .AN(D[4]), .B(n48), .Y(n49) );
  OAI221XL U181 ( .A0(n198), .A1(n197), .B0(n196), .B1(n195), .C0(n194), .Y(
        n209) );
  NAND2XL U182 ( .A(n182), .B(n192), .Y(n183) );
  NAND3BXL U183 ( .AN(n176), .B(n187), .C(DL[8]), .Y(n126) );
  NAND2X1 U184 ( .A(n195), .B(n93), .Y(n97) );
  NAND3BXL U185 ( .AN(n203), .B(n187), .C(DL[8]), .Y(n188) );
  NAND2XL U186 ( .A(n186), .B(n201), .Y(n189) );
  NAND2XL U187 ( .A(n200), .B(n185), .Y(n190) );
  MXI2X1 U188 ( .A(n6), .B(n24), .S0(DS), .Y(n25) );
  INVX1 U189 ( .A(n75), .Y(n86) );
  NAND2BX1 U190 ( .AN(n78), .B(n77), .Y(n163) );
  MXI2X1 U191 ( .A(D[2]), .B(n76), .S0(DS), .Y(n78) );
  NAND2X1 U192 ( .A(D[2]), .B(n75), .Y(n76) );
  INVXL U193 ( .A(n138), .Y(n146) );
  INVX1 U194 ( .A(n46), .Y(n48) );
  MX2X1 U195 ( .A(D[11]), .B(n16), .S0(DS), .Y(n43) );
  INVX1 U196 ( .A(D[7]), .Y(n57) );
  MXI2XL U197 ( .A(n51), .B(n50), .S0(DS), .Y(n52) );
  NOR2X1 U198 ( .A(n72), .B(n51), .Y(n50) );
  INVX1 U199 ( .A(D[5]), .Y(n51) );
  INVXL U200 ( .A(n171), .Y(n177) );
  NAND3BX1 U201 ( .AN(D[5]), .B(n70), .C(n48), .Y(n47) );
  INVX1 U202 ( .A(n63), .Y(n68) );
  OAI221XL U203 ( .A0(n131), .A1(n198), .B0(n163), .B1(n7), .C0(n130), .Y(n204) );
  NAND2XL U204 ( .A(n141), .B(n129), .Y(n130) );
  NOR2XL U205 ( .A(DL[8]), .B(n162), .Y(n167) );
  NOR3XL U206 ( .A(n125), .B(n108), .C(n155), .Y(n112) );
  NAND2XL U207 ( .A(n133), .B(n141), .Y(n111) );
  NAND2XL U208 ( .A(n192), .B(n129), .Y(n109) );
  MXI2XL U209 ( .A(D[1]), .B(n85), .S0(DS), .Y(n87) );
  MXI2XL U210 ( .A(n129), .B(N4), .S0(n125), .Y(n162) );
  OAI22XL U211 ( .A0(n7), .A1(n164), .B0(n163), .B1(n196), .Y(n166) );
  NOR2XL U212 ( .A(n182), .B(n196), .Y(n152) );
  OAI22XL U213 ( .A0(n154), .A1(n7), .B0(n153), .B1(n196), .Y(n159) );
  NAND2XL U214 ( .A(DL[9]), .B(DL_10_), .Y(n138) );
  NAND3XL U215 ( .A(n92), .B(n174), .C(n81), .Y(n93) );
  INVX2 U216 ( .A(DL_10_), .Y(n170) );
  NAND4BX4 U217 ( .AN(n45), .B(n5), .C(n60), .D(n44), .Y(DL_10_) );
  NOR2X2 U218 ( .A(n38), .B(n40), .Y(n39) );
  OAI221X2 U219 ( .A0(n74), .A1(n99), .B0(DL_10_), .B1(n103), .C0(n73), .Y(n94) );
  OAI2BB1X4 U220 ( .A0N(n98), .A1N(n97), .B0(n96), .Y(DL[7]) );
  CLKINVX3 U221 ( .A(n198), .Y(n139) );
  NAND2X2 U222 ( .A(n140), .B(N4), .Y(n178) );
endmodule


module SUBTB_1_DW01_add_5 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n22, n24, n26, n27, n28, n29, n30, n31, n32, n33,
         n34, n37, n39, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n61, n62, n63, n64, n66, n69, n70,
         n71, n74, n75, n76, n77, n78, n80, n81, n82, n83, n84, n85, n86, n87,
         n88, n89, n90, n92, n95, n96, n97, n98, n99, n100, n101, n102, SUM_1_,
         SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_, SUM_9_,
         SUM_10_, SUM_11_, B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_,
         B_8_, B_9_, B_10_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_,
         A_8_, A_9_, A_10_, n148, n149, n150, n151, n152, SUM_0_, n154, n155,
         n156, n157, n8;
  assign n17 = A[12];
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign SUM[0] = SUM_0_;

  NOR2X4 U78 ( .A(n77), .B(n74), .Y(n3) );
  AOI21X4 U91 ( .A0(n80), .A1(n88), .B0(n81), .Y(n1) );
  OAI21X4 U93 ( .A0(n82), .A1(n86), .B0(n83), .Y(n81) );
  OAI21X4 U106 ( .A0(n89), .A1(n92), .B0(n90), .Y(n88) );
  INVX2 U119 ( .A(n1), .Y(n148) );
  CLKINVX4 U120 ( .A(n148), .Y(n149) );
  CLKBUFX3 U121 ( .A(B_0_), .Y(n150) );
  NOR2X2 U122 ( .A(B_1_), .B(A_1_), .Y(n89) );
  OAI21XL U123 ( .A0(n1), .A1(n43), .B0(n44), .Y(n42) );
  XOR2X2 U124 ( .A(n149), .B(n12), .Y(SUM_4_) );
  OAI21XL U125 ( .A0(n149), .A1(n19), .B0(n20), .Y(n18) );
  XNOR2X4 U126 ( .A(n84), .B(n13), .Y(SUM_3_) );
  NAND2X1 U127 ( .A(B_1_), .B(A_1_), .Y(n90) );
  NOR2X2 U128 ( .A(B_6_), .B(A_6_), .Y(n5) );
  NAND2X2 U129 ( .A(B_6_), .B(A_6_), .Y(n4) );
  NAND2X2 U130 ( .A(B_0_), .B(A_0_), .Y(n92) );
  OAI21X1 U131 ( .A0(n87), .A1(n85), .B0(n86), .Y(n84) );
  NOR2X2 U132 ( .A(n82), .B(n85), .Y(n80) );
  NAND2BX1 U133 ( .AN(n27), .B(n28), .Y(n6) );
  XNOR2X1 U134 ( .A(n42), .B(n7), .Y(SUM_9_) );
  NAND2X1 U135 ( .A(n97), .B(n3), .Y(n63) );
  INVX1 U136 ( .A(n5), .Y(n97) );
  INVX1 U137 ( .A(n77), .Y(n99) );
  OAI21X1 U138 ( .A0(n1), .A1(n63), .B0(n64), .Y(n62) );
  OAI21X2 U139 ( .A0(n1), .A1(n77), .B0(n78), .Y(n76) );
  CLKINVX3 U140 ( .A(B_2_), .Y(n151) );
  INVX4 U141 ( .A(n151), .Y(n152) );
  NOR2X4 U142 ( .A(B_3_), .B(A_3_), .Y(n82) );
  XOR2X2 U143 ( .A(n87), .B(n14), .Y(SUM_2_) );
  OAI21XL U144 ( .A0(n149), .A1(n30), .B0(n31), .Y(n29) );
  OAI21XL U145 ( .A0(n1), .A1(n54), .B0(n55), .Y(n53) );
  OAI21XL U146 ( .A0(n1), .A1(n70), .B0(n71), .Y(n69) );
  INVX1 U147 ( .A(n82), .Y(n100) );
  INVX4 U148 ( .A(n88), .Y(n87) );
  NAND2X2 U149 ( .A(n152), .B(A_2_), .Y(n86) );
  NAND2X1 U150 ( .A(n49), .B(n157), .Y(n34) );
  OAI21XL U151 ( .A0(n51), .A1(n61), .B0(n52), .Y(n50) );
  NOR2X2 U152 ( .A(B_5_), .B(A_5_), .Y(n74) );
  NOR2X2 U153 ( .A(B_2_), .B(A_2_), .Y(n85) );
  NAND2X1 U154 ( .A(B_3_), .B(A_3_), .Y(n83) );
  XNOR2X1 U155 ( .A(n29), .B(n6), .Y(SUM_10_) );
  OR2X2 U156 ( .A(A_9_), .B(B_9_), .Y(n157) );
  NOR2X1 U157 ( .A(B_8_), .B(A_8_), .Y(n51) );
  INVX1 U158 ( .A(n26), .Y(n24) );
  NOR2X2 U159 ( .A(B_4_), .B(A_4_), .Y(n77) );
  NAND2X2 U160 ( .A(B_4_), .B(A_4_), .Y(n78) );
  NAND2X1 U161 ( .A(n100), .B(n83), .Y(n13) );
  NAND2X1 U162 ( .A(n96), .B(n61), .Y(n9) );
  NOR2X1 U163 ( .A(n51), .B(n58), .Y(n49) );
  NOR2X1 U164 ( .A(n5), .B(n58), .Y(n56) );
  AND2X1 U165 ( .A(n155), .B(n92), .Y(SUM_0_) );
  NAND2X1 U166 ( .A(n3), .B(n21), .Y(n19) );
  AOI21XL U167 ( .A0(n21), .A1(n2), .B0(n22), .Y(n20) );
  NAND2X1 U168 ( .A(B_5_), .B(A_5_), .Y(n75) );
  XNOR2X1 U169 ( .A(n62), .B(n9), .Y(SUM_7_) );
  NAND2XL U170 ( .A(n3), .B(n56), .Y(n54) );
  NOR2X1 U171 ( .A(n5), .B(n156), .Y(n21) );
  OAI21XL U172 ( .A0(n37), .A1(n27), .B0(n28), .Y(n26) );
  OAI21XL U173 ( .A0(n4), .A1(n156), .B0(n24), .Y(n22) );
  OAI21X4 U174 ( .A0(n74), .A1(n78), .B0(n75), .Y(n2) );
  XOR2X2 U175 ( .A(n53), .B(n154), .Y(SUM_8_) );
  AND2X2 U176 ( .A(n95), .B(n52), .Y(n154) );
  AOI21XL U177 ( .A0(n56), .A1(n2), .B0(n57), .Y(n55) );
  OAI21XL U178 ( .A0(n4), .A1(n58), .B0(n61), .Y(n57) );
  XNOR2X1 U179 ( .A(n76), .B(n11), .Y(SUM_5_) );
  NAND2X1 U180 ( .A(n98), .B(n75), .Y(n11) );
  XNOR2X1 U181 ( .A(n69), .B(n10), .Y(SUM_6_) );
  AOI21XL U182 ( .A0(n32), .A1(n2), .B0(n33), .Y(n31) );
  AOI21XL U183 ( .A0(n45), .A1(n2), .B0(n46), .Y(n44) );
  INVXL U184 ( .A(n50), .Y(n48) );
  INVXL U185 ( .A(n51), .Y(n95) );
  NAND2XL U186 ( .A(n3), .B(n45), .Y(n43) );
  NAND2XL U187 ( .A(n157), .B(n41), .Y(n7) );
  INVXL U188 ( .A(n58), .Y(n96) );
  OR2XL U189 ( .A(n150), .B(A_0_), .Y(n155) );
  INVX1 U190 ( .A(n49), .Y(n47) );
  NAND2XL U191 ( .A(n3), .B(n32), .Y(n30) );
  INVX1 U192 ( .A(n2), .Y(n71) );
  INVXL U193 ( .A(n3), .Y(n70) );
  NAND2XL U194 ( .A(n101), .B(n86), .Y(n14) );
  INVXL U195 ( .A(n85), .Y(n101) );
  AOI21X1 U196 ( .A0(n50), .A1(n157), .B0(n39), .Y(n37) );
  INVX1 U197 ( .A(n41), .Y(n39) );
  NOR2XL U198 ( .A(n5), .B(n47), .Y(n45) );
  NOR2XL U199 ( .A(n5), .B(n34), .Y(n32) );
  OAI21XL U200 ( .A0(n4), .A1(n47), .B0(n48), .Y(n46) );
  OR2X2 U201 ( .A(n34), .B(n27), .Y(n156) );
  OAI21XL U202 ( .A0(n4), .A1(n34), .B0(n37), .Y(n33) );
  AOI21XL U203 ( .A0(n2), .A1(n97), .B0(n66), .Y(n64) );
  INVXL U204 ( .A(n4), .Y(n66) );
  NAND2XL U205 ( .A(n99), .B(n78), .Y(n12) );
  INVXL U206 ( .A(n74), .Y(n98) );
  NAND2XL U207 ( .A(n97), .B(n4), .Y(n10) );
  NOR2XL U208 ( .A(B_7_), .B(A_7_), .Y(n58) );
  NAND2XL U209 ( .A(B_7_), .B(A_7_), .Y(n61) );
  NAND2XL U210 ( .A(A_9_), .B(B_9_), .Y(n41) );
  NAND2XL U211 ( .A(B_8_), .B(n8), .Y(n52) );
  XOR2XL U212 ( .A(n15), .B(n92), .Y(SUM_1_) );
  NAND2XL U213 ( .A(n102), .B(n90), .Y(n15) );
  INVXL U214 ( .A(n89), .Y(n102) );
  XNOR2X2 U215 ( .A(n18), .B(n17), .Y(SUM_11_) );
  NAND2XL U216 ( .A(A_10_), .B(B_10_), .Y(n28) );
  NOR2X1 U217 ( .A(A_10_), .B(B_10_), .Y(n27) );
  CLKBUFXL U1 ( .A(A_8_), .Y(n8) );
endmodule


module SUBTB_1 ( DL, DLN, Y );
  input [10:0] DL;
  output [11:0] DLN;
  input [12:0] Y;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N12, N11, N10, N1, N0, n1, n2, n3, n4,
         n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
         SYNOPSYS_UNCONNECTED__0;
  assign N0 = Y[2];

  INVX1 U4 ( .A(n8), .Y(n11) );
  NAND2BX1 U6 ( .AN(Y[9]), .B(n13), .Y(n7) );
  XNOR2X2 U7 ( .A(Y[12]), .B(n10), .Y(N10) );
  NAND2BXL U8 ( .AN(Y[12]), .B(n10), .Y(N11) );
  INVX1 U9 ( .A(N0), .Y(n19) );
  INVX1 U10 ( .A(n1), .Y(n18) );
  NAND2BX1 U11 ( .AN(Y[3]), .B(n19), .Y(n1) );
  INVX1 U12 ( .A(n9), .Y(n10) );
  NAND2BX1 U13 ( .AN(Y[11]), .B(n11), .Y(n9) );
  INVX1 U14 ( .A(n7), .Y(n12) );
  INVX1 U15 ( .A(n6), .Y(n13) );
  NAND2BX1 U16 ( .AN(Y[8]), .B(n14), .Y(n6) );
  INVX1 U17 ( .A(n5), .Y(n14) );
  INVX1 U18 ( .A(n4), .Y(n15) );
  NAND2BX1 U19 ( .AN(Y[6]), .B(n16), .Y(n4) );
  NAND2BX1 U20 ( .AN(Y[10]), .B(n12), .Y(n8) );
  INVX1 U21 ( .A(n3), .Y(n16) );
  NAND2BX1 U22 ( .AN(Y[5]), .B(n17), .Y(n3) );
  INVX1 U23 ( .A(n2), .Y(n17) );
  NAND2BX1 U24 ( .AN(Y[4]), .B(n18), .Y(n2) );
  XNOR2X1 U25 ( .A(Y[11]), .B(n11), .Y(N9) );
  XNOR2X1 U26 ( .A(Y[9]), .B(n13), .Y(N7) );
  XNOR2X1 U27 ( .A(Y[8]), .B(n14), .Y(N6) );
  XNOR2X1 U28 ( .A(Y[10]), .B(n12), .Y(N8) );
  INVX1 U29 ( .A(N11), .Y(N12) );
  XNOR2X1 U30 ( .A(Y[6]), .B(n16), .Y(N4) );
  XNOR2X1 U31 ( .A(Y[4]), .B(n18), .Y(N2) );
  XNOR2X1 U32 ( .A(Y[3]), .B(n19), .Y(N1) );
  XNOR2X1 U33 ( .A(Y[5]), .B(n17), .Y(N3) );
  SUBTB_1_DW01_add_5 add_0_root_sub_0_root_sub_45 ( .A({N12, N11, N10, N9, N8, 
        N7, N6, N5, N4, N3, N2, N1, N0}), .B({1'b0, 1'b0, DL}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__0, DLN}) );
  NAND2BX2 U1 ( .AN(Y[7]), .B(n15), .Y(n5) );
  XNOR2X1 U2 ( .A(Y[7]), .B(n15), .Y(N5) );
endmodule


module QUAN ( DLN, DS, RATE, I );
  input [11:0] DLN;
  input [1:0] RATE;
  output [1:5] I;
  input DS;
  wire   N24, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, I_2_, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98,
         n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n172, n173, n174, n175, n176, n177,
         n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, n188,
         n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n199,
         n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210,
         n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221,
         n222, n223, n224, n225, n226, n227, n228, n229, n230, n231, n232,
         n233, n234, n235, n236, n237;
  assign N24 = DLN[11];
  assign I[2] = I_2_;

  CLKINVXL U3 ( .A(n60), .Y(n56) );
  OR2X4 U4 ( .A(n37), .B(n60), .Y(n182) );
  OAI21X2 U5 ( .A0(DLN[2]), .A1(DLN[0]), .B0(n129), .Y(n60) );
  OAI2BB1X2 U6 ( .A0N(n62), .A1N(n155), .B0(n61), .Y(n67) );
  NOR2X2 U7 ( .A(DLN[3]), .B(n25), .Y(n44) );
  NAND2BX4 U8 ( .AN(n88), .B(DLN[3]), .Y(n157) );
  INVX4 U9 ( .A(DLN[3]), .Y(n37) );
  NAND2BX2 U10 ( .AN(DLN[2]), .B(n89), .Y(n129) );
  BUFX3 U11 ( .A(DLN[2]), .Y(n10) );
  NAND2X2 U12 ( .A(n173), .B(n133), .Y(n184) );
  NAND4BX1 U13 ( .AN(n76), .B(n75), .C(n74), .D(n143), .Y(n111) );
  OAI21XL U14 ( .A0(n156), .A1(n136), .B0(n173), .Y(n40) );
  OAI2BB1X1 U15 ( .A0N(n14), .A1N(n201), .B0(n200), .Y(n205) );
  INVX1 U16 ( .A(n11), .Y(n12) );
  OR3XL U17 ( .A(n182), .B(n117), .C(n133), .Y(n16) );
  INVX1 U18 ( .A(n119), .Y(n117) );
  OR4X2 U19 ( .A(n226), .B(n232), .C(n228), .D(n95), .Y(n230) );
  AND2X2 U20 ( .A(n138), .B(n78), .Y(n1) );
  NAND2BX1 U21 ( .AN(n193), .B(n209), .Y(n194) );
  NAND2X1 U22 ( .A(n25), .B(n38), .Y(n156) );
  MXI2X1 U23 ( .A(n198), .B(n199), .S0(n31), .Y(n200) );
  OR4X2 U24 ( .A(n40), .B(n187), .C(n99), .D(n1), .Y(n80) );
  OAI21XL U25 ( .A0(n122), .A1(n218), .B0(n223), .Y(n2) );
  INVX1 U26 ( .A(n2), .Y(n123) );
  NAND4X1 U27 ( .A(n3), .B(n4), .C(n143), .D(n140), .Y(n81) );
  INVX1 U28 ( .A(n59), .Y(n3) );
  INVX1 U29 ( .A(n58), .Y(n4) );
  INVX2 U30 ( .A(n187), .Y(n143) );
  NAND2BX1 U31 ( .AN(n207), .B(n31), .Y(n5) );
  NAND3BX1 U32 ( .AN(n68), .B(n184), .C(n70), .Y(n168) );
  NAND4BXL U33 ( .AN(n148), .B(n135), .C(n154), .D(n28), .Y(n192) );
  AOI211X1 U34 ( .A0(n5), .A1(n6), .B0(n217), .C0(n235), .Y(n21) );
  INVX1 U35 ( .A(n218), .Y(n6) );
  NAND4BXL U36 ( .AN(n46), .B(n94), .C(n71), .D(n86), .Y(n203) );
  AOI21X1 U37 ( .A0(n45), .A1(n119), .B0(n118), .Y(n7) );
  INVX1 U38 ( .A(n7), .Y(n94) );
  NOR3XL U39 ( .A(n232), .B(n228), .C(n226), .Y(n227) );
  NOR2BX1 U40 ( .AN(n157), .B(n25), .Y(n158) );
  MXI2XL U41 ( .A(n227), .B(n228), .S0(n31), .Y(n229) );
  AOI21XL U42 ( .A0(n8), .A1(n172), .B0(n155), .Y(n9) );
  INVXL U43 ( .A(n28), .Y(n8) );
  NAND2X1 U44 ( .A(n203), .B(n202), .Y(n204) );
  NAND2XL U45 ( .A(n57), .B(n182), .Y(n91) );
  NAND4X1 U46 ( .A(n9), .B(n149), .C(n79), .D(n29), .Y(n163) );
  AOI21XL U47 ( .A0(n196), .A1(n221), .B0(n208), .Y(n206) );
  NAND2XL U48 ( .A(DLN[9]), .B(n54), .Y(n84) );
  NAND4XL U49 ( .A(n220), .B(n24), .C(n209), .D(n210), .Y(n221) );
  NAND3X1 U50 ( .A(n30), .B(n32), .C(n33), .Y(n236) );
  NOR4BX1 U51 ( .AN(n188), .B(n189), .C(n187), .D(n218), .Y(n199) );
  NAND2X1 U52 ( .A(DS), .B(n233), .Y(n234) );
  NAND3X1 U53 ( .A(n73), .B(n25), .C(n29), .Y(n164) );
  INVX1 U54 ( .A(n51), .Y(n73) );
  NOR2XL U55 ( .A(n117), .B(n184), .Y(n92) );
  MX2X1 U56 ( .A(n199), .B(n198), .S0(n31), .Y(n11) );
  NAND2X1 U57 ( .A(n14), .B(n226), .Y(n212) );
  NOR2X1 U58 ( .A(n120), .B(n27), .Y(n22) );
  AOI31X1 U59 ( .A0(n142), .A1(n26), .A2(n28), .B0(n184), .Y(n144) );
  AND2X2 U60 ( .A(n31), .B(n14), .Y(n202) );
  OAI22X1 U61 ( .A0(n37), .A1(n69), .B0(n157), .B1(n47), .Y(n38) );
  OAI31XL U62 ( .A0(n182), .A1(n130), .A2(n173), .B0(n154), .Y(n76) );
  BUFX8 U63 ( .A(DLN[6]), .Y(n27) );
  NAND3X2 U64 ( .A(n180), .B(n179), .C(n178), .Y(n198) );
  NAND2X1 U65 ( .A(n51), .B(n133), .Y(n174) );
  NAND2XL U66 ( .A(n27), .B(n28), .Y(n173) );
  NAND3BX1 U67 ( .AN(n214), .B(n213), .C(n212), .Y(n233) );
  NAND2BX2 U68 ( .AN(n26), .B(n130), .Y(n54) );
  INVX1 U69 ( .A(n120), .Y(n87) );
  NOR2X1 U70 ( .A(n131), .B(n130), .Y(n132) );
  CLKINVX3 U71 ( .A(n25), .Y(n130) );
  CLKBUFX8 U72 ( .A(DLN[7]), .Y(n28) );
  OAI2BB1X1 U73 ( .A0N(n57), .A1N(n137), .B0(n119), .Y(n145) );
  NAND4BXL U74 ( .AN(n43), .B(n42), .C(n150), .D(n146), .Y(n71) );
  INVX1 U75 ( .A(n233), .Y(n216) );
  NAND4X1 U76 ( .A(n72), .B(n112), .C(n71), .D(n168), .Y(n226) );
  AND3X2 U77 ( .A(n125), .B(n124), .C(n123), .Y(n15) );
  CLKBUFX8 U78 ( .A(n17), .Y(I_2_) );
  NAND4BXL U79 ( .AN(n235), .B(n231), .C(n18), .D(n234), .Y(n17) );
  NAND2X1 U80 ( .A(n29), .B(n28), .Y(n103) );
  NAND3X1 U81 ( .A(n134), .B(n149), .C(n133), .Y(n148) );
  NAND2X1 U82 ( .A(n132), .B(n174), .Y(n134) );
  NOR2X1 U83 ( .A(RATE[1]), .B(n30), .Y(n115) );
  NAND2XL U84 ( .A(n165), .B(n164), .Y(n166) );
  INVX4 U85 ( .A(n29), .Y(n133) );
  NAND2XL U86 ( .A(n220), .B(n219), .Y(n222) );
  INVX1 U87 ( .A(DLN[0]), .Y(n47) );
  INVX1 U88 ( .A(n126), .Y(n165) );
  NAND3X1 U89 ( .A(n155), .B(n37), .C(n60), .Y(n61) );
  INVX1 U90 ( .A(n52), .Y(n131) );
  INVX1 U91 ( .A(DLN[2]), .Y(n88) );
  INVX1 U92 ( .A(n107), .Y(n170) );
  NAND2BX2 U93 ( .AN(N24), .B(n104), .Y(n187) );
  INVX1 U94 ( .A(n213), .Y(n109) );
  NAND2X1 U95 ( .A(n100), .B(n149), .Y(n161) );
  NAND3X1 U96 ( .A(n99), .B(n98), .C(n97), .Y(n100) );
  INVX1 U97 ( .A(n103), .Y(n77) );
  OAI21XL U98 ( .A0(n27), .A1(n54), .B0(n77), .Y(n99) );
  INVX1 U99 ( .A(n154), .Y(n78) );
  CLKINVX3 U100 ( .A(n188), .Y(n140) );
  NAND3X1 U101 ( .A(n85), .B(n149), .C(n84), .Y(n167) );
  NAND3BX1 U102 ( .AN(n103), .B(DLN[9]), .C(DLN[10]), .Y(n126) );
  NAND2BX1 U103 ( .AN(n193), .B(n192), .Y(n153) );
  OAI211X1 U104 ( .A0(n36), .A1(n35), .B0(n39), .C0(n149), .Y(n114) );
  OAI21XL U105 ( .A0(n34), .A1(n64), .B0(n133), .Y(n36) );
  NAND2X1 U106 ( .A(n117), .B(n97), .Y(n35) );
  NAND3BX1 U107 ( .AN(RATE[1]), .B(n161), .C(RATE[0]), .Y(n208) );
  INVX1 U108 ( .A(n153), .Y(n220) );
  AND3X2 U109 ( .A(n114), .B(n32), .C(n33), .Y(n14) );
  NAND4X1 U110 ( .A(n111), .B(n81), .C(n163), .D(n80), .Y(n232) );
  NAND2X2 U111 ( .A(n21), .B(n231), .Y(I[3]) );
  OAI2BB1X1 U112 ( .A0N(n230), .A1N(n229), .B0(n14), .Y(n231) );
  NAND3X2 U113 ( .A(n82), .B(n86), .C(n167), .Y(n228) );
  NOR2X1 U114 ( .A(DLN[0]), .B(n63), .Y(n34) );
  INVX1 U115 ( .A(n31), .Y(n30) );
  NAND2BXL U116 ( .AN(n84), .B(n149), .Y(n86) );
  NAND4XL U117 ( .A(n67), .B(n149), .C(n66), .D(n29), .Y(n112) );
  NAND2BXL U118 ( .AN(n117), .B(n29), .Y(n150) );
  OAI2BB1X1 U119 ( .A0N(n162), .A1N(n221), .B0(n225), .Y(n190) );
  MXI2X1 U120 ( .A(n48), .B(n49), .S0(n184), .Y(n50) );
  BUFX8 U121 ( .A(DLN[5]), .Y(n26) );
  NAND2BXL U122 ( .AN(n89), .B(DLN[2]), .Y(n69) );
  NAND2XL U123 ( .A(n28), .B(n91), .Y(n48) );
  INVX8 U124 ( .A(N24), .Y(n149) );
  MXI2XL U125 ( .A(n153), .B(n152), .S0(n30), .Y(n162) );
  INVXL U126 ( .A(n156), .Y(n159) );
  NAND2XL U127 ( .A(n141), .B(n183), .Y(n135) );
  NAND2XL U128 ( .A(n24), .B(n209), .Y(n152) );
  NOR3XL U129 ( .A(DLN[3]), .B(n56), .C(n26), .Y(n59) );
  NAND3XL U130 ( .A(n16), .B(n188), .C(n143), .Y(n121) );
  NAND3XL U131 ( .A(n25), .B(DLN[3]), .C(n129), .Y(n172) );
  NAND2XL U132 ( .A(n26), .B(n29), .Y(n147) );
  NAND2XL U133 ( .A(n202), .B(n232), .Y(n18) );
  NOR2XL U134 ( .A(n26), .B(n181), .Y(n186) );
  OAI21XL U135 ( .A0(n157), .A1(n147), .B0(n146), .Y(n151) );
  NAND4X1 U136 ( .A(n19), .B(n55), .C(n83), .D(n54), .Y(n82) );
  AND2X1 U137 ( .A(n149), .B(n29), .Y(n19) );
  NAND3BXL U138 ( .AN(n147), .B(n129), .C(DLN[3]), .Y(n42) );
  BUFX8 U139 ( .A(DLN[4]), .Y(n25) );
  OR2X2 U140 ( .A(n160), .B(n20), .Y(n210) );
  MX2X1 U141 ( .A(n159), .B(n158), .S0(n26), .Y(n20) );
  OR2X2 U142 ( .A(n133), .B(n145), .Y(n188) );
  NAND2X1 U143 ( .A(n53), .B(n52), .Y(n83) );
  INVX1 U144 ( .A(n172), .Y(n181) );
  NAND3BX1 U145 ( .AN(n174), .B(n131), .C(n130), .Y(n49) );
  NAND2X1 U146 ( .A(n22), .B(n88), .Y(n128) );
  INVX1 U147 ( .A(n208), .Y(n225) );
  INVX1 U148 ( .A(n63), .Y(n65) );
  INVX1 U149 ( .A(n164), .Y(n53) );
  INVX1 U150 ( .A(n54), .Y(n57) );
  OAI2BB1X1 U151 ( .A0N(n14), .A1N(n237), .B0(n15), .Y(n191) );
  NAND3X1 U152 ( .A(n26), .B(n28), .C(n27), .Y(n51) );
  NAND2X1 U153 ( .A(n156), .B(n183), .Y(n75) );
  NOR2XL U154 ( .A(n73), .B(n103), .Y(n74) );
  NAND3X1 U155 ( .A(n170), .B(RATE[1]), .C(RATE[0]), .Y(n179) );
  NOR2X1 U156 ( .A(n177), .B(n176), .Y(n178) );
  NAND2XL U157 ( .A(n14), .B(n169), .Y(n180) );
  OAI21XL U158 ( .A0(n147), .A1(n172), .B0(n103), .Y(n58) );
  OAI21XL U159 ( .A0(n26), .A1(n28), .B0(n119), .Y(n155) );
  NAND2XL U160 ( .A(n87), .B(n69), .Y(n70) );
  OR2X2 U161 ( .A(n28), .B(n27), .Y(n119) );
  MXI2X1 U162 ( .A(n195), .B(n194), .S0(n30), .Y(n196) );
  NAND2X1 U163 ( .A(n24), .B(n192), .Y(n195) );
  MXI2X1 U164 ( .A(n216), .B(n215), .S0(n30), .Y(n217) );
  OAI2BB1X1 U165 ( .A0N(DLN[9]), .A1N(n53), .B0(n80), .Y(n46) );
  OAI21XL U166 ( .A0(DLN[3]), .A1(n129), .B0(n25), .Y(n141) );
  NAND3BX1 U167 ( .AN(n145), .B(n144), .C(n143), .Y(n219) );
  INVX1 U168 ( .A(n141), .Y(n142) );
  NAND2BX1 U169 ( .AN(n26), .B(n44), .Y(n120) );
  OAI2BB1X1 U170 ( .A0N(n72), .A1N(n23), .B0(n30), .Y(n197) );
  AND2X1 U171 ( .A(n82), .B(n81), .Y(n23) );
  NAND4XL U172 ( .A(n163), .B(n168), .C(n167), .D(n166), .Y(n169) );
  NAND2BX1 U173 ( .AN(n44), .B(n26), .Y(n64) );
  OR2XL U174 ( .A(n25), .B(n129), .Y(n63) );
  INVX1 U175 ( .A(n27), .Y(n183) );
  AOI21X1 U176 ( .A0(n121), .A1(n31), .B0(n207), .Y(n122) );
  OR2X2 U177 ( .A(n26), .B(n27), .Y(n154) );
  MXI2X1 U178 ( .A(n109), .B(n108), .S0(n30), .Y(n125) );
  NAND2BX1 U179 ( .AN(DLN[3]), .B(n69), .Y(n52) );
  INVX1 U180 ( .A(n38), .Y(n138) );
  OAI21XL U181 ( .A0(n183), .A1(n182), .B0(n29), .Y(n185) );
  NAND3XL U182 ( .A(n87), .B(n137), .C(n88), .Y(n45) );
  INVX1 U183 ( .A(n26), .Y(n136) );
  AND2X2 U184 ( .A(n211), .B(n219), .Y(n24) );
  NAND2BX1 U185 ( .AN(n147), .B(n25), .Y(n146) );
  INVX1 U186 ( .A(n28), .Y(n137) );
  NAND2BX1 U187 ( .AN(n96), .B(n230), .Y(n237) );
  OAI2BB1X1 U188 ( .A0N(n30), .A1N(n203), .B0(n197), .Y(n96) );
  INVX1 U189 ( .A(DLN[10]), .Y(n97) );
  INVXL U190 ( .A(DLN[9]), .Y(n98) );
  NAND2BX1 U191 ( .AN(RATE[0]), .B(RATE[1]), .Y(n218) );
  OAI31XL U192 ( .A0(n120), .A1(n119), .A2(n118), .B0(n149), .Y(n207) );
  NAND4BXL U193 ( .AN(n151), .B(n150), .C(n149), .D(n148), .Y(n209) );
  NAND2X1 U194 ( .A(n68), .B(n149), .Y(n43) );
  NAND2X1 U195 ( .A(n104), .B(n83), .Y(n85) );
  NOR3XL U196 ( .A(n175), .B(n187), .C(n174), .Y(n176) );
  OAI21XL U197 ( .A0(n173), .A1(n172), .B0(n6), .Y(n175) );
  OAI2BB1X1 U199 ( .A0N(n78), .A1N(n156), .B0(n77), .Y(n79) );
  OAI21XL U200 ( .A0(n173), .A1(n182), .B0(n51), .Y(n55) );
  OAI21XL U201 ( .A0(n65), .A1(n64), .B0(n117), .Y(n66) );
  NAND2X1 U202 ( .A(n25), .B(n27), .Y(n62) );
  NAND3BX1 U203 ( .AN(n161), .B(RATE[0]), .C(n33), .Y(n213) );
  NAND3X1 U204 ( .A(n116), .B(n32), .C(n115), .Y(n223) );
  INVX1 U205 ( .A(n114), .Y(n116) );
  NAND3XL U206 ( .A(n140), .B(n139), .C(n149), .Y(n211) );
  NAND3XL U207 ( .A(n138), .B(n137), .C(n136), .Y(n139) );
  NAND3XL U208 ( .A(n104), .B(n133), .C(n149), .Y(n118) );
  NOR3X1 U209 ( .A(n32), .B(n170), .C(n33), .Y(n108) );
  NAND3X1 U210 ( .A(n41), .B(n149), .C(n133), .Y(n68) );
  NAND2X1 U211 ( .A(n181), .B(n174), .Y(n41) );
  AOI31XL U212 ( .A0(n211), .A1(n210), .A2(n209), .B0(n208), .Y(n214) );
  OAI211X1 U213 ( .A0(n126), .A1(n101), .B0(n94), .C0(n110), .Y(n95) );
  OAI2BB1X1 U214 ( .A0N(n22), .A1N(n89), .B0(n128), .Y(n101) );
  NOR2X1 U215 ( .A(n208), .B(n210), .Y(n177) );
  OAI2BB1XL U216 ( .A0N(n186), .A1N(n185), .B0(n184), .Y(n189) );
  OAI21XL U217 ( .A0(n106), .A1(n105), .B0(n149), .Y(n107) );
  NAND2XL U218 ( .A(n104), .B(n103), .Y(n105) );
  AOI21XL U219 ( .A0(n102), .A1(n101), .B0(n133), .Y(n106) );
  NAND2X1 U220 ( .A(n202), .B(n113), .Y(n124) );
  NAND3XL U221 ( .A(n112), .B(n111), .C(n110), .Y(n113) );
  OAI2BB1X1 U222 ( .A0N(n165), .A1N(n128), .B0(n127), .Y(n193) );
  NAND3BXL U223 ( .AN(n187), .B(n133), .C(n145), .Y(n127) );
  BUFX12 U224 ( .A(DLN[8]), .Y(n29) );
  INVX1 U225 ( .A(DS), .Y(n31) );
  MXI2XL U226 ( .A(n91), .B(n90), .S0(n27), .Y(n93) );
  NOR2XL U227 ( .A(n10), .B(n120), .Y(n90) );
  NAND2XL U228 ( .A(DLN[0]), .B(n10), .Y(n102) );
  INVX1 U229 ( .A(DLN[1]), .Y(n89) );
  INVX1 U230 ( .A(RATE[1]), .Y(n33) );
  INVX1 U231 ( .A(RATE[0]), .Y(n32) );
  NAND3BX1 U232 ( .AN(N24), .B(n93), .C(n92), .Y(n110) );
  NAND4BXL U233 ( .AN(N24), .B(n29), .C(n155), .D(n154), .Y(n160) );
  NAND2XL U234 ( .A(n14), .B(n232), .Y(n215) );
  NAND2XL U235 ( .A(n230), .B(n197), .Y(n201) );
  OR2X4 U236 ( .A(DLN[10]), .B(DLN[9]), .Y(n39) );
  CLKINVX3 U237 ( .A(n39), .Y(n104) );
  NAND2X2 U238 ( .A(n50), .B(n149), .Y(n72) );
  NAND3BX4 U239 ( .AN(n191), .B(n190), .C(n12), .Y(I[5]) );
  NAND4BBX2 U240 ( .AN(n206), .BN(n205), .C(n15), .D(n204), .Y(I[4]) );
  OAI2BB1X2 U241 ( .A0N(n30), .A1N(n222), .B0(n221), .Y(n224) );
  OAI2BB1X4 U242 ( .A0N(n225), .A1N(n224), .B0(n223), .Y(n235) );
  OAI2BB1X4 U243 ( .A0N(n14), .A1N(n237), .B0(n236), .Y(I[1]) );
endmodule


module ADAP_QUAN ( D, Y, I, RATE );
  input [15:0] D;
  input [12:0] Y;
  output [4:0] I;
  input [1:0] RATE;
  wire   DS;
  wire   [10:0] DL;
  wire   [11:0] DLN;

  LOG_1 ADAP_QUAN_LOG ( .D(D), .DL(DL), .DS(DS) );
  SUBTB_1 ADAP_QUAN_SUBTB ( .DL(DL), .DLN(DLN), .Y(Y) );
  QUAN ADAP_QUAN_QUAN ( .DLN(DLN), .DS(DS), .RATE(RATE), .I(I) );
endmodule


module RECONST_1 ( I, RATE, DQLN, DQS );
  input [4:0] I;
  input [1:0] RATE;
  output [11:0] DQLN;
  output DQS;
  wire   n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144,
         n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155,
         n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166,
         n167, n168, n169, n170, n171, n172, n173, n174, n175, n176, n177,
         n178, n179, n180, n181, n182, n183;

  CLKINVX3 U3 ( .A(n58), .Y(n119) );
  NAND4X4 U4 ( .A(n124), .B(n123), .C(n122), .D(n121), .Y(DQLN[6]) );
  AOI221X2 U5 ( .A0(n119), .A1(n120), .B0(n171), .B1(n150), .C0(n118), .Y(n121) );
  AOI31X2 U6 ( .A0(n29), .A1(n8), .A2(n95), .B0(n28), .Y(n33) );
  BUFX12 U7 ( .A(n183), .Y(DQS) );
  INVX4 U8 ( .A(n14), .Y(n134) );
  NOR2X2 U9 ( .A(n130), .B(n129), .Y(n28) );
  NAND2BX2 U10 ( .AN(n129), .B(I[1]), .Y(n12) );
  OAI2BB1X2 U11 ( .A0N(n176), .A1N(n95), .B0(n131), .Y(n27) );
  NAND2BX1 U12 ( .AN(n63), .B(I[4]), .Y(n14) );
  NAND2BX1 U13 ( .AN(n107), .B(n8), .Y(n39) );
  INVX1 U14 ( .A(n59), .Y(n40) );
  NAND3BX1 U15 ( .AN(n119), .B(I[1]), .C(n74), .Y(n152) );
  INVX1 U16 ( .A(n27), .Y(n130) );
  INVX1 U17 ( .A(n112), .Y(n123) );
  OAI2BB1X2 U18 ( .A0N(n171), .A1N(n104), .B0(n103), .Y(DQLN[5]) );
  BUFX12 U19 ( .A(I[2]), .Y(n10) );
  NAND2X1 U20 ( .A(I[3]), .B(n64), .Y(n116) );
  OAI22XL U21 ( .A0(n77), .A1(n117), .B0(n75), .B1(n56), .Y(n78) );
  NAND3X4 U22 ( .A(n12), .B(n174), .C(n117), .Y(n56) );
  NOR3BX1 U23 ( .AN(n10), .B(n165), .C(n57), .Y(n120) );
  NAND4X1 U24 ( .A(n164), .B(n163), .C(n161), .D(n162), .Y(DQLN[8]) );
  OR2X2 U25 ( .A(n99), .B(n108), .Y(n161) );
  NOR3X1 U26 ( .A(n102), .B(n112), .C(n101), .Y(n103) );
  NAND2XL U27 ( .A(n96), .B(n176), .Y(n89) );
  CLKINVX2 U28 ( .A(n2), .Y(n96) );
  NAND3X1 U29 ( .A(n133), .B(n171), .C(n18), .Y(n19) );
  AOI211X1 U30 ( .A0(n165), .A1(n111), .B0(n110), .C0(n109), .Y(n124) );
  INVX1 U31 ( .A(n64), .Y(n165) );
  OAI2BB1X1 U32 ( .A0N(n137), .A1N(n95), .B0(n91), .Y(n60) );
  INVX4 U33 ( .A(n26), .Y(n95) );
  NAND3X1 U34 ( .A(n138), .B(n64), .C(n58), .Y(n46) );
  NAND2BX1 U35 ( .AN(n129), .B(n8), .Y(n173) );
  NAND3BX1 U36 ( .AN(n63), .B(n74), .C(n58), .Y(n180) );
  NAND3X1 U37 ( .A(n59), .B(n4), .C(n173), .Y(n26) );
  NAND2X1 U38 ( .A(n14), .B(n105), .Y(n168) );
  MXI2XL U39 ( .A(n42), .B(n41), .S0(n8), .Y(n43) );
  NOR2BX1 U40 ( .AN(n89), .B(n90), .Y(n94) );
  NAND2BX1 U41 ( .AN(n131), .B(n132), .Y(n141) );
  NAND3BX1 U42 ( .AN(n11), .B(n42), .C(n74), .Y(n183) );
  OAI211X1 U43 ( .A0(n153), .A1(n26), .B0(n99), .C0(n98), .Y(n112) );
  NAND2X1 U44 ( .A(n134), .B(n76), .Y(n16) );
  OAI21XL U45 ( .A0(n178), .A1(n177), .B0(n176), .Y(n179) );
  INVX1 U46 ( .A(n71), .Y(n176) );
  NAND2X1 U47 ( .A(n39), .B(n145), .Y(n57) );
  NAND2X2 U48 ( .A(n120), .B(n58), .Y(n92) );
  NAND2BX2 U49 ( .AN(n56), .B(n95), .Y(n181) );
  NOR3X2 U50 ( .A(n57), .B(n23), .C(n40), .Y(n72) );
  NAND2BX4 U51 ( .AN(n83), .B(n8), .Y(n64) );
  BUFX16 U52 ( .A(I[0]), .Y(n8) );
  OAI2BB1X2 U53 ( .A0N(n37), .A1N(n176), .B0(n36), .Y(DQLN[10]) );
  BUFX4 U54 ( .A(n128), .Y(n2) );
  NAND4XL U55 ( .A(n8), .B(n42), .C(n58), .D(n74), .Y(n128) );
  NAND2BX4 U56 ( .AN(n107), .B(I[3]), .Y(n74) );
  INVX1 U57 ( .A(n100), .Y(n53) );
  AND2X2 U58 ( .A(n4), .B(n173), .Y(n5) );
  INVX1 U59 ( .A(n150), .Y(n158) );
  NAND2X1 U60 ( .A(n68), .B(n172), .Y(n114) );
  CLKINVX3 U61 ( .A(DQS), .Y(n166) );
  NAND3BX1 U62 ( .AN(n67), .B(n66), .C(n65), .Y(DQLN[3]) );
  OAI21XL U63 ( .A0(n59), .A1(n55), .B0(n54), .Y(n67) );
  OAI21XL U64 ( .A0(n61), .A1(n60), .B0(n171), .Y(n66) );
  NOR2X1 U65 ( .A(DQS), .B(n100), .Y(n101) );
  NAND3X2 U66 ( .A(n51), .B(n50), .C(n49), .Y(DQLN[2]) );
  NOR2X1 U67 ( .A(DQLN[10]), .B(n144), .Y(n49) );
  NOR3X1 U68 ( .A(n45), .B(n44), .C(n43), .Y(n51) );
  NAND2X1 U69 ( .A(n171), .B(n48), .Y(n50) );
  NAND3BX2 U70 ( .AN(n149), .B(n148), .C(n147), .Y(DQLN[7]) );
  AOI2BB1X1 U71 ( .A0N(n146), .A1N(n145), .B0(n144), .Y(n147) );
  NAND2X1 U72 ( .A(n171), .B(n142), .Y(n148) );
  NAND4BBX1 U73 ( .AN(n22), .BN(n21), .C(n20), .D(n19), .Y(DQLN[0]) );
  AOI33XL U74 ( .A0(n74), .A1(n13), .A2(n173), .B0(n56), .B1(n26), .B2(DQS), 
        .Y(n22) );
  NAND3BX4 U75 ( .AN(n34), .B(n33), .C(n32), .Y(DQLN[1]) );
  NAND2X2 U76 ( .A(n76), .B(n172), .Y(n62) );
  OAI22X1 U77 ( .A0(n106), .A1(n117), .B0(n152), .B1(n62), .Y(n144) );
  INVXL U78 ( .A(n115), .Y(n68) );
  INVX1 U79 ( .A(n12), .Y(n97) );
  OAI31X1 U80 ( .A0(n116), .A1(n83), .A2(n152), .B0(n161), .Y(n52) );
  INVX1 U81 ( .A(n153), .Y(n133) );
  INVX1 U82 ( .A(n75), .Y(n178) );
  INVX1 U83 ( .A(n108), .Y(n84) );
  OAI21XL U84 ( .A0(n181), .A1(n39), .B0(n38), .Y(n45) );
  NAND4BXL U85 ( .AN(n90), .B(n93), .C(n47), .D(n89), .Y(n48) );
  NAND2BX1 U86 ( .AN(n106), .B(n166), .Y(n151) );
  INVX1 U87 ( .A(I[1]), .Y(n9) );
  AOI2BB2X1 U88 ( .B0(n102), .B1(n132), .A0N(n181), .A1N(n64), .Y(n65) );
  OAI22X1 U89 ( .A0(n174), .A1(n105), .B0(n62), .B1(n106), .Y(n102) );
  NAND2BX2 U90 ( .AN(n129), .B(n10), .Y(n42) );
  NAND2X1 U91 ( .A(n72), .B(n96), .Y(n24) );
  OAI2BB1X2 U92 ( .A0N(n143), .A1N(n72), .B0(n46), .Y(n90) );
  NOR2X1 U93 ( .A(n73), .B(n72), .Y(n77) );
  NAND2BXL U94 ( .AN(n107), .B(I[1]), .Y(n3) );
  NAND2BXL U95 ( .AN(n107), .B(I[1]), .Y(n4) );
  NAND2BXL U96 ( .AN(n107), .B(I[1]), .Y(n127) );
  NAND3BX2 U97 ( .AN(n17), .B(n3), .C(n59), .Y(n106) );
  NAND2BX2 U98 ( .AN(n175), .B(n64), .Y(n105) );
  OAI22X1 U99 ( .A0(n180), .A1(n116), .B0(n175), .B1(n115), .Y(n150) );
  INVX2 U100 ( .A(n56), .Y(n76) );
  INVX1 U101 ( .A(n106), .Y(n138) );
  NAND2BX1 U102 ( .AN(n2), .B(n76), .Y(n131) );
  XNOR2X1 U103 ( .A(I[3]), .B(n10), .Y(n7) );
  NAND2BXL U104 ( .AN(n74), .B(n8), .Y(n75) );
  AOI211X1 U105 ( .A0(n171), .A1(n80), .B0(n79), .C0(n78), .Y(n88) );
  NAND2XL U106 ( .A(n138), .B(I[1]), .Y(n15) );
  INVXL U107 ( .A(n151), .Y(n155) );
  NAND2BX1 U108 ( .AN(n105), .B(n176), .Y(n135) );
  NAND4XL U109 ( .A(n159), .B(n158), .C(n157), .D(n156), .Y(n160) );
  OAI2BB1X1 U110 ( .A0N(n114), .A1N(n113), .B0(n166), .Y(n122) );
  NAND2BXL U111 ( .AN(n81), .B(n76), .Y(n157) );
  NAND2XL U112 ( .A(n134), .B(n133), .Y(n140) );
  AOI21XL U113 ( .A0(n138), .A1(n137), .B0(n136), .Y(n139) );
  INVXL U114 ( .A(n52), .Y(n20) );
  NAND3BX1 U115 ( .AN(n181), .B(n171), .C(n168), .Y(n169) );
  NOR2XL U116 ( .A(n108), .B(n163), .Y(n109) );
  OAI31X1 U117 ( .A0(n181), .A1(DQS), .A2(n83), .B0(n82), .Y(n85) );
  OAI221XL U118 ( .A0(n130), .A1(n129), .B0(n2), .B1(n3), .C0(n126), .Y(n149)
         );
  NAND2XL U119 ( .A(n97), .B(n96), .Y(n98) );
  NAND2BX4 U120 ( .AN(n83), .B(I[4]), .Y(n58) );
  NAND2X1 U121 ( .A(n10), .B(I[1]), .Y(n71) );
  INVX1 U122 ( .A(n135), .Y(n136) );
  OAI21XL U123 ( .A0(DQS), .A1(n115), .B0(n92), .Y(n61) );
  INVXL U124 ( .A(n63), .Y(n132) );
  NAND2BX1 U125 ( .AN(n56), .B(n10), .Y(n153) );
  NAND2X1 U126 ( .A(n152), .B(n2), .Y(n137) );
  NOR2X1 U127 ( .A(n155), .B(n154), .Y(n156) );
  NOR2XL U128 ( .A(n153), .B(n152), .Y(n154) );
  AND3X2 U129 ( .A(n135), .B(n24), .C(n125), .Y(n159) );
  AOI21XL U130 ( .A0(n165), .A1(n10), .B0(n176), .Y(n167) );
  NAND2BX1 U131 ( .AN(n10), .B(n9), .Y(n69) );
  INVX1 U132 ( .A(n105), .Y(n143) );
  NOR2XL U133 ( .A(n153), .B(n180), .Y(n111) );
  NAND2X1 U134 ( .A(n114), .B(n162), .Y(n79) );
  INVX1 U135 ( .A(n180), .Y(n73) );
  XNOR2X1 U136 ( .A(n8), .B(I[1]), .Y(n108) );
  INVX1 U137 ( .A(n168), .Y(n55) );
  OAI2BB1X1 U138 ( .A0N(n86), .A1N(I[1]), .B0(n58), .Y(n11) );
  AOI31X1 U139 ( .A0(n16), .A1(n15), .A2(n151), .B0(n64), .Y(n21) );
  NAND2X1 U140 ( .A(n171), .B(n160), .Y(n164) );
  NOR2XL U141 ( .A(n117), .B(n125), .Y(n118) );
  INVX1 U142 ( .A(n127), .Y(n23) );
  NAND3BX1 U143 ( .AN(DQLN[10]), .B(n170), .C(n169), .Y(DQLN[9]) );
  INVX1 U144 ( .A(I[3]), .Y(n17) );
  NOR2X1 U145 ( .A(n116), .B(n58), .Y(n37) );
  NAND4BXL U146 ( .AN(n64), .B(n95), .C(n35), .D(n132), .Y(n36) );
  NAND4XL U147 ( .A(n8), .B(n59), .C(I[1]), .D(n5), .Y(n113) );
  OAI2BB2X1 U148 ( .B0(DQS), .B1(n71), .A0N(n134), .A1N(n95), .Y(n80) );
  NOR3XL U149 ( .A(n106), .B(n105), .C(n145), .Y(n110) );
  NAND2XL U150 ( .A(n40), .B(n134), .Y(n41) );
  NAND3BX1 U151 ( .AN(n152), .B(n95), .C(n64), .Y(n47) );
  AOI21X1 U152 ( .A0(n53), .A1(n132), .B0(n86), .Y(n38) );
  NAND4XL U153 ( .A(n94), .B(n93), .C(n6), .D(n131), .Y(n104) );
  AOI21XL U154 ( .A0(n53), .A1(n96), .B0(n52), .Y(n54) );
  NAND3XL U155 ( .A(n69), .B(n71), .C(n70), .Y(n162) );
  NAND2BX1 U156 ( .AN(n71), .B(n172), .Y(n100) );
  NAND4X1 U157 ( .A(n6), .B(n141), .C(n140), .D(n139), .Y(n142) );
  NAND2BX1 U158 ( .AN(n125), .B(n172), .Y(n126) );
  NOR2XL U159 ( .A(n10), .B(n173), .Y(n44) );
  OAI2BB1X1 U160 ( .A0N(n73), .A1N(n64), .B0(n105), .Y(n18) );
  AND2X2 U161 ( .A(n92), .B(n91), .Y(n6) );
  OR2XL U162 ( .A(n81), .B(n174), .Y(n82) );
  INVXL U163 ( .A(n117), .Y(n29) );
  OAI21XL U164 ( .A0(n172), .A1(n70), .B0(n69), .Y(n13) );
  NOR2X1 U165 ( .A(n172), .B(n171), .Y(n182) );
  NAND4XL U166 ( .A(I[4]), .B(n10), .C(n8), .D(n76), .Y(n93) );
  INVXL U167 ( .A(I[4]), .Y(n175) );
  NAND2BX1 U168 ( .AN(n113), .B(I[4]), .Y(n91) );
  NAND2XL U169 ( .A(n10), .B(I[4]), .Y(n81) );
  AOI21X1 U170 ( .A0(n25), .A1(n159), .B0(n83), .Y(n34) );
  NOR2X1 U171 ( .A(n31), .B(n30), .Y(n32) );
  OR2X2 U172 ( .A(n107), .B(n7), .Y(n163) );
  INVX1 U173 ( .A(n99), .Y(n86) );
  INVX1 U174 ( .A(n107), .Y(n172) );
  INVX1 U175 ( .A(n83), .Y(n171) );
  INVX1 U176 ( .A(n129), .Y(n70) );
  OAI31XL U177 ( .A0(n182), .A1(n181), .A2(n180), .B0(n179), .Y(DQLN[11]) );
  OR2X2 U178 ( .A(RATE[0]), .B(RATE[1]), .Y(n83) );
  NAND2BX1 U179 ( .AN(RATE[0]), .B(RATE[1]), .Y(n129) );
  NAND2X1 U180 ( .A(RATE[1]), .B(RATE[0]), .Y(n99) );
  NAND2BX1 U181 ( .AN(RATE[1]), .B(RATE[0]), .Y(n107) );
  NOR3XL U182 ( .A(n4), .B(n63), .C(n56), .Y(n31) );
  AOI21X1 U183 ( .A0(n143), .A1(n76), .B0(n80), .Y(n25) );
  NOR2XL U184 ( .A(n119), .B(n56), .Y(n35) );
  NAND3BX1 U185 ( .AN(n56), .B(I[1]), .C(n8), .Y(n115) );
  OAI21XL U186 ( .A0(n175), .A1(n174), .B0(n173), .Y(n177) );
  OAI22XL U187 ( .A0(n145), .A1(n157), .B0(n174), .B1(n2), .Y(n30) );
  NAND3BXL U188 ( .AN(n167), .B(n166), .C(I[3]), .Y(n170) );
  NAND2XL U189 ( .A(n143), .B(I[3]), .Y(n146) );
  NAND4BXL U190 ( .AN(n63), .B(n59), .C(I[3]), .D(n5), .Y(n125) );
  NAND2BX4 U191 ( .AN(n83), .B(I[3]), .Y(n174) );
  NAND2BX4 U192 ( .AN(n107), .B(n10), .Y(n117) );
  NAND2BX4 U193 ( .AN(n83), .B(n10), .Y(n59) );
  NAND2BX4 U194 ( .AN(n83), .B(I[1]), .Y(n145) );
  NAND2X2 U195 ( .A(n39), .B(n145), .Y(n63) );
  MXI2X1 U196 ( .A(n86), .B(n85), .S0(n84), .Y(n87) );
  NAND2X2 U197 ( .A(n88), .B(n87), .Y(DQLN[4]) );
endmodule


module ADDA_1_DW01_add_6 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n2, n3, n5, n6, n7, n8, n9, n10, n11, n14, n22, n23, n24, n25, n26,
         n27, n28, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n45, n46, n47, n48, n53, n54, n55, n57, n58, n59, n60, n61, n62,
         n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n77, n81, n84,
         SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_,
         SUM_9_, SUM_10_, SUM_11_, B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_,
         B_7_, B_8_, B_9_, B_10_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_,
         A_7_, A_8_, A_9_, A_10_, A_11_, SUM_0_, n132, n133, n134, n135, n136,
         n137, n138;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign SUM[0] = SUM_0_;

  XOR2X4 U31 ( .A(n39), .B(n5), .Y(SUM_7_) );
  AOI21X4 U42 ( .A0(n40), .A1(n60), .B0(n41), .Y(n39) );
  NOR2X4 U61 ( .A(A_5_), .B(B_5_), .Y(n53) );
  NAND2X1 U101 ( .A(n35), .B(n47), .Y(n33) );
  OAI21X2 U102 ( .A0(n53), .A1(n59), .B0(n54), .Y(n48) );
  AOI31X4 U103 ( .A0(n134), .A1(n24), .A2(n138), .B0(n137), .Y(n14) );
  NOR2BX2 U104 ( .AN(n47), .B(n42), .Y(n40) );
  NOR2X2 U105 ( .A(n53), .B(n58), .Y(n47) );
  NAND2X1 U106 ( .A(A_1_), .B(B_1_), .Y(n72) );
  NOR2X2 U107 ( .A(A_7_), .B(B_7_), .Y(n37) );
  NAND2BX1 U108 ( .AN(n37), .B(n38), .Y(n5) );
  NAND2BX1 U109 ( .AN(n64), .B(n65), .Y(n9) );
  NAND2BX1 U110 ( .AN(n53), .B(n54), .Y(n7) );
  AND2X1 U111 ( .A(n135), .B(n74), .Y(SUM_0_) );
  OAI21X2 U112 ( .A0(n33), .A1(n61), .B0(n34), .Y(n134) );
  NAND2BXL U113 ( .AN(n67), .B(n68), .Y(n10) );
  NAND2BX1 U114 ( .AN(n26), .B(n27), .Y(n3) );
  OAI21X1 U115 ( .A0(n64), .A1(n68), .B0(n65), .Y(n63) );
  NOR2X2 U116 ( .A(A_3_), .B(B_3_), .Y(n64) );
  NAND2X2 U117 ( .A(A_0_), .B(B_0_), .Y(n74) );
  NAND2X1 U118 ( .A(A_3_), .B(B_3_), .Y(n65) );
  NOR2X1 U119 ( .A(A_9_), .B(B_9_), .Y(n26) );
  NAND2X1 U120 ( .A(n133), .B(n45), .Y(n41) );
  AOI21X1 U121 ( .A0(n77), .A1(n134), .B0(n30), .Y(n28) );
  XOR2X2 U122 ( .A(n134), .B(n136), .Y(SUM_8_) );
  XOR2X2 U123 ( .A(n28), .B(n3), .Y(SUM_9_) );
  AOI21X2 U124 ( .A0(n70), .A1(n62), .B0(n63), .Y(n61) );
  OAI21X2 U125 ( .A0(n71), .A1(n74), .B0(n72), .Y(n70) );
  NOR2X1 U126 ( .A(n37), .B(n42), .Y(n35) );
  NOR2X1 U127 ( .A(A_4_), .B(B_4_), .Y(n58) );
  NOR2X1 U128 ( .A(n67), .B(n64), .Y(n62) );
  NAND2X1 U129 ( .A(A_6_), .B(B_6_), .Y(n45) );
  NAND2X1 U130 ( .A(A_2_), .B(B_2_), .Y(n68) );
  NOR2X2 U131 ( .A(A_2_), .B(B_2_), .Y(n67) );
  NAND2X1 U132 ( .A(n48), .B(n132), .Y(n133) );
  NOR2X2 U133 ( .A(A_6_), .B(B_6_), .Y(n42) );
  INVX1 U134 ( .A(n42), .Y(n132) );
  OR2X2 U135 ( .A(A_10_), .B(B_10_), .Y(n138) );
  NAND2X1 U136 ( .A(A_10_), .B(B_10_), .Y(n22) );
  NAND2X2 U137 ( .A(A_5_), .B(B_5_), .Y(n54) );
  NAND2XL U138 ( .A(A_8_), .B(B_8_), .Y(n32) );
  NOR2X1 U139 ( .A(A_8_), .B(B_8_), .Y(n31) );
  XNOR2X1 U140 ( .A(n14), .B(A_11_), .Y(SUM_11_) );
  AND2X2 U141 ( .A(n77), .B(n32), .Y(n136) );
  NAND2XL U142 ( .A(n81), .B(n59), .Y(n8) );
  NAND2XL U143 ( .A(n132), .B(n45), .Y(n6) );
  XOR2X1 U144 ( .A(n23), .B(n2), .Y(SUM_10_) );
  NAND2XL U145 ( .A(n138), .B(n22), .Y(n2) );
  AOI21XL U146 ( .A0(n134), .A1(n24), .B0(n25), .Y(n23) );
  INVXL U147 ( .A(n59), .Y(n57) );
  INVXL U148 ( .A(n71), .Y(n84) );
  NAND2XL U149 ( .A(A_9_), .B(B_9_), .Y(n27) );
  OR2XL U150 ( .A(A_0_), .B(B_0_), .Y(n135) );
  INVXL U151 ( .A(n70), .Y(n69) );
  AOI21XL U152 ( .A0(n35), .A1(n48), .B0(n36), .Y(n34) );
  OAI21XL U153 ( .A0(n37), .A1(n45), .B0(n38), .Y(n36) );
  OAI21XL U154 ( .A0(n32), .A1(n26), .B0(n27), .Y(n25) );
  NOR2X1 U155 ( .A(n31), .B(n26), .Y(n24) );
  XNOR2X1 U156 ( .A(n60), .B(n8), .Y(SUM_4_) );
  XOR2XL U157 ( .A(n11), .B(n74), .Y(SUM_1_) );
  NAND2X1 U158 ( .A(n84), .B(n72), .Y(n11) );
  XOR2X1 U159 ( .A(n69), .B(n10), .Y(SUM_2_) );
  XOR2X1 U160 ( .A(n55), .B(n7), .Y(SUM_5_) );
  AOI21XL U161 ( .A0(n60), .A1(n81), .B0(n57), .Y(n55) );
  XOR2X1 U162 ( .A(n46), .B(n6), .Y(SUM_6_) );
  AOI21XL U163 ( .A0(n60), .A1(n47), .B0(n48), .Y(n46) );
  XNOR2X1 U164 ( .A(n66), .B(n9), .Y(SUM_3_) );
  OAI21XL U165 ( .A0(n69), .A1(n67), .B0(n68), .Y(n66) );
  INVXL U166 ( .A(n58), .Y(n81) );
  INVX1 U167 ( .A(n31), .Y(n77) );
  INVX1 U168 ( .A(n32), .Y(n30) );
  OAI2BB1X1 U169 ( .A0N(n25), .A1N(n138), .B0(n22), .Y(n137) );
  NAND2X2 U170 ( .A(A_4_), .B(B_4_), .Y(n59) );
  NOR2X2 U171 ( .A(A_1_), .B(B_1_), .Y(n71) );
  NAND2XL U172 ( .A(A_7_), .B(B_7_), .Y(n38) );
  INVX4 U173 ( .A(n61), .Y(n60) );
endmodule


module ADDA_1 ( DQLN, Y, DQL );
  input [11:0] DQLN;
  input [12:0] Y;
  output [11:0] DQL;
  wire   SYNOPSYS_UNCONNECTED__0;

  ADDA_1_DW01_add_6 add_44 ( .A({1'b0, DQLN}), .B({1'b0, 1'b0, Y[12:2]}), .CI(
        1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, DQL}) );
endmodule


module ANTILOG_1 ( DQL, DQS, DQ );
  input [11:0] DQL;
  output [15:0] DQ;
  input DQS;
  wire   DQS, DQ_14_, DQ_13_, DQ_12_, DQ_11_, DQ_10_, DQ_9_, DQ_8_, DQ_7_,
         DQ_6_, DQ_5_, n73, DQ_3_, n74, DQ_1_, n75, N2, n1, DQ_2_, n3, n4, n5,
         DQ_4_, n7, DQ_0_, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60,
         n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72;
  assign DQ[15] = DQS;
  assign DQ[14] = DQ_14_;
  assign DQ[13] = DQ_13_;
  assign DQ[12] = DQ_12_;
  assign DQ[11] = DQ_11_;
  assign DQ[10] = DQ_10_;
  assign DQ[9] = DQ_9_;
  assign DQ[8] = DQ_8_;
  assign DQ[7] = DQ_7_;
  assign DQ[6] = DQ_6_;
  assign DQ[5] = DQ_5_;
  assign DQ[3] = DQ_3_;
  assign DQ[1] = DQ_1_;
  assign N2 = DQL[7];
  assign DQ[2] = DQ_2_;
  assign DQ[4] = DQ_4_;
  assign DQ[0] = DQ_0_;

  OAI221X4 U3 ( .A0(n71), .A1(n58), .B0(n72), .B1(n57), .C0(n59), .Y(DQ_6_) );
  INVX2 U4 ( .A(n74), .Y(n1) );
  CLKINVX4 U5 ( .A(n1), .Y(DQ_2_) );
  INVX1 U6 ( .A(n34), .Y(n24) );
  AOI2BB2X1 U7 ( .B0(n33), .B1(n14), .A0N(DQL[5]), .A1N(n72), .Y(n63) );
  AOI2BB1X2 U8 ( .A0N(n62), .A1N(DQL[6]), .B0(n12), .Y(n11) );
  NAND2BX1 U9 ( .AN(n7), .B(n24), .Y(n57) );
  OAI22X1 U10 ( .A0(n4), .A1(n34), .B0(n65), .B1(n58), .Y(n74) );
  CLKBUFX8 U11 ( .A(n73), .Y(DQ_4_) );
  NAND2X2 U12 ( .A(n14), .B(n44), .Y(n62) );
  OAI2BB1X1 U13 ( .A0N(n23), .A1N(n22), .B0(n21), .Y(n7) );
  NAND2X1 U14 ( .A(n60), .B(n54), .Y(n55) );
  OAI2BB1X1 U15 ( .A0N(n41), .A1N(n42), .B0(n40), .Y(n43) );
  INVX1 U16 ( .A(n72), .Y(n42) );
  OAI22XL U17 ( .A0(n3), .A1(n71), .B0(n69), .B1(n65), .Y(DQ_8_) );
  INVX1 U18 ( .A(n64), .Y(n3) );
  NAND2X1 U19 ( .A(n26), .B(n16), .Y(n72) );
  NAND2XL U20 ( .A(n60), .B(n64), .Y(n49) );
  NAND2X1 U21 ( .A(n47), .B(n68), .Y(n48) );
  OAI2BB2X1 U22 ( .B0(n43), .B1(n71), .A0N(n60), .A1N(n68), .Y(DQ_7_) );
  OAI21XL U23 ( .A0(DQL[6]), .A1(n14), .B0(n37), .Y(n70) );
  NAND3X1 U24 ( .A(n62), .B(n46), .C(n45), .Y(n68) );
  CLKINVX4 U25 ( .A(n67), .Y(n52) );
  NAND3BX2 U26 ( .AN(DQL[11]), .B(n18), .C(n17), .Y(n67) );
  NAND2BXL U27 ( .AN(n72), .B(DQL[4]), .Y(n45) );
  NAND2BX2 U28 ( .AN(n51), .B(n52), .Y(n65) );
  INVX4 U29 ( .A(n7), .Y(n51) );
  INVX1 U30 ( .A(DQL[0]), .Y(n41) );
  NAND2BX2 U31 ( .AN(DQL[8]), .B(n26), .Y(n16) );
  AND2X2 U32 ( .A(n9), .B(n10), .Y(n4) );
  CLKBUFXL U33 ( .A(DQL[9]), .Y(n5) );
  MXI2X4 U34 ( .A(DQL[5]), .B(DQL[3]), .S0(n37), .Y(n32) );
  MXI2X1 U35 ( .A(n28), .B(n54), .S0(n51), .Y(n66) );
  NAND3BXL U36 ( .AN(n23), .B(DQL[10]), .C(n5), .Y(n18) );
  NAND2X2 U37 ( .A(n14), .B(DQL[8]), .Y(n23) );
  BUFX4 U38 ( .A(n75), .Y(DQ_0_) );
  MXI2X1 U39 ( .A(DQL[4]), .B(DQL[2]), .S0(n37), .Y(n27) );
  INVX8 U40 ( .A(n44), .Y(n37) );
  INVX1 U41 ( .A(n14), .Y(n26) );
  OAI211XL U42 ( .A0(DQL[2]), .A1(n62), .B0(n72), .C0(n36), .Y(n58) );
  MXI2X1 U43 ( .A(n27), .B(n32), .S0(n14), .Y(n54) );
  INVX1 U44 ( .A(n57), .Y(n47) );
  NAND2X1 U45 ( .A(n20), .B(n19), .Y(n50) );
  OAI2BB1X1 U46 ( .A0N(n51), .A1N(n50), .B0(n49), .Y(n73) );
  OR2X2 U47 ( .A(n30), .B(n29), .Y(DQ_1_) );
  NOR2X1 U48 ( .A(n66), .B(n34), .Y(n30) );
  NAND2BX2 U49 ( .AN(n56), .B(n55), .Y(DQ_5_) );
  INVX1 U50 ( .A(n43), .Y(n61) );
  MXI2X1 U51 ( .A(n39), .B(n38), .S0(n14), .Y(n40) );
  OAI2BB1X1 U52 ( .A0N(n50), .A1N(n7), .B0(n25), .Y(n75) );
  NAND2X1 U53 ( .A(n47), .B(n64), .Y(n25) );
  NAND2BX2 U54 ( .AN(n7), .B(n52), .Y(n71) );
  INVX1 U55 ( .A(DQL[6]), .Y(n33) );
  NAND2X4 U56 ( .A(n16), .B(n23), .Y(n44) );
  NAND2X2 U57 ( .A(n11), .B(n51), .Y(n10) );
  MX2X2 U58 ( .A(n32), .B(n31), .S0(n14), .Y(n12) );
  NAND2X1 U59 ( .A(n42), .B(n7), .Y(n9) );
  NOR2BXL U60 ( .AN(n68), .B(n71), .Y(DQ_11_) );
  NAND2X1 U61 ( .A(n21), .B(n15), .Y(n17) );
  MXI2X1 U62 ( .A(n38), .B(n27), .S0(n14), .Y(n64) );
  MXI2XL U63 ( .A(DQL[3]), .B(DQL[1]), .S0(n37), .Y(n38) );
  OAI22XL U64 ( .A0(n71), .A1(n53), .B0(n70), .B1(n57), .Y(n56) );
  NOR2XL U65 ( .A(n71), .B(n70), .Y(DQ_13_) );
  INVXL U66 ( .A(n70), .Y(n28) );
  NOR2XL U67 ( .A(n66), .B(n67), .Y(DQ_9_) );
  NOR2XL U68 ( .A(n4), .B(n67), .Y(DQ_10_) );
  NAND2XL U69 ( .A(n63), .B(n62), .Y(n69) );
  NOR2XL U70 ( .A(DQL[1]), .B(n14), .Y(n35) );
  AOI21XL U71 ( .A0(n37), .A1(n41), .B0(n35), .Y(n36) );
  NAND3BX1 U72 ( .AN(n62), .B(n52), .C(DQL[0]), .Y(n19) );
  NOR2X1 U73 ( .A(n71), .B(n69), .Y(DQ_12_) );
  NOR2XL U74 ( .A(n72), .B(n71), .Y(DQ_14_) );
  NAND2XL U75 ( .A(n11), .B(n60), .Y(n59) );
  OR2X2 U76 ( .A(DQL[11]), .B(n17), .Y(n34) );
  INVX1 U77 ( .A(DQL[10]), .Y(n15) );
  NOR2XL U78 ( .A(n65), .B(n53), .Y(n29) );
  AOI22XL U79 ( .A0(n14), .A1(DQL[5]), .B0(DQL[6]), .B1(n44), .Y(n46) );
  NAND2BX1 U80 ( .AN(n23), .B(DQL[9]), .Y(n21) );
  INVX1 U81 ( .A(DQL[9]), .Y(n22) );
  NOR2XL U82 ( .A(DQL[4]), .B(n44), .Y(n31) );
  NOR2XL U83 ( .A(DQL[2]), .B(n37), .Y(n39) );
  NAND2XL U84 ( .A(n13), .B(n44), .Y(n53) );
  MX2X1 U85 ( .A(DQL[0]), .B(DQL[1]), .S0(n14), .Y(n13) );
  NAND3XL U86 ( .A(n24), .B(n62), .C(n63), .Y(n20) );
  BUFX20 U87 ( .A(N2), .Y(n14) );
  CLKINVX3 U88 ( .A(n65), .Y(n60) );
  OAI2BB1X4 U89 ( .A0N(n61), .A1N(n60), .B0(n48), .Y(DQ_3_) );
endmodule


module I_ADAP_QUAN_1 ( D, Y, I, RATE );
  output [15:0] D;
  input [12:0] Y;
  input [4:0] I;
  input [1:0] RATE;
  wire   DQS;
  wire   [11:0] RECONST_OUT;
  wire   [11:0] ADDA_OUT;

  RECONST_1 I_ADAP_QUAN_RECONST ( .I(I), .RATE(RATE), .DQLN(RECONST_OUT), 
        .DQS(DQS) );
  ADDA_1 I_ADAP_QUAN_ADDA ( .DQLN(RECONST_OUT), .Y(Y), .DQL(ADDA_OUT) );
  ANTILOG_1 I_ADAP_QUAN_ANTILOG ( .DQL(ADDA_OUT), .DQS(DQS), .DQ(D) );
endmodule


module ADDC_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1, n3, n4, n5, n6, n7, n9, n10, n11, n12, n13, n14, n15, n18, n19,
         n20, n21, n22, n23, n24, n26, n27, n28, n29, n30, n31, n33, n35, n36,
         n38, n40, n41, n42, n44, n46, n47, n48, n49, n51, n53, n54, n56, n58,
         n59, n60, n62, n64, n65, n66, n67, n69, n71, n72, n74, n76, n77, n78,
         n80, n82, n83, n84, n85, n86, n88, n90, n91, n92, n93, n95, n97, n98,
         SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_,
         SUM_9_, SUM_10_, SUM_11_, SUM_12_, SUM_13_, SUM_14_, SUM_15_, B_0_,
         B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_, B_11_,
         B_12_, B_13_, B_14_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_,
         A_8_, A_9_, A_10_, A_11_, A_12_, A_13_, A_14_, A_15_, n166, SUM_0_,
         n168, n169, n170, n171, n172, n173, n174, n175, n176, n177, n178,
         n179, n180;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign SUM[15] = SUM_15_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign B_13_ = B[13];
  assign B_14_ = B[14];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];
  assign SUM[0] = SUM_0_;

  OAI21X4 U23 ( .A0(n30), .A1(n42), .B0(n31), .Y(n29) );
  AOI21X4 U131 ( .A0(n47), .A1(n178), .B0(n44), .Y(n42) );
  OAI21X4 U132 ( .A0(n48), .A1(n60), .B0(n49), .Y(n47) );
  OAI21X1 U133 ( .A0(n92), .A1(n95), .B0(n93), .Y(n91) );
  AOI21X2 U134 ( .A0(n65), .A1(n180), .B0(n62), .Y(n60) );
  AOI21X1 U135 ( .A0(n83), .A1(n177), .B0(n80), .Y(n78) );
  NAND2X1 U136 ( .A(n173), .B(n175), .Y(n66) );
  NAND2BXL U137 ( .AN(n92), .B(n93), .Y(n15) );
  AOI21X1 U138 ( .A0(n91), .A1(n179), .B0(n88), .Y(n86) );
  NAND2X1 U139 ( .A(n171), .B(n174), .Y(n30) );
  NAND2X1 U140 ( .A(A_5_), .B(B_5_), .Y(n76) );
  INVX1 U141 ( .A(n76), .Y(n74) );
  OR2X2 U142 ( .A(A_5_), .B(B_5_), .Y(n175) );
  NAND2X1 U143 ( .A(A_0_), .B(B_0_), .Y(n95) );
  OR2X2 U144 ( .A(A_12_), .B(B_12_), .Y(n171) );
  NAND2X1 U145 ( .A(n166), .B(n18), .Y(n1) );
  NAND2X1 U146 ( .A(A_15_), .B(B_14_), .Y(n18) );
  AOI21X1 U147 ( .A0(n29), .A1(n98), .B0(n26), .Y(n24) );
  INVX1 U148 ( .A(n64), .Y(n62) );
  NOR2X1 U149 ( .A(A_3_), .B(B_3_), .Y(n84) );
  NAND2X1 U150 ( .A(A_4_), .B(B_4_), .Y(n82) );
  NAND2X1 U151 ( .A(A_2_), .B(B_2_), .Y(n90) );
  NAND2X1 U152 ( .A(A_8_), .B(B_8_), .Y(n58) );
  OAI21X2 U153 ( .A0(n66), .A1(n78), .B0(n67), .Y(n65) );
  AOI21X1 U154 ( .A0(n173), .A1(n74), .B0(n69), .Y(n67) );
  INVX1 U155 ( .A(n71), .Y(n69) );
  INVX1 U156 ( .A(n58), .Y(n56) );
  NAND2X1 U157 ( .A(A_11_), .B(B_11_), .Y(n40) );
  INVX1 U158 ( .A(n40), .Y(n38) );
  OR2X2 U159 ( .A(A_11_), .B(B_11_), .Y(n174) );
  NOR2X2 U160 ( .A(A_13_), .B(B_13_), .Y(n27) );
  NAND2X1 U161 ( .A(A_13_), .B(B_13_), .Y(n28) );
  NAND2X1 U162 ( .A(A_14_), .B(B_14_), .Y(n23) );
  NOR2X2 U163 ( .A(A_14_), .B(B_14_), .Y(n22) );
  OAI21X2 U164 ( .A0(n22), .A1(n28), .B0(n23), .Y(n21) );
  OR2X2 U165 ( .A(B_14_), .B(A_15_), .Y(n166) );
  AND2X2 U166 ( .A(n170), .B(n95), .Y(SUM_0_) );
  OR2X2 U167 ( .A(A_8_), .B(B_8_), .Y(n176) );
  NAND2X1 U168 ( .A(n172), .B(n176), .Y(n48) );
  XOR2X4 U169 ( .A(n19), .B(n1), .Y(SUM_15_) );
  AOI21X4 U170 ( .A0(n20), .A1(n29), .B0(n21), .Y(n19) );
  AOI21X1 U171 ( .A0(n41), .A1(n174), .B0(n38), .Y(n36) );
  OR2XL U172 ( .A(A_0_), .B(B_0_), .Y(n170) );
  AOI21X2 U173 ( .A0(n171), .A1(n38), .B0(n33), .Y(n31) );
  XNOR2X1 U174 ( .A(n24), .B(n168), .Y(SUM_14_) );
  AND2X1 U175 ( .A(n97), .B(n23), .Y(n168) );
  AOI21XL U176 ( .A0(n59), .A1(n176), .B0(n56), .Y(n54) );
  NAND2XL U177 ( .A(n177), .B(n82), .Y(n12) );
  NAND2XL U178 ( .A(n172), .B(n53), .Y(n7) );
  NAND2XL U179 ( .A(n174), .B(n40), .Y(n5) );
  XOR2X1 U180 ( .A(n59), .B(n169), .Y(SUM_8_) );
  AND2X1 U181 ( .A(n176), .B(n58), .Y(n169) );
  NAND2XL U182 ( .A(n179), .B(n90), .Y(n14) );
  NAND2BXL U183 ( .AN(n84), .B(n85), .Y(n13) );
  NAND2XL U184 ( .A(n173), .B(n71), .Y(n10) );
  NAND2XL U185 ( .A(n175), .B(n76), .Y(n11) );
  XOR2XL U186 ( .A(n15), .B(n95), .Y(SUM_1_) );
  NAND2X1 U187 ( .A(A_12_), .B(B_12_), .Y(n35) );
  NAND2XL U188 ( .A(A_1_), .B(B_1_), .Y(n93) );
  NAND2X1 U189 ( .A(A_10_), .B(B_10_), .Y(n46) );
  INVXL U190 ( .A(n78), .Y(n77) );
  INVX1 U191 ( .A(n60), .Y(n59) );
  INVXL U192 ( .A(n42), .Y(n41) );
  INVX1 U193 ( .A(n35), .Y(n33) );
  INVX1 U194 ( .A(n90), .Y(n88) );
  OAI21X2 U195 ( .A0(n86), .A1(n84), .B0(n85), .Y(n83) );
  AOI21X1 U196 ( .A0(n172), .A1(n56), .B0(n51), .Y(n49) );
  INVX1 U197 ( .A(n53), .Y(n51) );
  INVX1 U198 ( .A(n46), .Y(n44) );
  INVX1 U199 ( .A(n82), .Y(n80) );
  AOI21X1 U200 ( .A0(n77), .A1(n175), .B0(n74), .Y(n72) );
  NOR2X2 U201 ( .A(n22), .B(n27), .Y(n20) );
  NAND2XL U202 ( .A(n98), .B(n28), .Y(n3) );
  INVXL U203 ( .A(n27), .Y(n98) );
  INVXL U204 ( .A(n22), .Y(n97) );
  XNOR2X1 U205 ( .A(n65), .B(n9), .Y(SUM_7_) );
  XOR2X1 U206 ( .A(n72), .B(n10), .Y(SUM_6_) );
  NAND2X1 U207 ( .A(n180), .B(n64), .Y(n9) );
  XOR2X1 U208 ( .A(n36), .B(n4), .Y(SUM_12_) );
  XNOR2X1 U209 ( .A(n29), .B(n3), .Y(SUM_13_) );
  NAND2X1 U210 ( .A(n171), .B(n35), .Y(n4) );
  XNOR2X1 U211 ( .A(n83), .B(n12), .Y(SUM_4_) );
  XNOR2X1 U212 ( .A(n77), .B(n11), .Y(SUM_5_) );
  XOR2X1 U213 ( .A(n54), .B(n7), .Y(SUM_9_) );
  XNOR2XL U214 ( .A(n14), .B(n91), .Y(SUM_2_) );
  XOR2XL U215 ( .A(n13), .B(n86), .Y(SUM_3_) );
  XNOR2X1 U216 ( .A(n47), .B(n6), .Y(SUM_10_) );
  XNOR2X1 U217 ( .A(n41), .B(n5), .Y(SUM_11_) );
  NAND2X1 U218 ( .A(n178), .B(n46), .Y(n6) );
  INVXL U219 ( .A(n28), .Y(n26) );
  NOR2X1 U220 ( .A(A_1_), .B(B_1_), .Y(n92) );
  OR2X2 U221 ( .A(A_9_), .B(B_9_), .Y(n172) );
  OR2X2 U222 ( .A(A_6_), .B(B_6_), .Y(n173) );
  NAND2X1 U223 ( .A(A_3_), .B(B_3_), .Y(n85) );
  NAND2X1 U224 ( .A(A_9_), .B(B_9_), .Y(n53) );
  NAND2X1 U225 ( .A(A_7_), .B(B_7_), .Y(n64) );
  NAND2X1 U226 ( .A(A_6_), .B(B_6_), .Y(n71) );
  OR2X2 U227 ( .A(A_4_), .B(B_4_), .Y(n177) );
  OR2X2 U228 ( .A(A_10_), .B(B_10_), .Y(n178) );
  OR2X2 U229 ( .A(A_2_), .B(B_2_), .Y(n179) );
  OR2X2 U230 ( .A(A_7_), .B(B_7_), .Y(n180) );
endmodule


module ADDC_1 ( DQ, SEZ, PK0, SIGPK );
  input [15:0] DQ;
  input [14:0] SEZ;
  output PK0, SIGPK;
  wire   N3, DQI_15_, N19, n1, n2, n3, n4, n5, n6, n7, n8, n9, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55,
         n56, n57, n58, n59;
  wire   [14:0] DQSEZ;
  assign N3 = DQ[0];
  assign SIGPK = N19;

  XOR2X2 U2 ( .A(DQ[14]), .B(n18), .Y(n46) );
  NAND2X1 U4 ( .A(n6), .B(n15), .Y(n17) );
  NOR2BX1 U5 ( .AN(n29), .B(n34), .Y(n30) );
  NOR2XL U6 ( .A(n9), .B(n34), .Y(n20) );
  OR2X2 U7 ( .A(n6), .B(n34), .Y(n2) );
  AND2X2 U8 ( .A(n17), .B(DQ[15]), .Y(n18) );
  NOR2X1 U9 ( .A(n13), .B(n34), .Y(n33) );
  NOR2X2 U10 ( .A(N3), .B(DQ[1]), .Y(n13) );
  NOR3X2 U11 ( .A(DQ[4]), .B(DQ[3]), .C(DQ[5]), .Y(n4) );
  NOR2BX2 U12 ( .AN(N3), .B(n34), .Y(n35) );
  NOR2X2 U13 ( .A(n7), .B(n34), .Y(n19) );
  NOR2BX4 U14 ( .AN(n7), .B(DQ[12]), .Y(n6) );
  NOR2X1 U15 ( .A(PK0), .B(DQSEZ[14]), .Y(n40) );
  INVX1 U16 ( .A(DQ[8]), .Y(n14) );
  NAND4X1 U17 ( .A(n39), .B(n38), .C(n37), .D(n36), .Y(n45) );
  XOR2X1 U18 ( .A(DQ[11]), .B(n20), .Y(n49) );
  XNOR2X1 U19 ( .A(DQ[13]), .B(n2), .Y(n47) );
  INVX1 U20 ( .A(DQ[13]), .Y(n15) );
  AND2X2 U21 ( .A(n8), .B(n14), .Y(n1) );
  INVX1 U22 ( .A(DQ[15]), .Y(n34) );
  NOR2X4 U23 ( .A(n45), .B(n44), .Y(N19) );
  NOR2XL U24 ( .A(DQ[14]), .B(n17), .Y(n16) );
  NOR2XL U25 ( .A(n8), .B(n34), .Y(n23) );
  INVXL U26 ( .A(DQ[3]), .Y(n27) );
  INVXL U27 ( .A(DQ[1]), .Y(n3) );
  NOR2X1 U28 ( .A(DQSEZ[0]), .B(DQSEZ[1]), .Y(n38) );
  NOR2BX4 U29 ( .AN(n12), .B(DQ[10]), .Y(n9) );
  NOR2BX4 U30 ( .AN(n9), .B(DQ[11]), .Y(n7) );
  NOR2BX4 U31 ( .AN(n25), .B(DQ[6]), .Y(n11) );
  NOR2XL U32 ( .A(n1), .B(n34), .Y(n22) );
  INVXL U33 ( .A(DQ[2]), .Y(n31) );
  NOR2XL U34 ( .A(n12), .B(n34), .Y(n21) );
  NOR2XL U35 ( .A(n11), .B(n34), .Y(n24) );
  NOR2XL U36 ( .A(n25), .B(n34), .Y(n26) );
  AND3X4 U37 ( .A(n4), .B(n3), .C(n5), .Y(n25) );
  NOR2X4 U38 ( .A(DQ[2]), .B(N3), .Y(n5) );
  XNOR2X1 U39 ( .A(DQ[5]), .B(n28), .Y(n55) );
  NAND4X2 U40 ( .A(n43), .B(n42), .C(n41), .D(n40), .Y(n44) );
  XOR2X1 U41 ( .A(DQ[12]), .B(n19), .Y(n48) );
  XOR2X1 U42 ( .A(DQ[2]), .B(n33), .Y(n58) );
  NOR2X1 U43 ( .A(n16), .B(n34), .Y(DQI_15_) );
  XOR2X1 U44 ( .A(DQ[10]), .B(n21), .Y(n50) );
  XOR2X1 U45 ( .A(DQ[8]), .B(n23), .Y(n52) );
  XOR2X1 U46 ( .A(DQ[9]), .B(n22), .Y(n51) );
  XOR2X1 U47 ( .A(DQ[6]), .B(n26), .Y(n54) );
  XOR2X1 U48 ( .A(DQ[7]), .B(n24), .Y(n53) );
  XOR2X1 U49 ( .A(DQ[3]), .B(n32), .Y(n57) );
  AOI21X1 U50 ( .A0(n13), .A1(n31), .B0(n34), .Y(n32) );
  NOR2BX1 U51 ( .AN(n11), .B(DQ[7]), .Y(n8) );
  NOR2BX4 U52 ( .AN(n1), .B(DQ[9]), .Y(n12) );
  XOR2X1 U53 ( .A(DQ[4]), .B(n30), .Y(n56) );
  XOR2X1 U54 ( .A(DQ[1]), .B(n35), .Y(n59) );
  OAI21XL U55 ( .A0(DQ[4]), .A1(n29), .B0(DQ[15]), .Y(n28) );
  NOR2X1 U56 ( .A(DQSEZ[6]), .B(DQSEZ[7]), .Y(n36) );
  NOR2X1 U57 ( .A(DQSEZ[12]), .B(DQSEZ[13]), .Y(n41) );
  NOR2X1 U58 ( .A(DQSEZ[4]), .B(DQSEZ[5]), .Y(n37) );
  NOR2X1 U59 ( .A(DQSEZ[8]), .B(DQSEZ[9]), .Y(n42) );
  NOR2X1 U60 ( .A(DQSEZ[2]), .B(DQSEZ[3]), .Y(n39) );
  NOR2X1 U61 ( .A(DQSEZ[10]), .B(DQSEZ[11]), .Y(n43) );
  NAND3BX1 U62 ( .AN(DQ[2]), .B(n27), .C(n13), .Y(n29) );
  ADDC_1_DW01_add_1 add_57 ( .A({DQI_15_, n46, n47, n48, n49, n50, n51, n52, 
        n53, n54, n55, n56, n57, n58, n59, N3}), .B({SEZ[14], SEZ}), .CI(1'b0), 
        .SUM({PK0, DQSEZ}) );
endmodule


module DELAY_RESET_STATE0_WIDTH1_3_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
  SDFFRHQX1 delay0_reg_0_ ( .D(x_0_), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0_0_) );
endmodule


module DELAY_RESET_STATE0_WIDTH1_2_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay0_reg_0_ ( .D(x_0_), .SI(x_0_), .SE(test_se), .CK(clk), .RN(
        n1), .Q(delay0_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
endmodule


module ADDB_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module ADDB_1 ( DQ, SE, SR );
  input [15:0] DQ;
  input [14:0] SE;
  output [15:0] SR;
  wire   N3, DQI_15_, n1, n2, n3, n4, n5, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46;
  assign N3 = DQ[0];

  NOR2BX1 U2 ( .AN(N3), .B(n31), .Y(n32) );
  NOR2X1 U4 ( .A(DQ[3]), .B(n27), .Y(n25) );
  OAI21XL U5 ( .A0(n1), .A1(DQ[14]), .B0(DQ[15]), .Y(n2) );
  INVX1 U6 ( .A(n3), .Y(n1) );
  INVX1 U7 ( .A(n2), .Y(DQI_15_) );
  NOR2X1 U8 ( .A(N3), .B(DQ[1]), .Y(n14) );
  NOR2BXL U9 ( .AN(n4), .B(DQ[13]), .Y(n3) );
  INVXL U10 ( .A(DQ[15]), .Y(n31) );
  NOR2BXL U11 ( .AN(n8), .B(DQ[9]), .Y(n9) );
  NOR2BXL U12 ( .AN(n10), .B(DQ[11]), .Y(n11) );
  NOR2BXL U13 ( .AN(n9), .B(DQ[10]), .Y(n10) );
  NOR2BXL U14 ( .AN(n7), .B(DQ[8]), .Y(n8) );
  NOR2BXL U15 ( .AN(n13), .B(DQ[6]), .Y(n5) );
  INVXL U16 ( .A(DQ[3]), .Y(n28) );
  NOR2BXL U17 ( .AN(n12), .B(DQ[5]), .Y(n13) );
  NOR2BXL U18 ( .AN(n25), .B(DQ[4]), .Y(n12) );
  NOR2BX1 U19 ( .AN(n11), .B(DQ[12]), .Y(n4) );
  NOR2BX1 U20 ( .AN(n5), .B(DQ[7]), .Y(n7) );
  XOR2X1 U21 ( .A(DQ[14]), .B(n15), .Y(n33) );
  NOR2X1 U22 ( .A(n3), .B(n31), .Y(n15) );
  XOR2X1 U23 ( .A(n29), .B(n28), .Y(n44) );
  NAND2X1 U24 ( .A(DQ[15]), .B(n27), .Y(n29) );
  XOR2X1 U25 ( .A(DQ[1]), .B(n32), .Y(n46) );
  XOR2X1 U26 ( .A(DQ[6]), .B(n23), .Y(n41) );
  NOR2X1 U27 ( .A(n13), .B(n31), .Y(n23) );
  XOR2X1 U28 ( .A(DQ[9]), .B(n20), .Y(n38) );
  NOR2X1 U29 ( .A(n8), .B(n31), .Y(n20) );
  XOR2X1 U30 ( .A(DQ[10]), .B(n19), .Y(n37) );
  NOR2X1 U31 ( .A(n9), .B(n31), .Y(n19) );
  XOR2X1 U32 ( .A(DQ[11]), .B(n18), .Y(n36) );
  NOR2X1 U33 ( .A(n10), .B(n31), .Y(n18) );
  XOR2X1 U34 ( .A(DQ[4]), .B(n26), .Y(n43) );
  NOR2X1 U35 ( .A(n25), .B(n31), .Y(n26) );
  XOR2X1 U36 ( .A(DQ[5]), .B(n24), .Y(n42) );
  NOR2X1 U37 ( .A(n12), .B(n31), .Y(n24) );
  XOR2X1 U38 ( .A(DQ[7]), .B(n22), .Y(n40) );
  NOR2X1 U39 ( .A(n5), .B(n31), .Y(n22) );
  XOR2X1 U40 ( .A(DQ[8]), .B(n21), .Y(n39) );
  NOR2X1 U41 ( .A(n7), .B(n31), .Y(n21) );
  XOR2X1 U42 ( .A(DQ[12]), .B(n17), .Y(n35) );
  NOR2X1 U43 ( .A(n11), .B(n31), .Y(n17) );
  XOR2X1 U44 ( .A(DQ[13]), .B(n16), .Y(n34) );
  NOR2X1 U45 ( .A(n4), .B(n31), .Y(n16) );
  NOR2X1 U46 ( .A(n14), .B(n31), .Y(n30) );
  XOR2X1 U47 ( .A(DQ[2]), .B(n30), .Y(n45) );
  NAND2BX1 U48 ( .AN(DQ[2]), .B(n14), .Y(n27) );
  ADDB_1_DW01_add_0 add_83 ( .A({DQI_15_, n33, n34, n35, n36, n37, n38, n39, 
        n40, n41, n42, n43, n44, n45, n46, N3}), .B({SE[14], SE}), .CI(1'b0), 
        .SUM(SR) );
endmodule


module FLOATB_1 ( SR, SR0 );
  input [15:0] SR;
  output [10:0] SR0;
  wire   SR_15_, SR0_9_, SR0_8_, SR0_7_, SR0_6_, SR0_5_, SR0_4_, SR0_3_,
         SR0_2_, SR0_1_, SR0_0_, N6, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, SR0_10_, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23,
         n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37,
         n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127,
         n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138,
         n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149,
         n150, n151, n152;
  assign SR_15_ = SR[15];
  assign SR0[9] = SR0_9_;
  assign SR0[8] = SR0_8_;
  assign SR0[7] = SR0_7_;
  assign SR0[6] = SR0_6_;
  assign SR0[5] = SR0_5_;
  assign SR0[4] = SR0_4_;
  assign SR0[3] = SR0_3_;
  assign SR0[2] = SR0_2_;
  assign SR0[1] = SR0_1_;
  assign SR0[0] = SR0_0_;
  assign N6 = SR[0];
  assign SR0[10] = SR0_10_;

  MX2X2 U3 ( .A(SR[12]), .B(n18), .S0(SR0_10_), .Y(n5) );
  MX2X2 U4 ( .A(SR[11]), .B(n15), .S0(SR0_10_), .Y(n6) );
  NAND2X2 U5 ( .A(SR0_10_), .B(n21), .Y(n16) );
  BUFX20 U6 ( .A(SR_15_), .Y(SR0_10_) );
  MX4X1 U7 ( .A(n91), .B(n92), .C(n89), .D(n90), .S0(SR0_8_), .S1(SR0_7_), .Y(
        n105) );
  OAI221XL U8 ( .A0(n119), .A1(n121), .B0(n122), .B1(n115), .C0(n70), .Y(n140)
         );
  NAND4X1 U9 ( .A(n90), .B(n147), .C(n107), .D(n146), .Y(n49) );
  NOR2BX1 U10 ( .AN(n65), .B(n46), .Y(n3) );
  NOR2X1 U11 ( .A(n80), .B(SR0_9_), .Y(n58) );
  OR2X2 U12 ( .A(n146), .B(n118), .Y(n133) );
  NOR2BX1 U13 ( .AN(n121), .B(n53), .Y(n57) );
  AOI2BB1X1 U14 ( .A0N(SR0_9_), .A1N(n95), .B0(n51), .Y(n52) );
  OAI222XL U15 ( .A0(SR0_7_), .A1(n139), .B0(n118), .B1(n115), .C0(n116), .C1(
        n121), .Y(n1) );
  INVX1 U16 ( .A(n1), .Y(n103) );
  AOI21X1 U17 ( .A0(n53), .A1(n109), .B0(n49), .Y(n2) );
  INVX1 U18 ( .A(n2), .Y(SR0_8_) );
  NAND2X1 U19 ( .A(n89), .B(n3), .Y(SR0_9_) );
  AND4X1 U20 ( .A(n147), .B(n146), .C(n107), .D(n119), .Y(n152) );
  AOI21XL U21 ( .A0(n57), .A1(n64), .B0(n74), .Y(n60) );
  OAI2BB2X1 U22 ( .B0(n60), .B1(n59), .A0N(n81), .A1N(n58), .Y(n63) );
  NAND2XL U23 ( .A(n47), .B(n146), .Y(n55) );
  OR2X2 U24 ( .A(n151), .B(n139), .Y(n143) );
  INVX1 U25 ( .A(n115), .Y(n79) );
  INVX1 U26 ( .A(SR0_6_), .Y(n104) );
  INVX1 U27 ( .A(n118), .Y(n130) );
  INVX1 U28 ( .A(SR0_8_), .Y(n137) );
  NAND2X1 U29 ( .A(n12), .B(n117), .Y(n48) );
  NAND2XL U30 ( .A(n108), .B(n127), .Y(n78) );
  NAND2XL U31 ( .A(n73), .B(n148), .Y(n77) );
  MXI2X1 U32 ( .A(n145), .B(n86), .S0(n137), .Y(n87) );
  NAND2X1 U33 ( .A(SR0_6_), .B(n93), .Y(n122) );
  NAND2BX1 U34 ( .AN(SR0_9_), .B(n137), .Y(n151) );
  NAND2BX1 U35 ( .AN(SR0_9_), .B(SR0_8_), .Y(n150) );
  NAND2X1 U36 ( .A(n104), .B(n93), .Y(n119) );
  INVX1 U37 ( .A(n59), .Y(n50) );
  NAND2XL U38 ( .A(SR0_7_), .B(n104), .Y(n116) );
  INVXL U39 ( .A(SR0_7_), .Y(n93) );
  NAND2XL U40 ( .A(n130), .B(n74), .Y(n67) );
  NAND2XL U41 ( .A(n129), .B(n130), .Y(n76) );
  AOI21XL U42 ( .A0(n130), .A1(n110), .B0(n109), .Y(n112) );
  MXI2XL U43 ( .A(n149), .B(n108), .S0(n137), .Y(n110) );
  AOI21XL U44 ( .A0(n148), .A1(n98), .B0(n109), .Y(n99) );
  MXI2XL U45 ( .A(n108), .B(n97), .S0(n137), .Y(n98) );
  NAND2XL U46 ( .A(n141), .B(n140), .Y(n142) );
  NAND2XL U47 ( .A(n128), .B(n127), .Y(n135) );
  NAND2XL U48 ( .A(n129), .B(n148), .Y(n134) );
  NAND2XL U49 ( .A(n130), .B(n80), .Y(n83) );
  NAND2XL U50 ( .A(n97), .B(n127), .Y(n85) );
  NAND2XL U51 ( .A(n79), .B(n148), .Y(n84) );
  NAND2XL U52 ( .A(n149), .B(n131), .Y(n132) );
  NAND2XL U53 ( .A(n74), .B(n131), .Y(n75) );
  NAND2XL U54 ( .A(n131), .B(n106), .Y(n100) );
  NAND2XL U55 ( .A(n131), .B(n108), .Y(n66) );
  NAND2XL U56 ( .A(n131), .B(n81), .Y(n82) );
  NAND2XL U57 ( .A(n127), .B(n106), .Y(n113) );
  OAI211XL U58 ( .A0(n57), .A1(n53), .B0(n147), .C0(n52), .Y(n61) );
  NOR2XL U59 ( .A(n50), .B(n49), .Y(n51) );
  OAI22XL U60 ( .A0(n118), .A1(n117), .B0(n116), .B1(n115), .Y(n124) );
  NAND4BXL U61 ( .AN(n145), .B(n152), .C(n151), .D(n150), .Y(SR0_5_) );
  NAND2XL U62 ( .A(n105), .B(SR0_6_), .Y(n101) );
  INVXL U63 ( .A(n91), .Y(n81) );
  INVXL U64 ( .A(n92), .Y(n74) );
  INVXL U65 ( .A(n117), .Y(n97) );
  MXI2XL U66 ( .A(n64), .B(N6), .S0(n104), .Y(n139) );
  NAND2X1 U67 ( .A(n4), .B(n24), .Y(n94) );
  MX2X1 U68 ( .A(SR[10]), .B(n23), .S0(SR0_10_), .Y(n4) );
  NAND2X1 U69 ( .A(n5), .B(n19), .Y(n107) );
  NAND2XL U70 ( .A(n127), .B(N6), .Y(n72) );
  NAND2X1 U71 ( .A(n6), .B(n17), .Y(n90) );
  NOR3BXL U72 ( .AN(N6), .B(n151), .C(n118), .Y(n111) );
  NAND2X1 U73 ( .A(n7), .B(n34), .Y(n95) );
  MX2X1 U74 ( .A(SR[6]), .B(n33), .S0(SR0_10_), .Y(n7) );
  NAND2X1 U75 ( .A(n8), .B(n28), .Y(n89) );
  MX2X1 U76 ( .A(SR[7]), .B(n14), .S0(SR0_10_), .Y(n8) );
  NAND2X1 U77 ( .A(n9), .B(n30), .Y(n65) );
  MX2X1 U78 ( .A(SR[8]), .B(n29), .S0(SR0_10_), .Y(n9) );
  NAND2XL U79 ( .A(n10), .B(n45), .Y(n121) );
  MX2X1 U80 ( .A(SR[2]), .B(n44), .S0(SR0_10_), .Y(n10) );
  NAND2XL U81 ( .A(n11), .B(n43), .Y(n120) );
  MX2X1 U82 ( .A(SR[1]), .B(n42), .S0(SR0_10_), .Y(n11) );
  INVX1 U83 ( .A(n150), .Y(n141) );
  INVX1 U84 ( .A(n119), .Y(n148) );
  INVX1 U85 ( .A(n116), .Y(n131) );
  INVX1 U86 ( .A(SR0_9_), .Y(n109) );
  INVX1 U87 ( .A(n122), .Y(n127) );
  NAND4X1 U88 ( .A(n69), .B(n68), .C(n67), .D(n66), .Y(n138) );
  NAND2X1 U89 ( .A(n127), .B(n73), .Y(n69) );
  NAND2X1 U90 ( .A(n148), .B(n80), .Y(n68) );
  NAND4X1 U91 ( .A(n78), .B(n77), .C(n76), .D(n75), .Y(n145) );
  NAND4X1 U92 ( .A(n135), .B(n134), .C(n133), .D(n132), .Y(n136) );
  NAND4X1 U93 ( .A(n85), .B(n84), .C(n83), .D(n82), .Y(n86) );
  NAND3X1 U94 ( .A(n144), .B(n143), .C(n142), .Y(SR0_4_) );
  AOI21X1 U95 ( .A0(n138), .A1(n137), .B0(n136), .Y(n144) );
  OR2X2 U96 ( .A(n79), .B(n48), .Y(n53) );
  NAND2X1 U97 ( .A(n105), .B(n104), .Y(n114) );
  NAND2X1 U98 ( .A(SR0_6_), .B(SR0_7_), .Y(n118) );
  NAND3BX1 U99 ( .AN(n63), .B(n146), .C(n62), .Y(SR0_7_) );
  INVX1 U100 ( .A(n61), .Y(n62) );
  OAI31X1 U101 ( .A0(n93), .A1(n139), .A2(n150), .B0(n71), .Y(SR0_0_) );
  MXI2X1 U102 ( .A(n138), .B(n140), .S0(n137), .Y(n71) );
  NAND2X1 U103 ( .A(n50), .B(n92), .Y(n46) );
  AOI22X1 U104 ( .A0(n97), .A1(n131), .B0(n130), .B1(n81), .Y(n70) );
  OAI21XL U105 ( .A0(n103), .A1(n150), .B0(n102), .Y(SR0_2_) );
  NAND3X1 U106 ( .A(n101), .B(n100), .C(n99), .Y(n102) );
  NAND2BX1 U107 ( .AN(n49), .B(n94), .Y(n59) );
  NAND2X1 U108 ( .A(n126), .B(n125), .Y(SR0_3_) );
  OAI21XL U109 ( .A0(n124), .A1(n123), .B0(n141), .Y(n125) );
  AOI31X1 U110 ( .A0(n114), .A1(n113), .A2(n112), .B0(n111), .Y(n126) );
  OAI22X1 U111 ( .A0(n122), .A1(n121), .B0(n120), .B1(n119), .Y(n123) );
  AND2X2 U112 ( .A(n58), .B(n91), .Y(n12) );
  INVX1 U113 ( .A(n90), .Y(n128) );
  INVX1 U114 ( .A(n95), .Y(n80) );
  OAI21XL U115 ( .A0(n3), .A1(n46), .B0(n107), .Y(n47) );
  INVX1 U116 ( .A(n89), .Y(n73) );
  INVX1 U117 ( .A(n96), .Y(n106) );
  OAI21XL U118 ( .A0(SR0_8_), .A1(n95), .B0(n94), .Y(n96) );
  INVX1 U119 ( .A(n120), .Y(n64) );
  INVX1 U120 ( .A(n65), .Y(n108) );
  INVX1 U121 ( .A(n107), .Y(n149) );
  INVX1 U122 ( .A(n94), .Y(n129) );
  NAND4X1 U123 ( .A(n56), .B(n55), .C(n54), .D(n62), .Y(SR0_6_) );
  NAND2X1 U124 ( .A(n48), .B(n12), .Y(n54) );
  NAND3X1 U125 ( .A(N6), .B(n120), .C(n57), .Y(n56) );
  NAND2BX1 U126 ( .AN(n22), .B(n21), .Y(n146) );
  MXI2X1 U127 ( .A(SR[13]), .B(n20), .S0(SR0_10_), .Y(n22) );
  NAND2X1 U128 ( .A(SR[13]), .B(n19), .Y(n20) );
  NAND2X1 U129 ( .A(SR[12]), .B(n17), .Y(n18) );
  OR2X2 U130 ( .A(SR[2]), .B(n43), .Y(n45) );
  OR2X2 U131 ( .A(SR[3]), .B(n45), .Y(n38) );
  OR2X2 U132 ( .A(SR[4]), .B(n38), .Y(n40) );
  OR2X2 U133 ( .A(SR[5]), .B(n40), .Y(n36) );
  OR2X2 U134 ( .A(SR[8]), .B(n28), .Y(n30) );
  OR2X2 U135 ( .A(SR[6]), .B(n36), .Y(n34) );
  OR2X2 U136 ( .A(SR[9]), .B(n30), .Y(n26) );
  OR2X2 U137 ( .A(SR[7]), .B(n34), .Y(n28) );
  OR2X2 U138 ( .A(SR[10]), .B(n26), .Y(n24) );
  OR2X2 U139 ( .A(SR[12]), .B(n17), .Y(n19) );
  OR2X2 U140 ( .A(SR[11]), .B(n24), .Y(n17) );
  NAND2BX1 U141 ( .AN(n27), .B(n26), .Y(n92) );
  MXI2X1 U142 ( .A(SR[9]), .B(n25), .S0(SR0_10_), .Y(n27) );
  NAND2X1 U143 ( .A(SR[9]), .B(n30), .Y(n25) );
  NAND2X1 U144 ( .A(SR[10]), .B(n26), .Y(n23) );
  NAND2X1 U145 ( .A(SR[11]), .B(n24), .Y(n15) );
  XOR2X1 U146 ( .A(n16), .B(SR[14]), .Y(n147) );
  OAI2BB1X1 U147 ( .A0N(n141), .A1N(n88), .B0(n87), .Y(SR0_1_) );
  OAI221XL U148 ( .A0(n120), .A1(n116), .B0(n118), .B1(n121), .C0(n72), .Y(n88) );
  OR2X2 U149 ( .A(SR[13]), .B(n19), .Y(n21) );
  NAND2BX1 U150 ( .AN(n32), .B(n38), .Y(n115) );
  MXI2X1 U151 ( .A(SR[3]), .B(n31), .S0(SR0_10_), .Y(n32) );
  NAND2X1 U152 ( .A(SR[3]), .B(n45), .Y(n31) );
  NAND2BX1 U153 ( .AN(n41), .B(n40), .Y(n117) );
  MXI2X1 U154 ( .A(SR[4]), .B(n39), .S0(SR0_10_), .Y(n41) );
  NAND2X1 U155 ( .A(SR[4]), .B(n38), .Y(n39) );
  OR2X2 U156 ( .A(SR[1]), .B(N6), .Y(n43) );
  NAND2BX1 U157 ( .AN(n37), .B(n36), .Y(n91) );
  MXI2X1 U158 ( .A(SR[5]), .B(n35), .S0(SR0_10_), .Y(n37) );
  NAND2X1 U159 ( .A(SR[5]), .B(n40), .Y(n35) );
  NAND2X1 U160 ( .A(SR[6]), .B(n36), .Y(n33) );
  NAND2X1 U161 ( .A(SR[2]), .B(n43), .Y(n44) );
  NAND2X1 U162 ( .A(SR[7]), .B(n34), .Y(n14) );
  NAND2X1 U163 ( .A(SR[8]), .B(n28), .Y(n29) );
  NAND2X1 U164 ( .A(SR[1]), .B(N6), .Y(n42) );
endmodule


module DELAY_020_11_15_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[10]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n3), .SE(test_se), .CK(clk), .RN(n10), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n13) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n12) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n8) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay4[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n5) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay1[5]), .QN(n4) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n3) );
endmodule


module FLOATA_1 ( DQ, DQ0 );
  input [15:0] DQ;
  output [10:0] DQ0;
  wire   DQ_15_, DQ0_9_, DQ0_8_, DQ0_7_, DQ0_5_, DQ0_4_, DQ0_3_, DQ0_2_,
         DQ0_1_, DQ0_0_, N60, N63, N64, N65, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n1, n2,
         DQ0_6_, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n45, n46, n47, n48, n49,
         n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63;
  assign DQ0[10] = DQ_15_;
  assign DQ_15_ = DQ[15];
  assign DQ0[9] = DQ0_9_;
  assign DQ0[8] = DQ0_8_;
  assign DQ0[7] = DQ0_7_;
  assign DQ0[5] = DQ0_5_;
  assign DQ0[4] = DQ0_4_;
  assign DQ0[3] = DQ0_3_;
  assign DQ0[2] = DQ0_2_;
  assign DQ0[1] = DQ0_1_;
  assign DQ0[0] = DQ0_0_;
  assign DQ0[6] = DQ0_6_;

  OAI221X1 U3 ( .A0(n10), .A1(n37), .B0(n36), .B1(n31), .C0(n9), .Y(DQ0_6_) );
  NAND2XL U4 ( .A(DQ0_8_), .B(n17), .Y(n22) );
  INVX1 U5 ( .A(DQ0_7_), .Y(n4) );
  NOR2X1 U6 ( .A(n4), .B(n15), .Y(n57) );
  MXI2X1 U7 ( .A(n20), .B(n18), .S0(DQ0_7_), .Y(n56) );
  MXI2X1 U8 ( .A(n49), .B(n47), .S0(DQ0_7_), .Y(n62) );
  MXI2X1 U9 ( .A(n16), .B(n19), .S0(DQ0_7_), .Y(n55) );
  MXI2X1 U10 ( .A(n25), .B(n24), .S0(n4), .Y(n45) );
  NOR2XL U11 ( .A(n1), .B(n43), .Y(DQ0_1_) );
  NOR2XL U12 ( .A(n2), .B(n43), .Y(DQ0_2_) );
  INVXL U13 ( .A(n27), .Y(n6) );
  NOR2XL U14 ( .A(DQ[13]), .B(DQ[14]), .Y(n28) );
  NOR2XL U15 ( .A(DQ[11]), .B(n42), .Y(n26) );
  NOR2XL U16 ( .A(DQ[6]), .B(DQ0_9_), .Y(n30) );
  NOR2XL U17 ( .A(DQ[9]), .B(n35), .Y(n34) );
  MX4XL U18 ( .A(n57), .B(n56), .C(n55), .D(n54), .S0(DQ0_9_), .S1(DQ0_8_), 
        .Y(N64) );
  MXI2XL U19 ( .A(n53), .B(n52), .S0(n4), .Y(n54) );
  MXI2XL U20 ( .A(DQ[12]), .B(DQ[13]), .S0(DQ0_6_), .Y(n53) );
  MX2X1 U21 ( .A(n14), .B(n13), .S0(DQ0_9_), .Y(n1) );
  MXI2XL U22 ( .A(n12), .B(n11), .S0(DQ0_9_), .Y(N60) );
  NAND2XL U23 ( .A(n57), .B(DQ0_8_), .Y(n12) );
  MXI2XL U24 ( .A(n55), .B(n56), .S0(DQ0_8_), .Y(n11) );
  NOR2BXL U25 ( .AN(n34), .B(DQ[8]), .Y(n44) );
  MXI2XL U26 ( .A(DQ[8]), .B(DQ[9]), .S0(DQ0_6_), .Y(n18) );
  MXI2XL U27 ( .A(DQ[9]), .B(DQ[10]), .S0(DQ0_6_), .Y(n47) );
  MXI2XL U28 ( .A(DQ[6]), .B(DQ[7]), .S0(DQ0_6_), .Y(n20) );
  MXI2XL U29 ( .A(DQ[7]), .B(DQ[8]), .S0(DQ0_6_), .Y(n49) );
  MXI2XL U30 ( .A(DQ[10]), .B(DQ[11]), .S0(DQ0_6_), .Y(n52) );
  MXI2XL U31 ( .A(DQ[11]), .B(DQ[12]), .S0(DQ0_6_), .Y(n58) );
  MXI2XL U32 ( .A(n51), .B(n50), .S0(DQ0_9_), .Y(N63) );
  MX4XL U33 ( .A(n49), .B(n58), .C(n48), .D(n47), .S0(DQ0_8_), .S1(n4), .Y(n50) );
  MXI2XL U34 ( .A(n46), .B(n45), .S0(DQ0_8_), .Y(n51) );
  MX2X1 U35 ( .A(n22), .B(n21), .S0(DQ0_9_), .Y(n2) );
  MXI2XL U36 ( .A(n16), .B(n15), .S0(n4), .Y(n17) );
  NOR2XL U37 ( .A(n23), .B(n4), .Y(n46) );
  MX4XL U38 ( .A(n63), .B(n62), .C(n61), .D(n60), .S0(DQ0_9_), .S1(DQ0_8_), 
        .Y(N65) );
  MXI2XL U39 ( .A(n59), .B(n58), .S0(n4), .Y(n60) );
  MXI2XL U40 ( .A(DQ[13]), .B(DQ[14]), .S0(DQ0_6_), .Y(n59) );
  NOR2XL U41 ( .A(DQ[0]), .B(n7), .Y(n43) );
  NOR2XL U42 ( .A(DQ[4]), .B(n31), .Y(n36) );
  NOR2XL U43 ( .A(DQ[1]), .B(n8), .Y(n33) );
  MXI2XL U44 ( .A(DQ[4]), .B(DQ[5]), .S0(DQ0_6_), .Y(n19) );
  MXI2XL U45 ( .A(DQ[0]), .B(DQ[1]), .S0(DQ0_6_), .Y(n15) );
  NAND2XL U46 ( .A(DQ0_6_), .B(DQ[0]), .Y(n23) );
  INVX1 U47 ( .A(n39), .Y(n8) );
  NAND2BX1 U48 ( .AN(DQ[12]), .B(n28), .Y(n42) );
  OAI21XL U49 ( .A0(n6), .A1(DQ0_9_), .B0(n26), .Y(DQ0_8_) );
  INVX1 U50 ( .A(n38), .Y(n9) );
  OAI221XL U51 ( .A0(n30), .A1(DQ0_9_), .B0(n39), .B1(n27), .C0(n40), .Y(n38)
         );
  AOI21X1 U52 ( .A0(n26), .A1(n35), .B0(DQ[14]), .Y(n40) );
  MXI2X1 U53 ( .A(n25), .B(n48), .S0(DQ0_7_), .Y(n61) );
  MXI2X1 U54 ( .A(n23), .B(n24), .S0(DQ0_7_), .Y(n63) );
  NAND2BX1 U55 ( .AN(DQ[10]), .B(n26), .Y(n35) );
  NOR2BX1 U56 ( .AN(N60), .B(n43), .Y(DQ0_0_) );
  OAI21XL U57 ( .A0(n43), .A1(n7), .B0(n44), .Y(n41) );
  NAND3X1 U58 ( .A(n9), .B(n28), .C(n29), .Y(DQ0_7_) );
  AOI22X1 U59 ( .A0(n30), .A1(n31), .B0(n5), .B1(n32), .Y(n29) );
  INVX1 U60 ( .A(n35), .Y(n5) );
  OAI21XL U61 ( .A0(n33), .A1(n8), .B0(n34), .Y(n32) );
  MXI2X1 U62 ( .A(n61), .B(n62), .S0(DQ0_8_), .Y(n13) );
  NAND2X1 U63 ( .A(DQ0_8_), .B(n63), .Y(n14) );
  MX4X1 U64 ( .A(n20), .B(n52), .C(n19), .D(n18), .S0(DQ0_8_), .S1(n4), .Y(n21) );
  NOR2BX1 U65 ( .AN(N63), .B(n43), .Y(DQ0_3_) );
  NAND2BX1 U66 ( .AN(DQ[7]), .B(n44), .Y(DQ0_9_) );
  NAND2BX1 U67 ( .AN(DQ[3]), .B(n36), .Y(n27) );
  INVX1 U68 ( .A(n28), .Y(n10) );
  AOI21X1 U69 ( .A0(n34), .A1(n41), .B0(n42), .Y(n37) );
  INVX1 U70 ( .A(n33), .Y(n7) );
  NOR2BX1 U71 ( .AN(N64), .B(n43), .Y(DQ0_4_) );
  OR2X2 U72 ( .A(N65), .B(n43), .Y(DQ0_5_) );
  MXI2XL U73 ( .A(DQ[3]), .B(DQ[4]), .S0(DQ0_6_), .Y(n25) );
  MXI2XL U74 ( .A(DQ[5]), .B(DQ[6]), .S0(DQ0_6_), .Y(n48) );
  NAND2BX1 U75 ( .AN(DQ[5]), .B(n30), .Y(n31) );
  MXI2XL U76 ( .A(DQ[1]), .B(DQ[2]), .S0(DQ0_6_), .Y(n24) );
  MXI2XL U77 ( .A(DQ[2]), .B(DQ[3]), .S0(DQ0_6_), .Y(n16) );
  NOR2XL U78 ( .A(DQ[2]), .B(n27), .Y(n39) );
endmodule


module DELAY_020_11_11_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n8, n9, n10, n3, n4, n5, n6, n7, n11, n12;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n8) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n12) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay0[6]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n8), .Q(delay2[10]) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay1[5]), .QN(n11) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n11), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n8), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n8), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[0]) );
  SDFFSHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n8), .Q(delay0[5]) );
endmodule


module XORA_11 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_11_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_11_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_11_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_11_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_11 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65, N74,
         N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109, N110,
         N111, N112, N113, N114, N148, N149, N150, N151, N152, N153, N154,
         N155, N156, N165, N166, N167, N168, N169, N170, N171, N181, N205,
         N206, N207, N208, N209, N210, N211, N212, N213, N214, N215, N216,
         N217, N218, N219, N220, N222, n61, n62, n63, n64, n65, n66, n67, n68,
         n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82,
         n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96,
         n97, n98, n99, n100, n101, N98, N97, N96, N95, N94, N93, N92, N91,
         N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201, N200,
         N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189,
         N139, N138, N137, N136, N135, N134, N133, sub_75_carry_2_,
         sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_, sub_75_carry_6_,
         sub_94_carry_2_, sub_94_carry_3_, sub_94_carry_4_, sub_94_carry_5_,
         sub_94_carry_6_, sub_94_carry_7_, n1, n2, n3, n4, n5, n6, n7, n8, n9,
         BNP_15_, BNP_14_, BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_,
         BNP_7_, BNP_6_, BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N148 = BN[8];
  assign N139 = BN[15];
  assign N138 = BN[14];
  assign N137 = BN[13];
  assign N136 = BN[12];
  assign N135 = BN[11];
  assign N134 = BN[10];
  assign N133 = BN[9];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N133), .B(N134), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N133), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N133), .B(N134), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N133), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n81) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n82) );
  NAND2XL U9 ( .A(n78), .B(n79), .Y(N222) );
  NAND4X1 U10 ( .A(n81), .B(n82), .C(n83), .D(n84), .Y(n80) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n84) );
  INVX1 U12 ( .A(n61), .Y(n40) );
  INVX1 U13 ( .A(n69), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n86) );
  INVX1 U16 ( .A(n78), .Y(n26) );
  INVX1 U17 ( .A(n99), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n86), .Y(n99) );
  INVX1 U19 ( .A(n98), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n86), .Y(n98) );
  INVX1 U21 ( .A(n97), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n86), .Y(n97) );
  INVX1 U23 ( .A(n96), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n86), .Y(n96) );
  INVX1 U25 ( .A(n95), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n86), .Y(n95) );
  INVX1 U27 ( .A(n100), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n86), .Y(n100) );
  INVX1 U29 ( .A(n87), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n86), .Y(n87) );
  INVX1 U31 ( .A(n85), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n86), .Y(n85) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n61) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n69) );
  NAND2X1 U35 ( .A(n80), .B(n79), .Y(n78) );
  INVX1 U36 ( .A(n94), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n86), .Y(n94) );
  INVX1 U38 ( .A(n93), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n86), .Y(n93) );
  INVX1 U40 ( .A(n92), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n86), .Y(n92) );
  INVX1 U42 ( .A(n91), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n86), .Y(n91) );
  INVX1 U44 ( .A(n90), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n86), .Y(n90) );
  INVX1 U46 ( .A(n89), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n86), .Y(n89) );
  INVX1 U48 ( .A(n88), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n86), .Y(n88) );
  INVX1 U50 ( .A(N139), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n80), .Y(n79) );
  INVX1 U52 ( .A(n101), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n86), .Y(n101) );
  INVX1 U54 ( .A(N133), .Y(n6) );
  INVX1 U55 ( .A(N148), .Y(n3) );
  INVX1 U56 ( .A(n68), .Y(n42) );
  AOI22X1 U57 ( .A0(N133), .A1(n2), .B0(N133), .B1(N139), .Y(n68) );
  INVX1 U58 ( .A(N135), .Y(n7) );
  INVX1 U59 ( .A(N134), .Y(n4) );
  INVX1 U60 ( .A(n77), .Y(n43) );
  AOI22X1 U61 ( .A0(N148), .A1(n2), .B0(N148), .B1(N139), .Y(n77) );
  INVX1 U62 ( .A(n67), .Y(n39) );
  AOI22X1 U63 ( .A0(N60), .A1(n2), .B0(N44), .B1(N139), .Y(n67) );
  INVX1 U64 ( .A(n66), .Y(n38) );
  AOI22X1 U65 ( .A0(N61), .A1(n2), .B0(N45), .B1(N139), .Y(n66) );
  INVX1 U66 ( .A(n65), .Y(n37) );
  AOI22X1 U67 ( .A0(N62), .A1(n2), .B0(N46), .B1(N139), .Y(n65) );
  INVX1 U68 ( .A(n64), .Y(n36) );
  AOI22X1 U69 ( .A0(N63), .A1(n2), .B0(N47), .B1(N139), .Y(n64) );
  INVX1 U70 ( .A(n63), .Y(n35) );
  AOI22X1 U71 ( .A0(N64), .A1(n2), .B0(N48), .B1(N139), .Y(n63) );
  INVX1 U72 ( .A(n62), .Y(n34) );
  AOI22X1 U73 ( .A0(N65), .A1(n2), .B0(N49), .B1(N139), .Y(n62) );
  INVX1 U74 ( .A(n76), .Y(n33) );
  AOI22X1 U75 ( .A0(N165), .A1(n2), .B0(N149), .B1(N139), .Y(n76) );
  INVX1 U76 ( .A(n75), .Y(n32) );
  AOI22X1 U77 ( .A0(N166), .A1(n2), .B0(N150), .B1(N139), .Y(n75) );
  INVX1 U78 ( .A(n74), .Y(n31) );
  AOI22X1 U79 ( .A0(N167), .A1(n2), .B0(N151), .B1(N139), .Y(n74) );
  INVX1 U80 ( .A(n73), .Y(n30) );
  AOI22X1 U81 ( .A0(N168), .A1(n2), .B0(N152), .B1(N139), .Y(n73) );
  INVX1 U82 ( .A(n72), .Y(n29) );
  AOI22X1 U83 ( .A0(N169), .A1(n2), .B0(N153), .B1(N139), .Y(n72) );
  INVX1 U84 ( .A(n71), .Y(n28) );
  AOI22X1 U85 ( .A0(N170), .A1(n2), .B0(N154), .B1(N139), .Y(n71) );
  INVX1 U86 ( .A(n70), .Y(n27) );
  AOI22X1 U87 ( .A0(N171), .A1(n2), .B0(N155), .B1(N139), .Y(n70) );
  OAI2BB1X1 U88 ( .A0N(N50), .A1N(N139), .B0(n61), .Y(N74) );
  OAI2BB1X1 U89 ( .A0N(N156), .A1N(N139), .B0(n69), .Y(N181) );
  INVX1 U90 ( .A(N138), .Y(n8) );
  INVX1 U91 ( .A(N137), .Y(n5) );
  INVX1 U92 ( .A(N136), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n83) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n5), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n5), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n7), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n7), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n4), .B(n6), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n5), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n5), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n7), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n7), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n4), .B(n6), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n5), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n5), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n7), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n7), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n4), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n4), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n6), .B(n3), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n5), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n5), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n7), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n7), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n4), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n4), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n6), .B(n3), .Y(N165) );
  UPB_11_DW01_add_5 add_1_root_add_0_root_add_78 ( .A({N139, N138, N137, N136, 
        N135, N134, N133, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, 
        n40, n40, N74, n34, n35, n36, n37, n38, n39, n42}), .CI(1'b0), .SUM({
        N98, N97, N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, 
        N84, N83}) );
  UPB_11_DW01_add_4 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_11_DW01_add_3 add_1_root_add_0_root_add_97 ( .A({N139, N138, N137, N136, 
        N135, N134, N133, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, 
        n41, N181, n27, n28, n29, n30, n31, n32, n33, n43}), .CI(1'b0), .SUM({
        N204, N203, N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, 
        N192, N191, N190, N189}) );
  UPB_11_DW01_add_2 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_11 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U3 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U6 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U7 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_11_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n4) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_11_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_11_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_11 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_11 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_11 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_11_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_10_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n10), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module XORA_10 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_10_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_10_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_10_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_10_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_10 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND2XL U9 ( .A(n101), .B(n100), .Y(N222) );
  NAND4X1 U10 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  INVX1 U12 ( .A(n118), .Y(n40) );
  INVX1 U13 ( .A(n110), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n93) );
  INVX1 U16 ( .A(n101), .Y(n26) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U29 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U31 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U35 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U36 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U38 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U40 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U42 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U44 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U46 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U48 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U50 ( .A(N33), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U52 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U54 ( .A(n111), .Y(n42) );
  AOI22X1 U55 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U56 ( .A(n102), .Y(n43) );
  AOI22X1 U57 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U58 ( .A(N43), .Y(n3) );
  INVX1 U59 ( .A(N148), .Y(n5) );
  INVX1 U60 ( .A(N29), .Y(n4) );
  INVX1 U61 ( .A(N28), .Y(n6) );
  INVX1 U62 ( .A(n113), .Y(n31) );
  AOI22X1 U63 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U64 ( .A(n114), .Y(n30) );
  AOI22X1 U65 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U66 ( .A(n115), .Y(n29) );
  AOI22X1 U67 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U68 ( .A(n116), .Y(n28) );
  AOI22X1 U69 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U70 ( .A(n117), .Y(n27) );
  AOI22X1 U71 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U72 ( .A(n104), .Y(n38) );
  AOI22X1 U73 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U74 ( .A(n105), .Y(n37) );
  AOI22X1 U75 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U76 ( .A(n106), .Y(n36) );
  AOI22X1 U77 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U78 ( .A(n107), .Y(n35) );
  AOI22X1 U79 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U80 ( .A(n108), .Y(n34) );
  AOI22X1 U81 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U82 ( .A(n109), .Y(n33) );
  AOI22X1 U83 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U84 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U85 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U86 ( .A(n112), .Y(n32) );
  AOI22X1 U87 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U88 ( .A(n103), .Y(n39) );
  AOI22X1 U89 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U90 ( .A(N32), .Y(n8) );
  INVX1 U91 ( .A(N31), .Y(n7) );
  INVX1 U92 ( .A(N30), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_10_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_10_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_10_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_10_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_10 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U3 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U6 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U7 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_10_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_10_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_10_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_10 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_10 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_10 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_10_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_9_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[0]) );
endmodule


module XORA_9 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_9_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_9_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_9_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_9_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_9 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND2XL U9 ( .A(n101), .B(n100), .Y(N222) );
  NAND4X1 U10 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  INVX1 U12 ( .A(n118), .Y(n40) );
  INVX1 U13 ( .A(n110), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n93) );
  INVX1 U16 ( .A(n101), .Y(n26) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U29 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U31 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U35 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U36 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U38 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U40 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U42 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U44 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U46 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U48 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U50 ( .A(N33), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U52 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U54 ( .A(N43), .Y(n3) );
  INVX1 U55 ( .A(N148), .Y(n5) );
  INVX1 U56 ( .A(n111), .Y(n42) );
  AOI22X1 U57 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U58 ( .A(N29), .Y(n4) );
  INVX1 U59 ( .A(N28), .Y(n6) );
  INVX1 U60 ( .A(n102), .Y(n43) );
  AOI22X1 U61 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U62 ( .A(n112), .Y(n32) );
  AOI22X1 U63 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U64 ( .A(n113), .Y(n31) );
  AOI22X1 U65 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U66 ( .A(n114), .Y(n30) );
  AOI22X1 U67 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U68 ( .A(n115), .Y(n29) );
  AOI22X1 U69 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U70 ( .A(n116), .Y(n28) );
  AOI22X1 U71 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U72 ( .A(n117), .Y(n27) );
  AOI22X1 U73 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U74 ( .A(n103), .Y(n39) );
  AOI22X1 U75 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U76 ( .A(n104), .Y(n38) );
  AOI22X1 U77 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U78 ( .A(n105), .Y(n37) );
  AOI22X1 U79 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U80 ( .A(n106), .Y(n36) );
  AOI22X1 U81 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U82 ( .A(n107), .Y(n35) );
  AOI22X1 U83 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U84 ( .A(n108), .Y(n34) );
  AOI22X1 U85 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U86 ( .A(n109), .Y(n33) );
  AOI22X1 U87 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U88 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U89 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U90 ( .A(N32), .Y(n8) );
  INVX1 U91 ( .A(N31), .Y(n7) );
  INVX1 U92 ( .A(N30), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_9_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_9_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_9_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_9_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_9 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U3 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U6 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U7 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_9_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si2, test_si1, test_so1, test_se
 );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so1;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;
  assign test_so1 = delay1[14];

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si1), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(test_si2), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_9_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si2, 
        test_si1, test_so2, test_so1, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so2,
         test_so1;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so2 = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_9_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si1), .test_se(test_se) );
  XORA_9 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_9 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_9 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_9_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si2(
        test_si2), .test_si1(DQN1[10]), .test_so1(test_so1), .test_se(test_se)
         );
endmodule


module DELAY_020_11_8_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module XORA_8 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_8_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_8_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_8_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_8_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_8 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND2XL U9 ( .A(n101), .B(n100), .Y(N222) );
  NAND4X1 U10 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  INVX1 U12 ( .A(n118), .Y(n40) );
  INVX1 U13 ( .A(n110), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n93) );
  INVX1 U16 ( .A(n101), .Y(n26) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U29 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U31 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U35 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U36 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U38 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U40 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U42 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U44 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U46 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U48 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U50 ( .A(N33), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U52 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U54 ( .A(n111), .Y(n42) );
  AOI22X1 U55 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U56 ( .A(n102), .Y(n43) );
  AOI22X1 U57 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U58 ( .A(N43), .Y(n3) );
  INVX1 U59 ( .A(N148), .Y(n5) );
  INVX1 U60 ( .A(N29), .Y(n4) );
  INVX1 U61 ( .A(N28), .Y(n6) );
  INVX1 U62 ( .A(n113), .Y(n31) );
  AOI22X1 U63 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U64 ( .A(n114), .Y(n30) );
  AOI22X1 U65 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U66 ( .A(n115), .Y(n29) );
  AOI22X1 U67 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U68 ( .A(n116), .Y(n28) );
  AOI22X1 U69 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U70 ( .A(n117), .Y(n27) );
  AOI22X1 U71 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U72 ( .A(n104), .Y(n38) );
  AOI22X1 U73 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U74 ( .A(n105), .Y(n37) );
  AOI22X1 U75 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U76 ( .A(n106), .Y(n36) );
  AOI22X1 U77 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U78 ( .A(n107), .Y(n35) );
  AOI22X1 U79 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U80 ( .A(n108), .Y(n34) );
  AOI22X1 U81 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U82 ( .A(n109), .Y(n33) );
  AOI22X1 U83 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U84 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U85 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U86 ( .A(n112), .Y(n32) );
  AOI22X1 U87 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U88 ( .A(n103), .Y(n39) );
  AOI22X1 U89 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U90 ( .A(N32), .Y(n8) );
  INVX1 U91 ( .A(N31), .Y(n7) );
  INVX1 U92 ( .A(N30), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_8_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_8_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_8_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_8_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_8 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U3 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U6 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U7 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_8_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_8_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_8_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_8 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_8 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_8 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_8_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_7_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[0]) );
endmodule


module XORA_7 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_7_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_7_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_7_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_7_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_7 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND2XL U9 ( .A(n101), .B(n100), .Y(N222) );
  NAND4X1 U10 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  INVX1 U12 ( .A(n118), .Y(n40) );
  INVX1 U13 ( .A(n110), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n93) );
  INVX1 U16 ( .A(n101), .Y(n26) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U29 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U31 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U35 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U36 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U38 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U40 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U42 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U44 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U46 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U48 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U50 ( .A(N33), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U52 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U54 ( .A(N43), .Y(n3) );
  INVX1 U55 ( .A(N148), .Y(n5) );
  INVX1 U56 ( .A(n111), .Y(n42) );
  AOI22X1 U57 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U58 ( .A(N29), .Y(n4) );
  INVX1 U59 ( .A(N28), .Y(n6) );
  INVX1 U60 ( .A(n102), .Y(n43) );
  AOI22X1 U61 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U62 ( .A(n112), .Y(n32) );
  AOI22X1 U63 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U64 ( .A(n113), .Y(n31) );
  AOI22X1 U65 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U66 ( .A(n114), .Y(n30) );
  AOI22X1 U67 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U68 ( .A(n115), .Y(n29) );
  AOI22X1 U69 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U70 ( .A(n116), .Y(n28) );
  AOI22X1 U71 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U72 ( .A(n117), .Y(n27) );
  AOI22X1 U73 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U74 ( .A(n103), .Y(n39) );
  AOI22X1 U75 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U76 ( .A(n104), .Y(n38) );
  AOI22X1 U77 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U78 ( .A(n105), .Y(n37) );
  AOI22X1 U79 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U80 ( .A(n106), .Y(n36) );
  AOI22X1 U81 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U82 ( .A(n107), .Y(n35) );
  AOI22X1 U83 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U84 ( .A(n108), .Y(n34) );
  AOI22X1 U85 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U86 ( .A(n109), .Y(n33) );
  AOI22X1 U87 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U88 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U89 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U90 ( .A(N32), .Y(n8) );
  INVX1 U91 ( .A(N31), .Y(n7) );
  INVX1 U92 ( .A(N30), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_7_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_7_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_7_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_7_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_7 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U3 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U6 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U7 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_7_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_7_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_7_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_7 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_7 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_7 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_7_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_6_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[0]) );
endmodule


module XORA_6 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_6_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_6_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_6_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_6_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_6 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR3XL U7 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND2XL U9 ( .A(n101), .B(n100), .Y(N222) );
  NAND4X1 U10 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  NOR4XL U11 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  INVX1 U12 ( .A(n118), .Y(n40) );
  INVX1 U13 ( .A(n110), .Y(n41) );
  OR2X2 U14 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U15 ( .A(n1), .Y(n93) );
  INVX1 U16 ( .A(n101), .Y(n26) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U28 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U29 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U30 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U31 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U32 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U33 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U34 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U35 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U36 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U37 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U38 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U39 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U40 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U41 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U42 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U43 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U44 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U45 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U46 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U47 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U48 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U49 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U50 ( .A(N33), .Y(n2) );
  NAND2BX1 U51 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U52 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U53 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U54 ( .A(n111), .Y(n42) );
  AOI22X1 U55 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U56 ( .A(n102), .Y(n43) );
  AOI22X1 U57 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U58 ( .A(N43), .Y(n3) );
  INVX1 U59 ( .A(N148), .Y(n5) );
  INVX1 U60 ( .A(N29), .Y(n4) );
  INVX1 U61 ( .A(N28), .Y(n6) );
  INVX1 U62 ( .A(n113), .Y(n31) );
  AOI22X1 U63 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U64 ( .A(n114), .Y(n30) );
  AOI22X1 U65 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U66 ( .A(n115), .Y(n29) );
  AOI22X1 U67 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U68 ( .A(n116), .Y(n28) );
  AOI22X1 U69 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U70 ( .A(n117), .Y(n27) );
  AOI22X1 U71 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U72 ( .A(n104), .Y(n38) );
  AOI22X1 U73 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U74 ( .A(n105), .Y(n37) );
  AOI22X1 U75 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U76 ( .A(n106), .Y(n36) );
  AOI22X1 U77 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U78 ( .A(n107), .Y(n35) );
  AOI22X1 U79 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U80 ( .A(n108), .Y(n34) );
  AOI22X1 U81 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U82 ( .A(n109), .Y(n33) );
  AOI22X1 U83 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U84 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U85 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U86 ( .A(n112), .Y(n32) );
  AOI22X1 U87 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U88 ( .A(n103), .Y(n39) );
  AOI22X1 U89 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U90 ( .A(N32), .Y(n8) );
  INVX1 U91 ( .A(N31), .Y(n7) );
  INVX1 U92 ( .A(N30), .Y(n9) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_6_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_6_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_6_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_6_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_6 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1, n2, n3;

  BUFX3 U2 ( .A(n1), .Y(n2) );
  BUFX3 U3 ( .A(n1), .Y(n3) );
  BUFX3 U4 ( .A(TR), .Y(n1) );
  NOR2BX1 U5 ( .AN(nP[11]), .B(n2), .Y(nR[11]) );
  NOR2BX1 U6 ( .AN(nP[12]), .B(n2), .Y(nR[12]) );
  NOR2BX1 U7 ( .AN(nP[13]), .B(n2), .Y(nR[13]) );
  NOR2BX1 U8 ( .AN(nP[14]), .B(n2), .Y(nR[14]) );
  NOR2BX1 U9 ( .AN(nP[15]), .B(n2), .Y(nR[15]) );
  NOR2BX1 U10 ( .AN(nP[10]), .B(n2), .Y(nR[10]) );
  NOR2BX1 U11 ( .AN(nP[8]), .B(n3), .Y(nR[8]) );
  NOR2BX1 U12 ( .AN(nP[9]), .B(n3), .Y(nR[9]) );
  NOR2BX1 U13 ( .AN(nP[1]), .B(n2), .Y(nR[1]) );
  NOR2BX1 U14 ( .AN(nP[2]), .B(n2), .Y(nR[2]) );
  NOR2BX1 U15 ( .AN(nP[3]), .B(n2), .Y(nR[3]) );
  NOR2BX1 U16 ( .AN(nP[4]), .B(n2), .Y(nR[4]) );
  NOR2BX1 U17 ( .AN(nP[5]), .B(n3), .Y(nR[5]) );
  NOR2BX1 U18 ( .AN(nP[6]), .B(n3), .Y(nR[6]) );
  NOR2BX1 U19 ( .AN(nP[7]), .B(n3), .Y(nR[7]) );
  NOR2BX1 U20 ( .AN(nP[0]), .B(n2), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_6_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
endmodule


module DELAYPREDIC_6_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_6_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_6 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_6 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_6 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_6_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_14_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n2, n3, n4, n5, n6, n7, n8, n12;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(y[5]), .QN(n12) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(y[0]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n8), .SE(test_se), .CK(clk), .RN(n10), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(x[10]), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n8) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay1[5]), .QN(n7) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n6) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n5) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay4[5]), .QN(n4) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n3) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n2) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n2), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module UPA2_1_DW01_add_11 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n4, n5, n6, n7, n8, n10, n11, n12, n14, n19, n20, n22, n24,
         n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38,
         n39, n40, n41, n43, n45, n46, n47, n48, n49, n51, n53, n54, n55, n56,
         n57, n59, n61, n62, n63, n64, n65, n67, n69, n70, n71, n72, n73, n74,
         n75, n76, n78, SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_,
         SUM_8_, SUM_9_, SUM_10_, SUM_11_, SUM_12_, SUM_13_, SUM_14_, n162,
         B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_,
         B_11_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_,
         A_10_, A_11_, A_12_, A_13_, A_14_, A_15_, n146, SUM_15_, SUM_0_, n149,
         n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160,
         n161;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];
  assign SUM[15] = SUM_15_;
  assign SUM[0] = SUM_0_;

  NOR2X4 U28 ( .A(n161), .B(A_12_), .Y(n32) );
  OAI21X4 U38 ( .A0(n41), .A1(n39), .B0(n40), .Y(n38) );
  NAND2X1 U114 ( .A(n161), .B(A_13_), .Y(n29) );
  BUFX20 U115 ( .A(B_11_), .Y(n161) );
  NAND2X2 U116 ( .A(B_10_), .B(A_10_), .Y(n40) );
  NOR2X2 U117 ( .A(B_10_), .B(A_10_), .Y(n39) );
  OAI2BB1X1 U118 ( .A0N(n38), .A1N(n146), .B0(n36), .Y(n34) );
  INVX1 U119 ( .A(n35), .Y(n146) );
  NAND2BX1 U120 ( .AN(n32), .B(n33), .Y(n5) );
  NAND2BXL U121 ( .AN(n28), .B(n29), .Y(n4) );
  NOR2BX1 U122 ( .AN(n26), .B(n25), .Y(n149) );
  NOR2BX1 U123 ( .AN(n76), .B(n75), .Y(n150) );
  OAI21X2 U124 ( .A0(n55), .A1(n57), .B0(n56), .Y(n54) );
  NOR2BX1 U125 ( .AN(n72), .B(n71), .Y(n151) );
  XNOR2X1 U126 ( .A(n10), .B(n54), .Y(SUM_7_) );
  NOR2BX1 U127 ( .AN(n64), .B(n63), .Y(n153) );
  NOR2BXL U128 ( .AN(n48), .B(n47), .Y(n152) );
  XNOR2XL U129 ( .A(n8), .B(n46), .Y(SUM_9_) );
  OAI21X1 U130 ( .A0(n73), .A1(n71), .B0(n72), .Y(n70) );
  INVX1 U131 ( .A(n74), .Y(n73) );
  NAND2BX1 U132 ( .AN(n55), .B(n56), .Y(n11) );
  NAND2BXL U133 ( .AN(n35), .B(n36), .Y(n6) );
  NAND2BX1 U134 ( .AN(n39), .B(n40), .Y(n7) );
  XOR2X2 U135 ( .A(n1), .B(n4), .Y(SUM_13_) );
  AOI21X2 U136 ( .A0(n157), .A1(n54), .B0(n51), .Y(n49) );
  NOR2X1 U137 ( .A(B_1_), .B(A_1_), .Y(n75) );
  NOR2X1 U138 ( .A(B_8_), .B(A_8_), .Y(n47) );
  NAND2X1 U139 ( .A(B_9_), .B(A_9_), .Y(n45) );
  XNOR2X2 U140 ( .A(n34), .B(n5), .Y(SUM_12_) );
  NAND2X1 U141 ( .A(B_0_), .B(A_0_), .Y(n78) );
  AOI21X1 U142 ( .A0(n159), .A1(n70), .B0(n67), .Y(n65) );
  NAND2X1 U143 ( .A(B_5_), .B(A_5_), .Y(n61) );
  NAND2XL U144 ( .A(B_4_), .B(A_4_), .Y(n64) );
  OAI21XL U145 ( .A0(n63), .A1(n65), .B0(n64), .Y(n62) );
  OAI21X2 U146 ( .A0(n32), .A1(n36), .B0(n33), .Y(n31) );
  NOR2X1 U147 ( .A(B_2_), .B(A_2_), .Y(n71) );
  NOR2X1 U148 ( .A(B_6_), .B(A_6_), .Y(n55) );
  NAND2X1 U149 ( .A(B_7_), .B(A_7_), .Y(n53) );
  NAND2X1 U150 ( .A(n161), .B(A_12_), .Y(n33) );
  OAI21XL U151 ( .A0(n75), .A1(n78), .B0(n76), .Y(n74) );
  NAND2X1 U152 ( .A(B_6_), .B(A_6_), .Y(n56) );
  AOI21X1 U153 ( .A0(n158), .A1(n62), .B0(n59), .Y(n57) );
  INVX1 U154 ( .A(n38), .Y(n37) );
  XNOR2X2 U155 ( .A(n20), .B(n2), .Y(n162) );
  NAND2X1 U156 ( .A(n154), .B(n19), .Y(n2) );
  NOR2X1 U157 ( .A(n161), .B(A_13_), .Y(n28) );
  NOR2X1 U158 ( .A(n161), .B(A_14_), .Y(n25) );
  BUFX8 U159 ( .A(n162), .Y(SUM_15_) );
  OAI21X1 U160 ( .A0(n25), .A1(n29), .B0(n26), .Y(n24) );
  OAI21X2 U161 ( .A0(n1), .A1(n155), .B0(n22), .Y(n20) );
  NOR2X1 U162 ( .A(B_4_), .B(A_4_), .Y(n63) );
  AOI21X2 U163 ( .A0(n30), .A1(n38), .B0(n31), .Y(n1) );
  OAI21X2 U164 ( .A0(n49), .A1(n47), .B0(n48), .Y(n46) );
  NAND2XL U165 ( .A(n157), .B(n53), .Y(n10) );
  XOR2XL U166 ( .A(n11), .B(n57), .Y(SUM_6_) );
  AND2X1 U167 ( .A(n160), .B(n78), .Y(SUM_0_) );
  XOR2X2 U168 ( .A(n27), .B(n149), .Y(SUM_14_) );
  XNOR2XL U169 ( .A(n150), .B(n78), .Y(SUM_1_) );
  XNOR2XL U170 ( .A(n151), .B(n73), .Y(SUM_2_) );
  NAND2XL U171 ( .A(n158), .B(n61), .Y(n12) );
  XNOR2XL U172 ( .A(n12), .B(n62), .Y(SUM_5_) );
  XNOR2XL U173 ( .A(n152), .B(n49), .Y(SUM_8_) );
  XNOR2XL U174 ( .A(n153), .B(n65), .Y(SUM_4_) );
  NAND2XL U175 ( .A(B_1_), .B(A_1_), .Y(n76) );
  NAND2XL U176 ( .A(B_2_), .B(A_2_), .Y(n72) );
  NAND2X1 U177 ( .A(B_3_), .B(A_3_), .Y(n69) );
  OR2X2 U178 ( .A(B_9_), .B(A_9_), .Y(n156) );
  NAND2XL U179 ( .A(n161), .B(A_15_), .Y(n19) );
  NAND2X1 U180 ( .A(n156), .B(n45), .Y(n8) );
  XOR2XL U181 ( .A(n6), .B(n37), .Y(SUM_11_) );
  XNOR2X1 U182 ( .A(n14), .B(n70), .Y(SUM_3_) );
  NAND2X1 U183 ( .A(n159), .B(n69), .Y(n14) );
  XOR2X1 U184 ( .A(n41), .B(n7), .Y(SUM_10_) );
  INVX1 U185 ( .A(n53), .Y(n51) );
  INVX1 U186 ( .A(n61), .Y(n59) );
  INVX1 U187 ( .A(n69), .Y(n67) );
  AOI21X2 U188 ( .A0(n156), .A1(n46), .B0(n43), .Y(n41) );
  INVX1 U189 ( .A(n45), .Y(n43) );
  NOR2X2 U190 ( .A(n35), .B(n32), .Y(n30) );
  OR2XL U191 ( .A(n161), .B(A_15_), .Y(n154) );
  OR2X2 U192 ( .A(n28), .B(n25), .Y(n155) );
  INVX1 U193 ( .A(n24), .Y(n22) );
  NOR2X2 U194 ( .A(n161), .B(A_11_), .Y(n35) );
  NAND2X2 U195 ( .A(n161), .B(A_11_), .Y(n36) );
  NAND2XL U196 ( .A(n161), .B(A_14_), .Y(n26) );
  NAND2X1 U197 ( .A(B_8_), .B(A_8_), .Y(n48) );
  OR2X2 U198 ( .A(B_7_), .B(A_7_), .Y(n157) );
  OR2X2 U199 ( .A(B_5_), .B(A_5_), .Y(n158) );
  OR2X2 U200 ( .A(B_3_), .B(A_3_), .Y(n159) );
  OR2XL U201 ( .A(B_0_), .B(A_0_), .Y(n160) );
  OAI21XL U202 ( .A0(n1), .A1(n28), .B0(n29), .Y(n27) );
endmodule


module UPA2_1 ( PK0, PK1, PK2, A1, A2, SIGPK, A2T );
  input [15:0] A1;
  input [15:0] A2;
  output [15:0] A2T;
  input PK0, PK1, PK2, SIGPK;
  wire   N31, N92, UA2_9_, UA2_8_, UA2_7_, UA2_6_, UA2_5_, UA2_4_, UA2_3_,
         UA2_2_, UA2_1_, UA2_10_, UA2_0_, N84, N83, N82, N81, N80, N79, N78,
         N77, sub_112_2_carry_2_, sub_112_2_carry_3_, sub_112_2_carry_4_,
         sub_112_2_carry_5_, sub_112_2_carry_6_, sub_112_2_carry_7_, n1, n2,
         n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73,
         n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87,
         n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n105, n106, n107, n108, n109, n110, n111, n112,
         n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123,
         n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134,
         n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145,
         n146, sub_90_carry_6_, n104;
  wire   [5:3] FA1;
  wire   [7:2] sub_112_carry;
  assign N92 = A2[7];
  assign N84 = A2[15];
  assign N83 = A2[14];
  assign N82 = A2[13];
  assign N81 = A2[12];
  assign N80 = A2[11];
  assign N79 = A2[10];
  assign N78 = A2[9];
  assign N77 = A2[8];

  CLKINVX3 U3 ( .A(SIGPK), .Y(n1) );
  INVX8 U4 ( .A(n1), .Y(n2) );
  OAI2BB1X2 U5 ( .A0N(n120), .A1N(n121), .B0(n99), .Y(n116) );
  CLKBUFX8 U6 ( .A(n88), .Y(n11) );
  OAI2BB1X2 U7 ( .A0N(n123), .A1N(n124), .B0(n98), .Y(n119) );
  INVX2 U8 ( .A(SIGPK), .Y(n81) );
  OAI2BB1X2 U9 ( .A0N(n112), .A1N(n110), .B0(n102), .Y(n107) );
  OAI2BB1X1 U10 ( .A0N(n50), .A1N(n3), .B0(n119), .Y(n99) );
  INVX1 U11 ( .A(n121), .Y(n3) );
  OR2X2 U12 ( .A(n91), .B(n92), .Y(n93) );
  NOR2X1 U13 ( .A(N92), .B(N77), .Y(sub_112_2_carry_2_) );
  OAI2BB1X2 U14 ( .A0N(n42), .A1N(n4), .B0(n116), .Y(n100) );
  INVX1 U15 ( .A(n118), .Y(n4) );
  AOI2BB1X1 U16 ( .A0N(n31), .A1N(n24), .B0(n25), .Y(n26) );
  AOI21X1 U17 ( .A0(sub_112_carry[7]), .A1(n134), .B0(n12), .Y(n5) );
  INVX1 U18 ( .A(n5), .Y(n108) );
  NOR4X1 U19 ( .A(FA1[3]), .B(N31), .C(FA1[5]), .D(FA1[4]), .Y(sub_90_carry_6_) );
  OAI2BB1X1 U20 ( .A0N(n58), .A1N(n6), .B0(n122), .Y(n98) );
  INVX1 U21 ( .A(n124), .Y(n6) );
  NAND2X1 U22 ( .A(A1[15]), .B(n16), .Y(n142) );
  OAI2BB1X2 U23 ( .A0N(n105), .A1N(n108), .B0(n107), .Y(n103) );
  XNOR3X2 U24 ( .A(n92), .B(n91), .C(n131), .Y(UA2_1_) );
  XNOR3X2 U25 ( .A(n124), .B(n58), .C(n122), .Y(UA2_4_) );
  OR4X2 U26 ( .A(A1[4]), .B(A1[5]), .C(A1[6]), .D(A1[7]), .Y(n146) );
  NOR2X1 U27 ( .A(n23), .B(n41), .Y(n17) );
  NOR2X1 U28 ( .A(N92), .B(N77), .Y(sub_112_carry[2]) );
  OAI2BB1X1 U29 ( .A0N(n34), .A1N(n7), .B0(n113), .Y(n101) );
  INVX1 U30 ( .A(n115), .Y(n7) );
  OAI21X2 U31 ( .A0(n126), .A1(n127), .B0(n125), .Y(n97) );
  NAND3BX4 U32 ( .AN(n2), .B(n90), .C(n89), .Y(n91) );
  INVX1 U33 ( .A(n29), .Y(n33) );
  OAI2BB1X1 U34 ( .A0N(n17), .A1N(n20), .B0(n19), .Y(n30) );
  INVX1 U35 ( .A(n105), .Y(n109) );
  INVX1 U36 ( .A(n66), .Y(n126) );
  OAI2BB1X4 U37 ( .A0N(n126), .A1N(n127), .B0(n97), .Y(n122) );
  XOR2X1 U38 ( .A(n27), .B(n26), .Y(n28) );
  XNOR2X1 U39 ( .A(PK1), .B(PK0), .Y(n79) );
  NOR2X1 U40 ( .A(n69), .B(n11), .Y(n71) );
  NOR2X1 U41 ( .A(n32), .B(n2), .Y(n112) );
  AND3X2 U42 ( .A(A1[14]), .B(A1[13]), .C(A1[15]), .Y(n8) );
  NOR2X4 U43 ( .A(n85), .B(n11), .Y(n87) );
  MXI2X4 U44 ( .A(n11), .B(n87), .S0(n86), .Y(n90) );
  MXI2X1 U45 ( .A(n11), .B(n71), .S0(n70), .Y(n72) );
  OAI21X1 U46 ( .A0(n129), .A1(n130), .B0(n128), .Y(n96) );
  NAND2XL U47 ( .A(n77), .B(n79), .Y(n80) );
  OAI2BB1X2 U48 ( .A0N(n129), .A1N(n130), .B0(n96), .Y(n125) );
  NOR2XL U49 ( .A(n61), .B(n11), .Y(n63) );
  MXI2XL U50 ( .A(n18), .B(n20), .S0(n11), .Y(n19) );
  NOR2XL U51 ( .A(n37), .B(n11), .Y(n39) );
  NOR2XL U52 ( .A(n45), .B(n11), .Y(n47) );
  NOR2XL U53 ( .A(n53), .B(n11), .Y(n55) );
  XOR2XL U54 ( .A(n140), .B(n132), .Y(UA2_0_) );
  MXI2XL U55 ( .A(n11), .B(n63), .S0(n62), .Y(n64) );
  MXI2XL U56 ( .A(n11), .B(n39), .S0(n38), .Y(n40) );
  MXI2XL U57 ( .A(n11), .B(n47), .S0(n46), .Y(n48) );
  MXI2XL U58 ( .A(n11), .B(n55), .S0(n54), .Y(n56) );
  NOR2XL U59 ( .A(n21), .B(n11), .Y(n22) );
  INVX1 U60 ( .A(n34), .Y(n114) );
  NAND2BX1 U61 ( .AN(n2), .B(n33), .Y(n34) );
  INVX1 U62 ( .A(n30), .Y(n24) );
  XOR2X1 U63 ( .A(n106), .B(n9), .Y(UA2_10_) );
  NOR2X1 U64 ( .A(n17), .B(n20), .Y(n18) );
  XNOR2X1 U65 ( .A(n105), .B(n5), .Y(n9) );
  XOR3X2 U66 ( .A(n110), .B(n112), .C(n111), .Y(UA2_8_) );
  XNOR3X2 U67 ( .A(n109), .B(n108), .C(n107), .Y(UA2_9_) );
  INVX1 U68 ( .A(n89), .Y(n69) );
  INVX1 U69 ( .A(n73), .Y(n61) );
  INVX1 U70 ( .A(n65), .Y(n53) );
  INVX1 U71 ( .A(n57), .Y(n45) );
  INVX1 U72 ( .A(n49), .Y(n37) );
  INVX1 U73 ( .A(n41), .Y(n21) );
  INVX1 U74 ( .A(n82), .Y(n85) );
  XNOR2X1 U76 ( .A(n10), .B(n31), .Y(n32) );
  XNOR2X1 U77 ( .A(n30), .B(n29), .Y(n10) );
  INVX1 U78 ( .A(n42), .Y(n117) );
  NAND3BX1 U79 ( .AN(n2), .B(n41), .C(n40), .Y(n42) );
  INVX1 U80 ( .A(n50), .Y(n120) );
  NAND3BX1 U81 ( .AN(n2), .B(n49), .C(n48), .Y(n50) );
  INVX1 U82 ( .A(n74), .Y(n129) );
  NAND3BX1 U83 ( .AN(n2), .B(n73), .C(n72), .Y(n74) );
  NAND3BX1 U84 ( .AN(n2), .B(n65), .C(n64), .Y(n66) );
  INVX1 U85 ( .A(n58), .Y(n123) );
  NAND3BX1 U86 ( .AN(n2), .B(n57), .C(n56), .Y(n58) );
  NAND3BX1 U87 ( .AN(n83), .B(n82), .C(n81), .Y(n132) );
  AOI21X1 U88 ( .A0(n24), .A1(n31), .B0(n33), .Y(n25) );
  XOR3X2 U89 ( .A(n121), .B(n120), .C(n119), .Y(UA2_5_) );
  XOR3X2 U90 ( .A(n127), .B(n126), .C(n125), .Y(UA2_3_) );
  XOR3X2 U91 ( .A(n130), .B(n129), .C(n128), .Y(UA2_2_) );
  XOR3X2 U92 ( .A(n118), .B(n117), .C(n116), .Y(UA2_6_) );
  NAND2XL U93 ( .A(n92), .B(n91), .Y(n94) );
  INVX1 U94 ( .A(n131), .Y(n95) );
  XOR2X1 U95 ( .A(n23), .B(n22), .Y(n29) );
  NAND2BX1 U96 ( .AN(n2), .B(n28), .Y(n105) );
  XNOR2X1 U97 ( .A(n19), .B(n31), .Y(n27) );
  INVX1 U98 ( .A(n79), .Y(n88) );
  NAND3X1 U99 ( .A(sub_90_carry_6_), .B(n141), .C(n14), .Y(n77) );
  NAND2X1 U100 ( .A(n142), .B(A1[4]), .Y(n14) );
  NAND2BX1 U101 ( .AN(n86), .B(n85), .Y(n89) );
  NAND2BX1 U102 ( .AN(n70), .B(n69), .Y(n73) );
  NAND2BX1 U103 ( .AN(n62), .B(n61), .Y(n65) );
  NAND2BX1 U104 ( .AN(n54), .B(n53), .Y(n57) );
  NAND2BX1 U105 ( .AN(n46), .B(n45), .Y(n49) );
  NAND2BX1 U106 ( .AN(n38), .B(n37), .Y(n41) );
  NAND2BX1 U107 ( .AN(n77), .B(n78), .Y(n82) );
  NAND2X1 U109 ( .A(n16), .B(n142), .Y(n20) );
  XNOR2XL U110 ( .A(PK2), .B(PK0), .Y(n31) );
  NAND2X2 U111 ( .A(n84), .B(N92), .Y(n131) );
  CLKINVX3 U112 ( .A(n132), .Y(n84) );
  INVX1 U113 ( .A(A1[15]), .Y(n13) );
  OAI2BB1X1 U114 ( .A0N(n144), .A1N(n143), .B0(n8), .Y(n16) );
  OR3XL U115 ( .A(A1[8]), .B(A1[9]), .C(A1[12]), .Y(n145) );
  OAI2BB1X1 U116 ( .A0N(n142), .A1N(A1[6]), .B0(n141), .Y(n86) );
  INVX1 U117 ( .A(n15), .Y(n78) );
  OAI2BB1X1 U118 ( .A0N(n142), .A1N(A1[5]), .B0(n141), .Y(n15) );
  OAI21XL U119 ( .A0(A1[14]), .A1(A1[13]), .B0(n13), .Y(n141) );
  MXI2X1 U120 ( .A(n52), .B(n51), .S0(n12), .Y(n121) );
  XOR2X1 U121 ( .A(sub_112_carry[5]), .B(N81), .Y(n52) );
  XOR2X1 U122 ( .A(sub_112_2_carry_5_), .B(N81), .Y(n51) );
  MXI2X1 U123 ( .A(n44), .B(n43), .S0(n12), .Y(n118) );
  XOR2X1 U124 ( .A(sub_112_carry[6]), .B(N82), .Y(n44) );
  XOR2X1 U125 ( .A(sub_112_2_carry_6_), .B(N82), .Y(n43) );
  MXI2X1 U126 ( .A(n36), .B(n35), .S0(n12), .Y(n115) );
  XOR2X1 U127 ( .A(sub_112_2_carry_7_), .B(N83), .Y(n35) );
  XOR2X1 U128 ( .A(sub_112_carry[7]), .B(N83), .Y(n36) );
  INVX1 U129 ( .A(N92), .Y(n140) );
  INVX1 U130 ( .A(N78), .Y(n139) );
  OAI2BB1X1 U131 ( .A0N(n142), .A1N(A1[12]), .B0(n141), .Y(n23) );
  OAI2BB1X1 U132 ( .A0N(n142), .A1N(A1[8]), .B0(n141), .Y(n62) );
  OAI2BB1X1 U133 ( .A0N(A1[11]), .A1N(n142), .B0(n141), .Y(n38) );
  OAI2BB1X1 U134 ( .A0N(A1[10]), .A1N(n142), .B0(n141), .Y(n46) );
  OAI2BB1X1 U135 ( .A0N(n142), .A1N(A1[9]), .B0(n141), .Y(n54) );
  OAI2BB1X1 U136 ( .A0N(n142), .A1N(A1[7]), .B0(n141), .Y(n70) );
  MXI2X1 U137 ( .A(n76), .B(n75), .S0(n12), .Y(n130) );
  XOR2X1 U138 ( .A(sub_112_carry[2]), .B(N78), .Y(n76) );
  XOR2X1 U139 ( .A(sub_112_2_carry_2_), .B(N78), .Y(n75) );
  INVX1 U140 ( .A(N79), .Y(n138) );
  INVX1 U141 ( .A(N80), .Y(n137) );
  INVX1 U142 ( .A(N81), .Y(n136) );
  INVX1 U143 ( .A(N82), .Y(n135) );
  BUFX3 U144 ( .A(N84), .Y(n12) );
  XNOR2X1 U145 ( .A(N77), .B(N92), .Y(n92) );
  MXI2X1 U146 ( .A(n68), .B(n67), .S0(n12), .Y(n127) );
  XOR2X1 U147 ( .A(sub_112_carry[3]), .B(N79), .Y(n68) );
  XOR2X1 U148 ( .A(sub_112_2_carry_3_), .B(N79), .Y(n67) );
  MXI2X1 U149 ( .A(n60), .B(n59), .S0(n12), .Y(n124) );
  XOR2X1 U150 ( .A(sub_112_carry[4]), .B(N80), .Y(n60) );
  XOR2X1 U151 ( .A(sub_112_2_carry_4_), .B(N80), .Y(n59) );
  INVX1 U152 ( .A(N83), .Y(n134) );
  MXI2XL U153 ( .A(n80), .B(n79), .S0(n78), .Y(n83) );
  XOR3X2 U154 ( .A(n115), .B(n114), .C(n113), .Y(UA2_7_) );
  OAI2BB1X4 U155 ( .A0N(n95), .A1N(n94), .B0(n93), .Y(n128) );
  OAI2BB1X4 U156 ( .A0N(n117), .A1N(n118), .B0(n100), .Y(n113) );
  OAI2BB1X4 U157 ( .A0N(n114), .A1N(n115), .B0(n101), .Y(n111) );
  OAI21X4 U158 ( .A0(n112), .A1(n110), .B0(n111), .Y(n102) );
  OAI2BB1X4 U159 ( .A0N(n109), .A1N(n5), .B0(n103), .Y(n106) );
  XOR2X4 U160 ( .A(n106), .B(n9), .Y(n133) );
  AND2X1 U162 ( .A(sub_112_2_carry_6_), .B(n135), .Y(sub_112_2_carry_7_) );
  AND2X1 U163 ( .A(sub_112_2_carry_5_), .B(n136), .Y(sub_112_2_carry_6_) );
  AND2X1 U164 ( .A(sub_112_2_carry_4_), .B(n137), .Y(sub_112_2_carry_5_) );
  AND2X1 U165 ( .A(sub_112_2_carry_3_), .B(n138), .Y(sub_112_2_carry_4_) );
  AND2X1 U166 ( .A(sub_112_2_carry_2_), .B(n139), .Y(sub_112_2_carry_3_) );
  AND2X1 U167 ( .A(sub_112_carry[6]), .B(n135), .Y(sub_112_carry[7]) );
  AND2X1 U168 ( .A(sub_112_carry[5]), .B(n136), .Y(sub_112_carry[6]) );
  AND2X1 U169 ( .A(sub_112_carry[4]), .B(n137), .Y(sub_112_carry[5]) );
  AND2X1 U170 ( .A(sub_112_carry[3]), .B(n138), .Y(sub_112_carry[4]) );
  AND2X1 U171 ( .A(sub_112_carry[2]), .B(n139), .Y(sub_112_carry[3]) );
  OAI2BB1X1 U172 ( .A0N(n142), .A1N(A1[3]), .B0(n141), .Y(FA1[5]) );
  OAI2BB1X1 U173 ( .A0N(n142), .A1N(A1[2]), .B0(n141), .Y(FA1[4]) );
  OAI2BB1X1 U174 ( .A0N(n142), .A1N(A1[1]), .B0(n141), .Y(FA1[3]) );
  NAND3BX1 U175 ( .AN(A1[0]), .B(n142), .C(n141), .Y(N31) );
  NOR3X1 U176 ( .A(n145), .B(A1[11]), .C(A1[10]), .Y(n144) );
  NOR4X1 U177 ( .A(A1[1]), .B(n146), .C(A1[3]), .D(A1[2]), .Y(n143) );
  UPA2_1_DW01_add_11 add_120 ( .A({n12, N83, N82, N81, N80, N79, N78, N77, N92, 
        A2[6:0]}), .B({n133, n133, n133, n133, n133, UA2_10_, UA2_9_, UA2_8_, 
        UA2_7_, UA2_6_, UA2_5_, UA2_4_, UA2_3_, UA2_2_, UA2_1_, UA2_0_}), .CI(
        1'b0), .SUM(A2T) );
  AOI31X1 U1 ( .A0(n12), .A1(sub_112_2_carry_7_), .A2(n134), .B0(n5), .Y(n104)
         );
  INVX1 U2 ( .A(n104), .Y(n110) );
endmodule


module LIMC_1 ( A2T, A2P );
  input [15:0] A2T;
  output [15:0] A2P;
  wire   A2T_15_, A2P_13_, A2P_12_, n28, A2P_10_, n29, A2P_8_, n30, n31,
         A2P_5_, A2P_4_, A2P_3_, A2P_2_, A2P_1_, A2P_0_, n1, n2, A2P_6_,
         A2P_9_, A2P_11_, A2P_7_, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27;
  assign A2P[14] = A2T_15_;
  assign A2P[15] = A2T_15_;
  assign A2T_15_ = A2T[15];
  assign A2P[13] = A2P_13_;
  assign A2P[12] = A2P_12_;
  assign A2P[10] = A2P_10_;
  assign A2P[8] = A2P_8_;
  assign A2P[5] = A2P_5_;
  assign A2P[4] = A2P_4_;
  assign A2P[3] = A2P_3_;
  assign A2P[2] = A2P_2_;
  assign A2P[1] = A2P_1_;
  assign A2P[0] = A2P_0_;
  assign A2P[6] = A2P_6_;
  assign A2P[9] = A2P_9_;
  assign A2P[11] = A2P_11_;
  assign A2P[7] = A2P_7_;

  NAND2BX2 U3 ( .AN(A2T[12]), .B(n27), .Y(A2P_12_) );
  INVX1 U4 ( .A(A2T[13]), .Y(n1) );
  BUFX3 U5 ( .A(n28), .Y(A2P_11_) );
  INVX1 U6 ( .A(n1), .Y(n2) );
  BUFX8 U7 ( .A(n31), .Y(A2P_6_) );
  NOR2X1 U8 ( .A(A2T[12]), .B(A2T[13]), .Y(n9) );
  NOR2X4 U9 ( .A(n8), .B(n17), .Y(A2P_5_) );
  INVX1 U10 ( .A(A2T[5]), .Y(n17) );
  NOR2X2 U11 ( .A(n8), .B(n20), .Y(A2P_8_) );
  BUFX3 U12 ( .A(n29), .Y(A2P_9_) );
  NOR2X1 U13 ( .A(n8), .B(n21), .Y(n29) );
  NOR2XL U14 ( .A(n8), .B(n23), .Y(n28) );
  NOR2X4 U15 ( .A(n8), .B(n15), .Y(A2P_3_) );
  NOR2X2 U16 ( .A(n8), .B(n18), .Y(n31) );
  BUFX4 U17 ( .A(n30), .Y(A2P_7_) );
  AND2X2 U18 ( .A(A2T[12]), .B(A2T[13]), .Y(n7) );
  NOR2X1 U19 ( .A(A2T_15_), .B(n7), .Y(n11) );
  BUFX20 U20 ( .A(n24), .Y(n8) );
  NOR2XL U21 ( .A(n8), .B(n19), .Y(n30) );
  INVX1 U22 ( .A(n8), .Y(n27) );
  OAI21XL U23 ( .A0(A2T[14]), .A1(n7), .B0(n25), .Y(n26) );
  INVXL U24 ( .A(A2T_15_), .Y(n25) );
  INVX1 U25 ( .A(A2T[9]), .Y(n21) );
  INVX1 U26 ( .A(A2T[0]), .Y(n12) );
  INVX1 U27 ( .A(A2T[2]), .Y(n14) );
  INVX1 U28 ( .A(A2T[11]), .Y(n23) );
  INVX1 U29 ( .A(A2T[1]), .Y(n13) );
  INVX1 U30 ( .A(A2T[8]), .Y(n20) );
  INVX1 U31 ( .A(A2T[4]), .Y(n16) );
  INVX1 U32 ( .A(A2T[3]), .Y(n15) );
  NOR2X2 U33 ( .A(n8), .B(n22), .Y(A2P_10_) );
  INVX1 U34 ( .A(A2T[10]), .Y(n22) );
  INVX1 U35 ( .A(A2T[7]), .Y(n19) );
  INVX1 U36 ( .A(A2T[6]), .Y(n18) );
  NOR2BX4 U37 ( .AN(A2T_15_), .B(n9), .Y(n10) );
  MXI2X4 U38 ( .A(n11), .B(n10), .S0(A2T[14]), .Y(n24) );
  NOR2X4 U39 ( .A(n8), .B(n12), .Y(A2P_0_) );
  NOR2X4 U40 ( .A(n8), .B(n13), .Y(A2P_1_) );
  NOR2X4 U41 ( .A(n8), .B(n14), .Y(A2P_2_) );
  NOR2X4 U42 ( .A(n8), .B(n16), .Y(A2P_4_) );
  OAI2BB1X4 U43 ( .A0N(n27), .A1N(n2), .B0(n26), .Y(A2P_13_) );
endmodule


module TRIGB_WIDTH16_15 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  AND2X1 U2 ( .A(nP[8]), .B(n1), .Y(nR[8]) );
  AND2X1 U3 ( .A(nP[10]), .B(n1), .Y(nR[10]) );
  AND2X1 U4 ( .A(nP[3]), .B(n1), .Y(nR[3]) );
  AND2X1 U5 ( .A(nP[6]), .B(n1), .Y(nR[6]) );
  INVX1 U6 ( .A(TR), .Y(n1) );
  NOR2BX1 U7 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U8 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  AND2X2 U9 ( .A(nP[0]), .B(n1), .Y(nR[0]) );
  AND2X2 U10 ( .A(nP[1]), .B(n1), .Y(nR[1]) );
  AND2X2 U11 ( .A(nP[2]), .B(n1), .Y(nR[2]) );
  AND2X2 U12 ( .A(nP[4]), .B(n1), .Y(nR[4]) );
  AND2X2 U13 ( .A(nP[5]), .B(n1), .Y(nR[5]) );
  AND2X2 U14 ( .A(nP[7]), .B(n1), .Y(nR[7]) );
  AND2X2 U15 ( .A(nP[9]), .B(n1), .Y(nR[9]) );
  AND2X2 U16 ( .A(nP[11]), .B(n1), .Y(nR[11]) );
  AND2X2 U17 ( .A(nP[12]), .B(n1), .Y(nR[12]) );
  AND2X2 U18 ( .A(nP[13]), .B(n1), .Y(nR[13]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_15_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(y[0]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[15]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[12]) );
endmodule


module UPA1_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPA1_1 ( PK0, PK1, A1, SIGPK, A1T );
  input [15:0] A1;
  output [15:0] A1T;
  input PK0, PK1, SIGPK;
  wire   N32, UA1_9_, UA1_8_, UA1_7_, UA1_6_, UA1_5_, UA1_4_, UA1_3_, UA1_2_,
         UA1_1_, UA1_15_, UA1_14_, UA1_13_, UA1_12_, UA1_11_, UA1_10_, N23,
         N22, N21, N20, N19, N18, N17, sub_60_2_carry_2_, sub_60_2_carry_3_,
         sub_60_2_carry_4_, sub_60_2_carry_5_, sub_60_2_carry_6_, n1, n2, n3,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37;
  wire   [7:2] sub_60_carry;
  assign N32 = A1[8];
  assign N23 = A1[15];
  assign N22 = A1[14];
  assign N21 = A1[13];
  assign N20 = A1[12];
  assign N19 = A1[11];
  assign N18 = A1[10];
  assign N17 = A1[9];

  OAI21XL U3 ( .A0(n1), .A1(n20), .B0(n18), .Y(UA1_10_) );
  INVX1 U4 ( .A(n19), .Y(n1) );
  OAI21XL U5 ( .A0(n2), .A1(n20), .B0(n18), .Y(UA1_11_) );
  INVX1 U6 ( .A(n19), .Y(n2) );
  OAI21XL U7 ( .A0(n3), .A1(n20), .B0(n18), .Y(UA1_12_) );
  INVX1 U8 ( .A(n19), .Y(n3) );
  OAI21XL U9 ( .A0(n4), .A1(n20), .B0(n18), .Y(UA1_13_) );
  INVX1 U10 ( .A(n19), .Y(n4) );
  OAI21XL U11 ( .A0(n5), .A1(n20), .B0(n18), .Y(UA1_9_) );
  INVX1 U12 ( .A(n19), .Y(n5) );
  NOR2X1 U13 ( .A(N32), .B(N17), .Y(sub_60_carry[2]) );
  OAI21XL U14 ( .A0(n6), .A1(n20), .B0(n18), .Y(UA1_14_) );
  INVX1 U15 ( .A(n19), .Y(n6) );
  NOR2X1 U16 ( .A(N32), .B(N17), .Y(sub_60_2_carry_2_) );
  OAI21XL U17 ( .A0(n7), .A1(n20), .B0(n18), .Y(UA1_15_) );
  INVX1 U18 ( .A(n19), .Y(n7) );
  OAI21XL U19 ( .A0(n15), .A1(n22), .B0(n14), .Y(n20) );
  INVX1 U20 ( .A(n23), .Y(n13) );
  NAND2X1 U21 ( .A(n19), .B(n18), .Y(n21) );
  MXI2X1 U22 ( .A(sub_60_carry[7]), .B(n9), .S0(N23), .Y(n8) );
  XNOR2XL U23 ( .A(n21), .B(n20), .Y(UA1_8_) );
  NAND2XL U24 ( .A(n8), .B(n13), .Y(n14) );
  XOR3X2 U25 ( .A(n8), .B(n22), .C(n23), .Y(UA1_7_) );
  NAND2BX1 U26 ( .AN(n17), .B(n10), .Y(n18) );
  NAND2BX1 U27 ( .AN(SIGPK), .B(n24), .Y(n22) );
  NOR2X1 U28 ( .A(n8), .B(n13), .Y(n15) );
  OR2XL U29 ( .A(SIGPK), .B(n16), .Y(n17) );
  NAND2BX1 U30 ( .AN(SIGPK), .B(n16), .Y(n23) );
  NAND2BX1 U31 ( .AN(n10), .B(n17), .Y(n19) );
  XNOR2XL U32 ( .A(PK1), .B(PK0), .Y(n16) );
  XNOR2X1 U33 ( .A(SIGPK), .B(n24), .Y(UA1_6_) );
  NAND2X1 U34 ( .A(sub_60_2_carry_6_), .B(n33), .Y(n9) );
  NOR2X1 U35 ( .A(sub_60_carry[7]), .B(N23), .Y(n10) );
  INVX1 U36 ( .A(N22), .Y(n33) );
  INVX1 U37 ( .A(N21), .Y(n34) );
  INVX1 U38 ( .A(N20), .Y(n35) );
  INVX1 U39 ( .A(N19), .Y(n36) );
  INVX1 U40 ( .A(N18), .Y(n37) );
  XOR2X1 U41 ( .A(N17), .B(N32), .Y(UA1_1_) );
  MXI2X1 U42 ( .A(n30), .B(n29), .S0(N23), .Y(UA1_3_) );
  XOR2X1 U43 ( .A(sub_60_2_carry_3_), .B(N19), .Y(n29) );
  XOR2X1 U44 ( .A(sub_60_carry[3]), .B(N19), .Y(n30) );
  MXI2X1 U45 ( .A(n12), .B(n11), .S0(N23), .Y(n24) );
  XOR2X1 U46 ( .A(sub_60_2_carry_6_), .B(N22), .Y(n11) );
  XOR2X1 U47 ( .A(sub_60_carry[6]), .B(N22), .Y(n12) );
  MXI2X1 U48 ( .A(n26), .B(n25), .S0(N23), .Y(UA1_5_) );
  XOR2X1 U49 ( .A(sub_60_2_carry_5_), .B(N21), .Y(n25) );
  XOR2X1 U50 ( .A(sub_60_carry[5]), .B(N21), .Y(n26) );
  MXI2X1 U51 ( .A(n28), .B(n27), .S0(N23), .Y(UA1_4_) );
  XOR2X1 U52 ( .A(sub_60_2_carry_4_), .B(N20), .Y(n27) );
  XOR2X1 U53 ( .A(sub_60_carry[4]), .B(N20), .Y(n28) );
  MXI2X1 U54 ( .A(n32), .B(n31), .S0(N23), .Y(UA1_2_) );
  XOR2X1 U55 ( .A(sub_60_2_carry_2_), .B(N18), .Y(n31) );
  XOR2X1 U56 ( .A(sub_60_carry[2]), .B(N18), .Y(n32) );
  AND2X1 U57 ( .A(sub_60_2_carry_5_), .B(n34), .Y(sub_60_2_carry_6_) );
  AND2X1 U58 ( .A(sub_60_2_carry_4_), .B(n35), .Y(sub_60_2_carry_5_) );
  AND2X1 U59 ( .A(sub_60_2_carry_3_), .B(n36), .Y(sub_60_2_carry_4_) );
  AND2X1 U60 ( .A(sub_60_2_carry_2_), .B(n37), .Y(sub_60_2_carry_3_) );
  AND2X1 U61 ( .A(sub_60_carry[6]), .B(n33), .Y(sub_60_carry[7]) );
  AND2X1 U62 ( .A(sub_60_carry[5]), .B(n34), .Y(sub_60_carry[6]) );
  AND2X1 U63 ( .A(sub_60_carry[4]), .B(n35), .Y(sub_60_carry[5]) );
  AND2X1 U64 ( .A(sub_60_carry[3]), .B(n36), .Y(sub_60_carry[4]) );
  AND2X1 U65 ( .A(sub_60_carry[2]), .B(n37), .Y(sub_60_carry[3]) );
  UPA1_1_DW01_add_1 add_68 ( .A({N23, N22, N21, N20, N19, N18, N17, N32, 
        A1[7:0]}), .B({UA1_15_, UA1_14_, UA1_13_, UA1_12_, UA1_11_, UA1_10_, 
        UA1_9_, UA1_8_, UA1_7_, UA1_6_, UA1_5_, UA1_4_, UA1_3_, UA1_2_, UA1_1_, 
        N32}), .CI(1'b0), .SUM(A1T) );
endmodule


module LIMD_1 ( A1T, A2P, A1P );
  input [15:0] A1T;
  input [15:0] A2P;
  output [15:0] A1P;
  wire   A1UL_0_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98,
         n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176,
         n177, n178, n179, n180, n181, n182, n183, n184, n185, n186;
  wire   [9:1] A1LL;
  assign A1P[15] = A1T[15];
  assign A1UL_0_ = A2P[0];
  assign A1LL[9] = A2P[9];
  assign A1LL[8] = A2P[8];
  assign A1LL[7] = A2P[7];
  assign A1LL[6] = A2P[6];
  assign A1LL[5] = A2P[5];
  assign A1LL[4] = A2P[4];
  assign A1LL[3] = A2P[3];
  assign A1LL[2] = A2P[2];
  assign A1LL[1] = A2P[1];

  OAI221X1 U3 ( .A0(n162), .A1(n13), .B0(n161), .B1(n3), .C0(n160), .Y(A1P[9])
         );
  BUFX12 U4 ( .A(n180), .Y(n13) );
  BUFX16 U5 ( .A(n185), .Y(n3) );
  NOR2X4 U6 ( .A(A1LL[7]), .B(A1LL[8]), .Y(n9) );
  AND2X1 U7 ( .A(A1LL[8]), .B(n157), .Y(n2) );
  BUFX8 U8 ( .A(A2P[10]), .Y(n14) );
  NAND2X4 U9 ( .A(n61), .B(n12), .Y(n76) );
  NOR2X2 U10 ( .A(A1LL[1]), .B(A1UL_0_), .Y(n12) );
  NAND2X2 U11 ( .A(n174), .B(n176), .Y(n113) );
  OR2X4 U12 ( .A(n176), .B(n174), .Y(n112) );
  OAI21X4 U13 ( .A0(A2P[13]), .A1(n66), .B0(n114), .Y(n174) );
  OAI221X1 U14 ( .A0(n169), .A1(n13), .B0(n168), .B1(n3), .C0(n167), .Y(
        A1P[11]) );
  OAI221X1 U15 ( .A0(n134), .A1(n13), .B0(n133), .B1(n3), .C0(n132), .Y(A1P[2]) );
  NAND2XL U16 ( .A(n183), .B(n131), .Y(n132) );
  OAI21X1 U17 ( .A0(n186), .A1(n3), .B0(n184), .Y(A1P[14]) );
  OAI31X4 U18 ( .A0(A1LL[9]), .A1(n14), .A2(n98), .B0(n96), .Y(n163) );
  NAND2X2 U19 ( .A(n6), .B(n9), .Y(n98) );
  NOR3X2 U20 ( .A(A1LL[2]), .B(A1LL[4]), .C(A1LL[3]), .Y(n61) );
  NOR2X1 U21 ( .A(n76), .B(n75), .Y(n6) );
  XOR2X1 U22 ( .A(n76), .B(A1LL[5]), .Y(n143) );
  INVX4 U23 ( .A(n127), .Y(n183) );
  NOR2BX1 U24 ( .AN(n166), .B(A1T[11]), .Y(n1) );
  NOR2BX1 U25 ( .AN(n44), .B(n45), .Y(n42) );
  NAND4BXL U26 ( .AN(n30), .B(n53), .C(n52), .D(n51), .Y(n59) );
  AOI32X1 U27 ( .A0(n104), .A1(n157), .A2(n155), .B0(n159), .B1(n161), .Y(n108) );
  NAND3BX1 U28 ( .AN(n60), .B(n59), .C(n58), .Y(n180) );
  NOR2X1 U29 ( .A(A1T[13]), .B(n177), .Y(n11) );
  NAND3X2 U30 ( .A(n109), .B(n120), .C(n110), .Y(n123) );
  NAND2X2 U31 ( .A(n180), .B(n127), .Y(n185) );
  AOI2BB1X1 U32 ( .A0N(n46), .A1N(n45), .B0(n47), .Y(n48) );
  OAI21XL U33 ( .A0(A1T[10]), .A1(n14), .B0(n18), .Y(n15) );
  OAI32XL U34 ( .A0(n54), .A1(n11), .A2(n172), .B0(n22), .B1(n176), .Y(n57) );
  NAND2X1 U35 ( .A(A1T[14]), .B(n178), .Y(n120) );
  NAND2X1 U36 ( .A(A1T[6]), .B(n73), .Y(n77) );
  XOR2X1 U37 ( .A(n154), .B(n6), .Y(n151) );
  OAI221X4 U38 ( .A0(n13), .A1(n146), .B0(n145), .B1(n3), .C0(n144), .Y(A1P[5]) );
  OAI221X4 U39 ( .A0(n177), .A1(n13), .B0(n176), .B1(n3), .C0(n175), .Y(
        A1P[13]) );
  NAND2X1 U40 ( .A(A1LL[5]), .B(n145), .Y(n44) );
  NOR2X1 U41 ( .A(A1LL[5]), .B(n145), .Y(n43) );
  OR2X2 U42 ( .A(A1LL[5]), .B(A1LL[6]), .Y(n75) );
  NAND3BX1 U43 ( .AN(n11), .B(n56), .C(n26), .Y(n30) );
  OAI221XL U44 ( .A0(n13), .A1(n130), .B0(n129), .B1(n3), .C0(n128), .Y(A1P[1]) );
  OAI221XL U45 ( .A0(n138), .A1(n13), .B0(n137), .B1(n3), .C0(n136), .Y(A1P[3]) );
  OAI221XL U46 ( .A0(n142), .A1(n13), .B0(n141), .B1(n3), .C0(n140), .Y(A1P[4]) );
  INVX1 U47 ( .A(A1LL[5]), .Y(n146) );
  OAI221XL U48 ( .A0(n150), .A1(n13), .B0(n149), .B1(n3), .C0(n148), .Y(A1P[6]) );
  OAI221XL U49 ( .A0(n154), .A1(n13), .B0(n153), .B1(n3), .C0(n152), .Y(A1P[7]) );
  OAI221XL U50 ( .A0(n13), .A1(n158), .B0(n157), .B1(n3), .C0(n156), .Y(A1P[8]) );
  OAI221XL U51 ( .A0(n14), .A1(n13), .B0(n165), .B1(n3), .C0(n164), .Y(A1P[10]) );
  OAI221XL U52 ( .A0(n173), .A1(n13), .B0(n172), .B1(n3), .C0(n171), .Y(
        A1P[12]) );
  OAI21X1 U53 ( .A0(n29), .A1(n30), .B0(n28), .Y(n60) );
  NOR4BX2 U54 ( .AN(n9), .B(n76), .C(A1LL[9]), .D(n75), .Y(n63) );
  INVX2 U55 ( .A(n68), .Y(n109) );
  OAI2BB1XL U56 ( .A0N(A1T[12]), .A1N(n67), .B0(n112), .Y(n68) );
  NAND2X1 U57 ( .A(n183), .B(n174), .Y(n175) );
  NOR2X1 U58 ( .A(A1LL[5]), .B(n76), .Y(n72) );
  AOI21X2 U59 ( .A0(n121), .A1(n120), .B0(n119), .Y(n122) );
  NAND2X1 U60 ( .A(A1LL[3]), .B(n137), .Y(n33) );
  OAI2BB1X1 U61 ( .A0N(A1LL[6]), .A1N(n149), .B0(n31), .Y(n45) );
  INVX1 U62 ( .A(n163), .Y(n97) );
  INVX1 U63 ( .A(n177), .Y(n22) );
  AND2X2 U64 ( .A(n24), .B(A2P[13]), .Y(n7) );
  INVX1 U65 ( .A(n23), .Y(n24) );
  INVX1 U66 ( .A(n120), .Y(n111) );
  INVX1 U67 ( .A(A1LL[3]), .Y(n138) );
  INVX1 U68 ( .A(A1LL[6]), .Y(n150) );
  INVX1 U69 ( .A(A1T[8]), .Y(n157) );
  CLKINVX3 U70 ( .A(n65), .Y(n66) );
  NOR2X1 U71 ( .A(A1LL[3]), .B(A1LL[2]), .Y(n69) );
  INVX1 U72 ( .A(n139), .Y(n85) );
  INVX1 U73 ( .A(n173), .Y(n54) );
  INVX1 U74 ( .A(n104), .Y(n101) );
  NOR2X1 U75 ( .A(n145), .B(n143), .Y(n10) );
  MXI2X1 U76 ( .A(n125), .B(n126), .S0(n3), .Y(A1P[0]) );
  XOR2X1 U77 ( .A(n23), .B(A2P[13]), .Y(n177) );
  NAND2BX2 U78 ( .AN(n94), .B(A2P[12]), .Y(n65) );
  NAND3X1 U79 ( .A(A2P[12]), .B(A2P[11]), .C(n14), .Y(n23) );
  XNOR2X1 U80 ( .A(n14), .B(A2P[11]), .Y(n169) );
  XOR2X1 U81 ( .A(n98), .B(A1LL[9]), .Y(n159) );
  INVXL U82 ( .A(A2P[12]), .Y(n64) );
  XOR2XL U83 ( .A(n134), .B(n12), .Y(n131) );
  OAI2BB1X1 U84 ( .A0N(n112), .A1N(n4), .B0(n113), .Y(n121) );
  AND2X1 U85 ( .A(n170), .B(n172), .Y(n4) );
  INVXL U86 ( .A(A1UL_0_), .Y(n126) );
  AND3X1 U87 ( .A(A2P[13]), .B(A2P[11]), .C(A2P[12]), .Y(n62) );
  XOR2XL U88 ( .A(A1LL[1]), .B(A1UL_0_), .Y(n8) );
  NAND2XL U89 ( .A(A1LL[9]), .B(n161), .Y(n52) );
  NAND2XL U90 ( .A(n14), .B(A2P[11]), .Y(n25) );
  XOR2XL U91 ( .A(n99), .B(A1LL[8]), .Y(n155) );
  INVXL U92 ( .A(A1LL[9]), .Y(n162) );
  NOR2XL U93 ( .A(A1LL[7]), .B(n153), .Y(n47) );
  NAND2XL U94 ( .A(n38), .B(n34), .Y(n41) );
  INVXL U95 ( .A(A2P[11]), .Y(n95) );
  OAI211XL U96 ( .A0(n8), .A1(n129), .B0(A1UL_0_), .C0(n125), .Y(n83) );
  XOR2X1 U97 ( .A(n150), .B(n72), .Y(n147) );
  INVXL U98 ( .A(A1T[15]), .Y(n117) );
  NAND2XL U99 ( .A(A1T[4]), .B(n85), .Y(n86) );
  NAND2XL U100 ( .A(n84), .B(n81), .Y(n88) );
  INVXL U101 ( .A(n131), .Y(n80) );
  OAI2BB1X1 U102 ( .A0N(A1T[10]), .A1N(n97), .B0(n105), .Y(n107) );
  NOR2BX1 U103 ( .AN(n18), .B(n5), .Y(n19) );
  NAND2XL U104 ( .A(A1T[10]), .B(n14), .Y(n5) );
  NOR2BX1 U105 ( .AN(n77), .B(n10), .Y(n89) );
  OR2X2 U106 ( .A(n95), .B(n96), .Y(n94) );
  OAI2BB1XL U107 ( .A0N(n96), .A1N(n95), .B0(n94), .Y(n166) );
  NOR2BX1 U108 ( .AN(n179), .B(n13), .Y(n181) );
  NAND2BX1 U109 ( .AN(n63), .B(n14), .Y(n96) );
  INVX1 U110 ( .A(n147), .Y(n73) );
  INVX1 U111 ( .A(n169), .Y(n17) );
  INVX1 U112 ( .A(n114), .Y(n115) );
  AOI32X1 U113 ( .A0(n133), .A1(n131), .A2(n79), .B0(n135), .B1(n137), .Y(n84)
         );
  XOR2XL U114 ( .A(n114), .B(A2P[14]), .Y(n178) );
  AOI31X1 U115 ( .A0(n93), .A1(n92), .A2(n91), .B0(n90), .Y(n103) );
  NOR2X1 U116 ( .A(n151), .B(n153), .Y(n90) );
  NAND4X1 U117 ( .A(n89), .B(n88), .C(n87), .D(n86), .Y(n91) );
  NAND2X1 U118 ( .A(n151), .B(n153), .Y(n92) );
  NAND2X1 U119 ( .A(A1LL[7]), .B(n153), .Y(n31) );
  NAND2X1 U120 ( .A(n17), .B(n168), .Y(n18) );
  INVXL U121 ( .A(A1LL[2]), .Y(n134) );
  NAND2X1 U122 ( .A(n54), .B(n172), .Y(n26) );
  NOR3X1 U123 ( .A(n107), .B(n101), .C(n100), .Y(n102) );
  NOR2X1 U124 ( .A(n155), .B(n157), .Y(n100) );
  NAND4X1 U125 ( .A(n42), .B(n41), .C(n40), .D(n39), .Y(n49) );
  NAND2XL U126 ( .A(A1LL[4]), .B(n141), .Y(n39) );
  XNOR2X1 U127 ( .A(A2P[14]), .B(n7), .Y(n179) );
  NOR2XL U128 ( .A(n17), .B(n168), .Y(n20) );
  OAI21X1 U129 ( .A0(n108), .A1(n107), .B0(n106), .Y(n110) );
  AOI31X1 U130 ( .A0(n105), .A1(n165), .A2(n163), .B0(n1), .Y(n106) );
  INVXL U131 ( .A(A1LL[4]), .Y(n142) );
  NAND3X1 U132 ( .A(n84), .B(n83), .C(n82), .Y(n87) );
  NAND2XL U133 ( .A(n8), .B(n129), .Y(n82) );
  INVX1 U134 ( .A(A1LL[7]), .Y(n154) );
  OR2X2 U135 ( .A(n168), .B(n166), .Y(n105) );
  OR2X2 U136 ( .A(n137), .B(n135), .Y(n79) );
  XOR2X1 U137 ( .A(n138), .B(n78), .Y(n135) );
  NOR3XL U138 ( .A(A1LL[1]), .B(A1UL_0_), .C(A1LL[2]), .Y(n78) );
  OR2X2 U139 ( .A(n161), .B(n159), .Y(n104) );
  OAI2BB1X1 U140 ( .A0N(A1LL[2]), .A1N(n133), .B0(n33), .Y(n34) );
  NAND2X1 U141 ( .A(n183), .B(n151), .Y(n152) );
  INVXL U142 ( .A(A1LL[1]), .Y(n130) );
  NAND2X1 U143 ( .A(n183), .B(n8), .Y(n128) );
  INVXL U144 ( .A(A1LL[8]), .Y(n158) );
  NAND2X1 U145 ( .A(n183), .B(n155), .Y(n156) );
  NAND2X1 U146 ( .A(n183), .B(n143), .Y(n144) );
  NAND2X1 U147 ( .A(n183), .B(n135), .Y(n136) );
  NAND2X1 U148 ( .A(n183), .B(n139), .Y(n140) );
  NAND2X1 U149 ( .A(n183), .B(n147), .Y(n148) );
  NAND2X1 U150 ( .A(n183), .B(n170), .Y(n171) );
  NAND2X1 U151 ( .A(n183), .B(n163), .Y(n164) );
  NAND2X1 U152 ( .A(n183), .B(n166), .Y(n167) );
  AOI21X1 U153 ( .A0(n183), .A1(n182), .B0(n181), .Y(n184) );
  INVXL U154 ( .A(n178), .Y(n182) );
  NAND2X1 U155 ( .A(n183), .B(n159), .Y(n160) );
  INVX1 U156 ( .A(n15), .Y(n53) );
  AOI21X1 U157 ( .A0(n57), .A1(n56), .B0(n55), .Y(n58) );
  XOR2XL U158 ( .A(n25), .B(A2P[12]), .Y(n173) );
  XOR2XL U159 ( .A(n70), .B(A1LL[4]), .Y(n139) );
  NAND2XL U160 ( .A(n69), .B(n12), .Y(n70) );
  OAI211X1 U161 ( .A0(A1T[14]), .A1(n178), .B0(n118), .C0(n117), .Y(n119) );
  AOI31X1 U162 ( .A0(n50), .A1(n49), .A2(n48), .B0(n2), .Y(n51) );
  NAND3BX1 U163 ( .AN(A1LL[6]), .B(n31), .C(A1T[6]), .Y(n50) );
  AOI2BB2X1 U164 ( .B0(n74), .B1(n77), .A0N(A1T[6]), .A1N(n73), .Y(n93) );
  OAI31X1 U165 ( .A0(n85), .A1(A1T[4]), .A2(n10), .B0(n71), .Y(n74) );
  NAND2XL U166 ( .A(n143), .B(n145), .Y(n71) );
  AOI2BB2X1 U167 ( .B0(A1T[3]), .B1(n138), .A0N(A1LL[2]), .A1N(n32), .Y(n38)
         );
  NAND2X1 U168 ( .A(n33), .B(A1T[2]), .Y(n32) );
  AOI31X1 U169 ( .A0(A1T[4]), .A1(n44), .A2(n142), .B0(n43), .Y(n46) );
  NAND3BX1 U170 ( .AN(A1LL[8]), .B(n52), .C(A1T[8]), .Y(n16) );
  NAND3X1 U171 ( .A(n38), .B(n37), .C(n36), .Y(n40) );
  NAND2BX1 U172 ( .AN(A1LL[1]), .B(A1T[1]), .Y(n36) );
  NAND3BX1 U173 ( .AN(A1UL_0_), .B(n35), .C(A1T[0]), .Y(n37) );
  NAND2XL U174 ( .A(A1LL[1]), .B(n129), .Y(n35) );
  OAI21XL U175 ( .A0(n186), .A1(n179), .B0(A1T[15]), .Y(n55) );
  NAND2BX1 U176 ( .AN(A1T[14]), .B(n179), .Y(n56) );
  INVX1 U177 ( .A(n170), .Y(n67) );
  AOI211X1 U178 ( .A0(n53), .A1(n21), .B0(n20), .C0(n19), .Y(n29) );
  OAI2BB1X1 U179 ( .A0N(A1T[9]), .A1N(n162), .B0(n16), .Y(n21) );
  OAI2BB1XL U180 ( .A0N(A1T[2]), .A1N(n80), .B0(n79), .Y(n81) );
  INVX1 U181 ( .A(A1T[11]), .Y(n168) );
  INVX1 U182 ( .A(A1T[14]), .Y(n186) );
  INVX1 U183 ( .A(A1T[13]), .Y(n176) );
  INVX1 U184 ( .A(A1T[12]), .Y(n172) );
  INVX1 U185 ( .A(A1T[10]), .Y(n165) );
  INVX1 U186 ( .A(A1T[7]), .Y(n153) );
  INVX1 U187 ( .A(A1T[9]), .Y(n161) );
  INVX1 U188 ( .A(A1T[6]), .Y(n149) );
  INVX1 U189 ( .A(A1T[5]), .Y(n145) );
  INVX1 U190 ( .A(A1T[3]), .Y(n137) );
  INVX1 U191 ( .A(A1T[4]), .Y(n141) );
  INVX1 U192 ( .A(A1T[1]), .Y(n129) );
  INVX1 U193 ( .A(A1T[2]), .Y(n133) );
  INVX1 U194 ( .A(A1T[0]), .Y(n125) );
  NAND2XL U195 ( .A(n6), .B(n154), .Y(n99) );
  OAI2BB1X1 U196 ( .A0N(n94), .A1N(n64), .B0(n65), .Y(n170) );
  XOR2X1 U197 ( .A(A2P[15]), .B(n116), .Y(n118) );
  NOR2XL U198 ( .A(A2P[14]), .B(n115), .Y(n116) );
  XOR2X1 U199 ( .A(A2P[15]), .B(n27), .Y(n28) );
  NOR2XL U200 ( .A(A2P[14]), .B(n7), .Y(n27) );
  NAND3BX1 U201 ( .AN(n63), .B(n62), .C(n14), .Y(n114) );
  NAND3X4 U202 ( .A(n124), .B(n123), .C(n122), .Y(n127) );
  NAND4BX2 U203 ( .AN(n111), .B(n109), .C(n103), .D(n102), .Y(n124) );
endmodule


module TRIGB_WIDTH16_14 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  AND2X2 U2 ( .A(nP[5]), .B(n1), .Y(nR[5]) );
  AND2X1 U3 ( .A(nP[15]), .B(n1), .Y(nR[15]) );
  INVX1 U4 ( .A(TR), .Y(n1) );
  AND2X2 U5 ( .A(nP[0]), .B(n1), .Y(nR[0]) );
  AND2X2 U6 ( .A(n1), .B(nP[1]), .Y(nR[1]) );
  AND2X2 U7 ( .A(n1), .B(nP[2]), .Y(nR[2]) );
  AND2X2 U8 ( .A(n1), .B(nP[3]), .Y(nR[3]) );
  AND2X2 U9 ( .A(n1), .B(nP[4]), .Y(nR[4]) );
  AND2X2 U10 ( .A(n1), .B(nP[6]), .Y(nR[6]) );
  AND2X2 U11 ( .A(n1), .B(nP[7]), .Y(nR[7]) );
  AND2X2 U12 ( .A(n1), .B(nP[8]), .Y(nR[8]) );
  AND2X2 U13 ( .A(n1), .B(nP[9]), .Y(nR[9]) );
  AND2X2 U14 ( .A(n1), .B(nP[10]), .Y(nR[10]) );
  AND2X2 U15 ( .A(n1), .B(nP[11]), .Y(nR[11]) );
  AND2X2 U16 ( .A(n1), .B(nP[12]), .Y(nR[12]) );
  AND2X2 U17 ( .A(nP[13]), .B(n1), .Y(nR[13]) );
  AND2X2 U18 ( .A(nP[14]), .B(n1), .Y(nR[14]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_14_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n4) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(y[0]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[9]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[12]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[13]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[14]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[0]) );
  SDFFRHQX1 delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[15]) );
  SDFFRXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[10]) );
endmodule


module FMULT_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [6:0] A;
  input [6:0] B;
  output [6:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [5:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(SUM[6]), .S(SUM[5]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FMULT_1_test_1 ( clk, reset, scan_enable, scan_in0, scan_in1, scan_in2, 
        scan_in3, scan_in4, scan_out0, scan_out1, scan_out2, scan_out3, 
        scan_out4, An, SRn, WAn, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR, 
        test_si, test_so, test_se );
  input [15:0] An;
  input [10:0] SRn;
  output [15:0] WAn;
  input clk, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   AnMAG_13_, N13, N14, N15, N16, N17, N18, N19, N20, N21, N22, N23, N24,
         N25, N76, N77, N78, N79, N80, N81, EXP_CARRY, N86, N90, N91, N92, N93,
         N94, N95, N96, N100, N101, N102, N103, N104, N105, N106, N112, N117,
         N118, N119, N120, N121, N122, N123, N124, N125, N126, N128, N129,
         N133, N134, N135, N136, N137, N138, N139, N140, N141, N142, N143,
         N144, N145, N146, N147, WAnMAG_15_, N160, N161, N162, N163, N164,
         N165, N166, N167, N168, N170, N171, N172, N173, N174, N175, N176,
         N177, N178, N179, N180, N181, N182, N183, N184, N185, N187, N188,
         N189, N190, N191, N192, N193, N194, N195, N196, N197, N198, N199,
         N200, N201, n47, n50, n52, n53, n54, n55, n56, n57, n58, n59, n60,
         n61, n62, n63, n64, n65, n66, n68, n69, n72, n73, n74, n75, n76, n77,
         n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n102, n103, n104, n105,
         n106, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n133, sub_245_B_1_, sub_245_B_2_, sub_245_B_7_,
         sub_245_B_8_, sub_245_B_9_, sub_245_B_10_, sub_245_B_11_,
         sub_245_B_12_, sub_245_B_13_, sub_245_B_14_, add_229_carry_2_,
         add_229_carry_3_, add_229_carry_4_, add_229_carry_5_,
         add_229_carry_6_, add_229_carry_7_, n1, n2, n3, n4, n5, n6, n8, n9,
         n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23,
         n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37,
         n38, n39, n40, n41, n42, n43, n44, n45, n46, n48, n49, n51, n67, n70,
         n71, n101, n107, n132, n134, n135, n136, n137, n138, n139, n140, n141,
         n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152,
         n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163,
         n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174,
         n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185,
         n186, n187, n188, n189, n190, n191, n192, n193, n194, n195, n196,
         n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, n207,
         n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, n218,
         n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229,
         n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240,
         n241, n242, n243, n244, n245, n246, n247, n248, n249, n250, n251,
         n252, n253, n254, n255, n256, n257, sub_239_carry_3_;
  wire   [3:0] AnEXP;
  wire   [3:0] SRnEXP_reg;
  wire   [3:0] AnEXP_reg;
  wire   [4:1] WAnEXP_reg;
  wire   [5:0] AnMANT_reg;
  wire   [5:0] SRnMANT_AND;
  wire   [12:4] WAnMANT_rege;
  wire   [7:0] WAnMANT;
  wire   [15:2] sub_245_carry;
  wire   [3:2] sub_237_carry;
  wire   [12:2] sub_118_carry;
  assign N13 = An[2];
  assign test_so = n154;

  AND2X2 U39 ( .A(SRn[5]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[5]) );
  AND2X2 U40 ( .A(SRn[4]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[4]) );
  AND2X2 U41 ( .A(SRn[3]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[3]) );
  AND2X2 U42 ( .A(SRn[2]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[2]) );
  AND2X2 U43 ( .A(SRn[1]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[1]) );
  AND2X2 U44 ( .A(SRn[0]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[0]) );
  AND2X2 U54 ( .A(SRn[9]), .B(INIT_SR), .Y(N90) );
  AND4X2 U133 ( .A(n102), .B(n103), .C(n40), .D(n104), .Y(n63) );
  OAI21XL U3 ( .A0(n3), .A1(n8), .B0(N170), .Y(n98) );
  XNOR2X1 U4 ( .A(WAnMAG_15_), .B(sub_245_carry[15]), .Y(N185) );
  AOI32X1 U5 ( .A0(n8), .A1(N136), .A2(N126), .B0(N173), .B1(n3), .Y(n92) );
  AOI32X1 U6 ( .A0(n8), .A1(N137), .A2(N126), .B0(N174), .B1(n3), .Y(n90) );
  NAND2X1 U7 ( .A(WAnEXP_reg[1]), .B(N128), .Y(sub_237_carry[2]) );
  AOI32X1 U8 ( .A0(n8), .A1(N138), .A2(N126), .B0(N175), .B1(n3), .Y(n88) );
  NOR2X1 U9 ( .A(N13), .B(An[3]), .Y(sub_118_carry[2]) );
  NOR2X1 U10 ( .A(WAnMANT_rege[4]), .B(N128), .Y(n240) );
  AND3X2 U11 ( .A(sub_118_carry[12]), .B(n26), .C(An[15]), .Y(AnMAG_13_) );
  AOI32X1 U12 ( .A0(n8), .A1(N139), .A2(N126), .B0(N176), .B1(n3), .Y(n86) );
  XNOR2X1 U13 ( .A(WAnEXP_reg[1]), .B(WAnEXP_reg[2]), .Y(n1) );
  XNOR2X1 U14 ( .A(sub_237_carry[3]), .B(n31), .Y(n2) );
  NOR2X1 U15 ( .A(n155), .B(n100), .Y(n3) );
  XOR2X1 U16 ( .A(WAnEXP_reg[3]), .B(sub_239_carry_3_), .Y(n4) );
  XNOR2X1 U18 ( .A(WAnEXP_reg[4]), .B(n10), .Y(n5) );
  XNOR2X1 U19 ( .A(WAnEXP_reg[4]), .B(n11), .Y(n6) );
  AND2X2 U20 ( .A(n100), .B(LD_OUT_SR), .Y(n8) );
  MXI2X1 U21 ( .A(n182), .B(n183), .S0(AnEXP[2]), .Y(n157) );
  MXI2X1 U22 ( .A(n188), .B(n189), .S0(AnEXP[2]), .Y(n159) );
  INVX1 U23 ( .A(reset), .Y(n12) );
  INVX1 U24 ( .A(reset), .Y(n13) );
  INVX1 U25 ( .A(AnEXP[1]), .Y(n38) );
  MXI2X1 U26 ( .A(n101), .B(n107), .S0(n42), .Y(n171) );
  MXI2X1 U27 ( .A(n107), .B(n132), .S0(n42), .Y(n162) );
  MXI2X1 U28 ( .A(n132), .B(n134), .S0(n42), .Y(n170) );
  MXI2X1 U29 ( .A(n162), .B(n165), .S0(AnEXP[1]), .Y(n182) );
  MXI2X1 U30 ( .A(n171), .B(n175), .S0(AnEXP[1]), .Y(n188) );
  MXI2X1 U31 ( .A(n166), .B(n164), .S0(AnEXP[1]), .Y(n183) );
  MXI2X1 U32 ( .A(n176), .B(n174), .S0(AnEXP[1]), .Y(n189) );
  MXI2X1 U33 ( .A(n45), .B(n46), .S0(n42), .Y(n179) );
  MXI2X1 U34 ( .A(n48), .B(n49), .S0(n42), .Y(n164) );
  MXI2X1 U35 ( .A(n46), .B(n48), .S0(n42), .Y(n174) );
  MXI2X1 U36 ( .A(n71), .B(n101), .S0(n42), .Y(n165) );
  MXI2X1 U37 ( .A(n67), .B(n71), .S0(n42), .Y(n175) );
  MXI2X1 U38 ( .A(n169), .B(n170), .S0(AnEXP[1]), .Y(n190) );
  MXI2X1 U45 ( .A(n173), .B(n172), .S0(AnEXP[2]), .Y(n178) );
  NOR2X1 U46 ( .A(n169), .B(n38), .Y(n173) );
  MXI2X1 U47 ( .A(n171), .B(n170), .S0(n38), .Y(n172) );
  NOR2X1 U48 ( .A(n38), .B(n161), .Y(n184) );
  NAND2X1 U49 ( .A(AnEXP[2]), .B(n163), .Y(n168) );
  MXI2X1 U50 ( .A(n162), .B(n161), .S0(n38), .Y(n163) );
  INVX1 U51 ( .A(AnEXP[0]), .Y(n42) );
  INVX1 U52 ( .A(AnEXP[3]), .Y(n40) );
  OAI211X1 U53 ( .A0(AnEXP[3]), .A1(n70), .B0(n108), .C0(n109), .Y(AnEXP[2])
         );
  INVX1 U55 ( .A(n105), .Y(n70) );
  AOI31X1 U56 ( .A0(n110), .A1(n107), .A2(n111), .B0(n45), .Y(n109) );
  INVX1 U57 ( .A(n232), .Y(n141) );
  INVX1 U58 ( .A(n231), .Y(n135) );
  INVX1 U59 ( .A(n205), .Y(n137) );
  INVX1 U60 ( .A(n210), .Y(n139) );
  NOR3X1 U61 ( .A(n46), .B(n49), .C(n48), .Y(n111) );
  INVX1 U62 ( .A(n215), .Y(n136) );
  INVX1 U63 ( .A(n220), .Y(n140) );
  INVX1 U64 ( .A(n225), .Y(n138) );
  OAI211X1 U65 ( .A0(AnEXP[3]), .A1(n121), .B0(n122), .C0(n108), .Y(AnEXP[0])
         );
  AOI21X1 U66 ( .A0(n128), .A1(n115), .B0(n67), .Y(n121) );
  OAI21XL U67 ( .A0(n123), .A1(n46), .B0(n124), .Y(n122) );
  OAI21XL U68 ( .A0(n107), .A1(n106), .B0(n116), .Y(n128) );
  OAI2BB1X1 U69 ( .A0N(n112), .A1N(n108), .B0(n113), .Y(AnEXP[1]) );
  AOI31X1 U70 ( .A0(n117), .A1(n118), .A2(n119), .B0(n45), .Y(n112) );
  OAI31X1 U71 ( .A0(n114), .A1(n71), .A2(n67), .B0(n40), .Y(n113) );
  NAND4X1 U72 ( .A(n134), .B(n110), .C(n103), .D(n120), .Y(n119) );
  NOR2X1 U73 ( .A(n44), .B(AnMAG_13_), .Y(n108) );
  MXI2X1 U74 ( .A(n134), .B(n149), .S0(n42), .Y(n161) );
  MXI2X1 U75 ( .A(n199), .B(n209), .S0(n147), .Y(n219) );
  MXI2X1 U76 ( .A(n195), .B(n194), .S0(n147), .Y(n224) );
  MXI2X1 U77 ( .A(n196), .B(n144), .S0(n9), .Y(n231) );
  INVX1 U78 ( .A(n214), .Y(n144) );
  MXI2X1 U79 ( .A(n200), .B(n143), .S0(n9), .Y(n232) );
  INVX1 U80 ( .A(n219), .Y(n143) );
  MXI2X1 U81 ( .A(n198), .B(n142), .S0(n9), .Y(n205) );
  INVX1 U82 ( .A(n224), .Y(n142) );
  NAND2X1 U83 ( .A(AnEXP[0]), .B(n149), .Y(n169) );
  MXI2X1 U84 ( .A(n44), .B(n45), .S0(n42), .Y(n185) );
  INVX1 U85 ( .A(n124), .Y(n45) );
  MXI2X1 U86 ( .A(n49), .B(n51), .S0(n42), .Y(n176) );
  MXI2X1 U87 ( .A(n51), .B(n67), .S0(n42), .Y(n166) );
  NAND2X1 U88 ( .A(n229), .B(n9), .Y(n210) );
  MX2X1 U89 ( .A(n199), .B(n197), .S0(N129), .Y(n229) );
  MX2X1 U90 ( .A(n195), .B(n193), .S0(N129), .Y(n196) );
  MXI2X1 U91 ( .A(AnMAG_13_), .B(n44), .S0(n42), .Y(n180) );
  INVX1 U92 ( .A(An[15]), .Y(n27) );
  NAND4X1 U93 ( .A(n117), .B(n118), .C(n108), .D(n129), .Y(AnEXP[3]) );
  NOR3X1 U94 ( .A(n49), .B(n45), .C(n51), .Y(n129) );
  AOI2BB1X1 U95 ( .A0N(n63), .A1N(N81), .B0(n156), .Y(N112) );
  MX4X1 U96 ( .A(n190), .B(n189), .C(n188), .D(n187), .S0(AnEXP[3]), .S1(
        AnEXP[2]), .Y(N81) );
  MXI2X1 U97 ( .A(n186), .B(n185), .S0(n38), .Y(n187) );
  NAND2X1 U98 ( .A(AnMAG_13_), .B(n42), .Y(n186) );
  NOR2X1 U99 ( .A(n156), .B(n63), .Y(n58) );
  INVX1 U100 ( .A(N129), .Y(n147) );
  NAND3X1 U101 ( .A(n115), .B(n116), .C(n126), .Y(n105) );
  MXI2X1 U102 ( .A(n204), .B(n203), .S0(n147), .Y(n223) );
  NAND2X1 U103 ( .A(n203), .B(N129), .Y(n213) );
  MXI2X1 U104 ( .A(n209), .B(n208), .S0(n147), .Y(n228) );
  NAND2X1 U105 ( .A(N129), .B(n208), .Y(n218) );
  MXI2X1 U106 ( .A(n194), .B(n204), .S0(n147), .Y(n214) );
  NOR2X1 U107 ( .A(n105), .B(n51), .Y(n110) );
  INVX1 U108 ( .A(n117), .Y(n46) );
  NAND2X1 U109 ( .A(n196), .B(n9), .Y(n215) );
  NAND2X1 U110 ( .A(n200), .B(n9), .Y(n220) );
  NAND2X1 U111 ( .A(n198), .B(n9), .Y(n225) );
  INVX1 U112 ( .A(n120), .Y(n49) );
  INVX1 U113 ( .A(n118), .Y(n48) );
  NOR3X1 U114 ( .A(n105), .B(n132), .C(n149), .Y(n102) );
  MXI2X1 U115 ( .A(n219), .B(n218), .S0(n9), .Y(n221) );
  INVX1 U116 ( .A(n126), .Y(n67) );
  MXI2X1 U117 ( .A(n229), .B(n146), .S0(n9), .Y(n230) );
  INVX1 U118 ( .A(n228), .Y(n146) );
  MXI2X1 U119 ( .A(n214), .B(n213), .S0(n9), .Y(n216) );
  MXI2X1 U120 ( .A(n224), .B(n223), .S0(n9), .Y(n226) );
  AOI21X1 U121 ( .A0(n120), .A1(n125), .B0(n48), .Y(n123) );
  NAND4X1 U122 ( .A(n149), .B(n110), .C(n104), .D(n103), .Y(n125) );
  NOR2X1 U123 ( .A(n9), .B(n218), .Y(n201) );
  NOR2X1 U124 ( .A(n9), .B(n213), .Y(n191) );
  NOR2XL U125 ( .A(n223), .B(n9), .Y(n206) );
  NOR2XL U126 ( .A(n228), .B(n9), .Y(n211) );
  NOR2X1 U127 ( .A(n40), .B(n156), .Y(N86) );
  INVX1 U128 ( .A(n103), .Y(n107) );
  NOR3X1 U129 ( .A(n106), .B(n107), .C(n101), .Y(n114) );
  INVX1 U130 ( .A(n116), .Y(n101) );
  INVX1 U131 ( .A(n115), .Y(n71) );
  INVX1 U132 ( .A(n104), .Y(n134) );
  INVX1 U134 ( .A(n106), .Y(n132) );
  OAI22X1 U135 ( .A0(N24), .A1(n27), .B0(An[15]), .B1(An[13]), .Y(n124) );
  MX2X1 U136 ( .A(WAnMANT[4]), .B(WAnMANT[5]), .S0(N128), .Y(n199) );
  MX2X1 U137 ( .A(WAnMANT[5]), .B(WAnMANT[6]), .S0(N128), .Y(n195) );
  INVX1 U138 ( .A(n99), .Y(N170) );
  NAND2X1 U139 ( .A(N133), .B(N126), .Y(n99) );
  NOR2X1 U140 ( .A(n5), .B(n192), .Y(N133) );
  MXI2X1 U141 ( .A(n191), .B(n135), .S0(n2), .Y(n192) );
  INVX1 U142 ( .A(n131), .Y(n44) );
  OAI22X1 U143 ( .A0(N25), .A1(n27), .B0(An[15]), .B1(An[14]), .Y(n131) );
  NOR2BX1 U144 ( .AN(WAnMANT[7]), .B(N128), .Y(n193) );
  MX2X1 U145 ( .A(WAnMANT[6]), .B(WAnMANT[7]), .S0(N128), .Y(n197) );
  INVX1 U146 ( .A(n97), .Y(sub_245_B_1_) );
  NAND2X1 U147 ( .A(N134), .B(N126), .Y(n97) );
  NOR2X1 U148 ( .A(n5), .B(n202), .Y(N134) );
  MXI2X1 U149 ( .A(n201), .B(n141), .S0(n2), .Y(n202) );
  INVX1 U150 ( .A(n95), .Y(sub_245_B_2_) );
  NAND2X1 U151 ( .A(N135), .B(N126), .Y(n95) );
  NOR2X1 U152 ( .A(n5), .B(n207), .Y(N135) );
  MXI2X1 U153 ( .A(n206), .B(n137), .S0(n2), .Y(n207) );
  NAND2X1 U154 ( .A(N136), .B(N126), .Y(n93) );
  NOR2X1 U155 ( .A(n5), .B(n212), .Y(N136) );
  MXI2X1 U156 ( .A(n211), .B(n139), .S0(n2), .Y(n212) );
  INVX1 U157 ( .A(N13), .Y(n14) );
  INVX1 U158 ( .A(An[3]), .Y(n15) );
  INVX1 U159 ( .A(An[4]), .Y(n16) );
  INVX1 U160 ( .A(An[5]), .Y(n17) );
  OAI22X1 U161 ( .A0(N22), .A1(n27), .B0(An[15]), .B1(An[11]), .Y(n118) );
  OAI22X1 U162 ( .A0(N18), .A1(n27), .B0(An[7]), .B1(An[15]), .Y(n115) );
  OAI22X1 U163 ( .A0(N19), .A1(n27), .B0(An[8]), .B1(An[15]), .Y(n126) );
  OAI22X1 U164 ( .A0(N17), .A1(n27), .B0(An[6]), .B1(An[15]), .Y(n116) );
  INVX1 U165 ( .A(n130), .Y(n51) );
  OAI22X1 U166 ( .A0(N20), .A1(n27), .B0(An[9]), .B1(An[15]), .Y(n130) );
  OAI22X1 U167 ( .A0(N21), .A1(n27), .B0(An[15]), .B1(An[10]), .Y(n120) );
  OAI22X1 U168 ( .A0(N23), .A1(n27), .B0(An[15]), .B1(An[12]), .Y(n117) );
  INVX1 U169 ( .A(n85), .Y(sub_245_B_7_) );
  AOI22X1 U170 ( .A0(N160), .A1(n153), .B0(N140), .B1(N126), .Y(n85) );
  NOR3X1 U171 ( .A(n255), .B(n6), .C(n4), .Y(N160) );
  NOR3X1 U172 ( .A(n230), .B(n5), .C(n2), .Y(N140) );
  MX2X1 U173 ( .A(WAnMANT[2]), .B(WAnMANT[3]), .S0(N128), .Y(n209) );
  MX2X1 U174 ( .A(WAnMANT[1]), .B(WAnMANT[2]), .S0(N128), .Y(n204) );
  MX2X1 U175 ( .A(WAnMANT[3]), .B(WAnMANT[4]), .S0(N128), .Y(n194) );
  XNOR2X1 U176 ( .A(n30), .B(sub_237_carry[2]), .Y(n9) );
  MX2X1 U177 ( .A(WAnMANT[0]), .B(WAnMANT[1]), .S0(N128), .Y(n208) );
  INVX1 U178 ( .A(n83), .Y(sub_245_B_8_) );
  AOI22X1 U179 ( .A0(N161), .A1(n153), .B0(N141), .B1(N126), .Y(n83) );
  NOR4BX1 U180 ( .AN(n256), .B(n1), .C(n4), .D(n6), .Y(N161) );
  NOR3X1 U181 ( .A(n231), .B(n5), .C(n2), .Y(N141) );
  NAND2X1 U182 ( .A(N137), .B(N126), .Y(n91) );
  NOR2X1 U183 ( .A(n5), .B(n217), .Y(N137) );
  MXI2X1 U184 ( .A(n216), .B(n136), .S0(n2), .Y(n217) );
  NAND2X1 U185 ( .A(N138), .B(N126), .Y(n89) );
  NOR2X1 U186 ( .A(n5), .B(n222), .Y(N138) );
  MXI2X1 U187 ( .A(n221), .B(n140), .S0(n2), .Y(n222) );
  NAND2X1 U188 ( .A(N139), .B(N126), .Y(n87) );
  NOR2X1 U189 ( .A(n5), .B(n227), .Y(N139) );
  MXI2X1 U190 ( .A(n226), .B(n138), .S0(n2), .Y(n227) );
  INVX1 U191 ( .A(An[9]), .Y(n21) );
  INVX1 U192 ( .A(An[7]), .Y(n19) );
  INVX1 U193 ( .A(An[10]), .Y(n22) );
  INVX1 U194 ( .A(An[11]), .Y(n23) );
  INVX1 U195 ( .A(An[8]), .Y(n20) );
  INVX1 U196 ( .A(An[6]), .Y(n18) );
  INVX1 U197 ( .A(N128), .Y(n28) );
  INVX1 U198 ( .A(N126), .Y(n153) );
  OAI22X1 U199 ( .A0(N15), .A1(n27), .B0(An[4]), .B1(An[15]), .Y(n106) );
  OAI22X1 U200 ( .A0(N16), .A1(n27), .B0(An[5]), .B1(An[15]), .Y(n103) );
  OAI22X1 U201 ( .A0(N14), .A1(n27), .B0(An[3]), .B1(An[15]), .Y(n104) );
  MXI2X1 U202 ( .A(WAnMANT[1]), .B(WAnMANT[0]), .S0(N128), .Y(n235) );
  MXI2X1 U203 ( .A(WAnMANT[4]), .B(WAnMANT[5]), .S0(n28), .Y(n243) );
  MXI2X1 U204 ( .A(WAnMANT[3]), .B(WAnMANT[2]), .S0(N128), .Y(n234) );
  MXI2X1 U205 ( .A(n238), .B(n239), .S0(n29), .Y(n250) );
  NOR2BX1 U206 ( .AN(n240), .B(n29), .Y(n252) );
  MXI2X1 U207 ( .A(n234), .B(n235), .S0(n29), .Y(n245) );
  INVX1 U208 ( .A(n79), .Y(sub_245_B_10_) );
  AOI22X1 U209 ( .A0(N163), .A1(n153), .B0(N143), .B1(N126), .Y(n79) );
  NOR4BX1 U210 ( .AN(n245), .B(n1), .C(n4), .D(n6), .Y(N163) );
  NOR3X1 U211 ( .A(n205), .B(n5), .C(n2), .Y(N143) );
  INVX1 U212 ( .A(n77), .Y(sub_245_B_11_) );
  AOI22X1 U213 ( .A0(N164), .A1(n153), .B0(N144), .B1(N126), .Y(n77) );
  NOR3X1 U214 ( .A(n233), .B(n6), .C(n4), .Y(N164) );
  NOR3X1 U215 ( .A(n210), .B(n5), .C(n2), .Y(N144) );
  INVX1 U216 ( .A(n73), .Y(sub_245_B_13_) );
  AOI22X1 U217 ( .A0(N166), .A1(n153), .B0(N146), .B1(N126), .Y(n73) );
  NOR3X1 U218 ( .A(n242), .B(n6), .C(n4), .Y(N166) );
  NOR3X1 U219 ( .A(n220), .B(n5), .C(n2), .Y(N146) );
  NOR2X1 U220 ( .A(n235), .B(n29), .Y(n256) );
  MXI2X1 U221 ( .A(n145), .B(n252), .S0(n1), .Y(n233) );
  INVX1 U222 ( .A(n250), .Y(n145) );
  MXI2X1 U223 ( .A(n236), .B(n256), .S0(n1), .Y(n237) );
  MXI2X1 U224 ( .A(n243), .B(n234), .S0(n29), .Y(n236) );
  INVX1 U225 ( .A(n127), .Y(n149) );
  OAI22X1 U226 ( .A0(N13), .A1(n27), .B0(N13), .B1(An[15]), .Y(n127) );
  MX2X1 U227 ( .A(WAnMANT[3]), .B(WAnMANT[4]), .S0(n28), .Y(n238) );
  MX2X1 U228 ( .A(WAnMANT[5]), .B(WAnMANT[6]), .S0(n28), .Y(n248) );
  MX2X1 U229 ( .A(WAnMANT[1]), .B(WAnMANT[2]), .S0(n28), .Y(n239) );
  NAND2BX1 U230 ( .AN(n1), .B(n252), .Y(n255) );
  INVX1 U231 ( .A(n81), .Y(sub_245_B_9_) );
  AOI22X1 U232 ( .A0(N162), .A1(n153), .B0(N142), .B1(N126), .Y(n81) );
  NOR4BX1 U233 ( .AN(n257), .B(n4), .C(n1), .D(n6), .Y(N162) );
  NOR3X1 U234 ( .A(n232), .B(n5), .C(n2), .Y(N142) );
  INVX1 U235 ( .A(n75), .Y(sub_245_B_12_) );
  AOI22X1 U236 ( .A0(N165), .A1(n153), .B0(N145), .B1(N126), .Y(n75) );
  NOR3X1 U237 ( .A(n237), .B(n6), .C(n4), .Y(N165) );
  NOR3X1 U238 ( .A(n215), .B(n5), .C(n2), .Y(N145) );
  INVX1 U239 ( .A(n69), .Y(sub_245_B_14_) );
  AOI22X1 U240 ( .A0(N167), .A1(n153), .B0(N147), .B1(N126), .Y(n69) );
  NOR3X1 U241 ( .A(n247), .B(n6), .C(n4), .Y(N167) );
  NOR3XL U242 ( .A(n225), .B(n5), .C(n2), .Y(N147) );
  INVX1 U243 ( .A(An[12]), .Y(n24) );
  INVX1 U244 ( .A(An[13]), .Y(n25) );
  INVX1 U245 ( .A(An[14]), .Y(n26) );
  MXI2X1 U246 ( .A(n246), .B(n245), .S0(n1), .Y(n247) );
  MXI2X1 U247 ( .A(n244), .B(n243), .S0(n29), .Y(n246) );
  MXI2X1 U248 ( .A(WAnMANT[7]), .B(WAnMANT[6]), .S0(N128), .Y(n244) );
  NOR2BX1 U249 ( .AN(N168), .B(N126), .Y(WAnMAG_15_) );
  NOR2X1 U250 ( .A(n6), .B(n254), .Y(N168) );
  MXI2X1 U251 ( .A(n253), .B(n148), .S0(n4), .Y(n254) );
  INVX1 U252 ( .A(n255), .Y(n148) );
  MXI2X1 U253 ( .A(n251), .B(n250), .S0(n1), .Y(n253) );
  MXI2X1 U254 ( .A(n249), .B(n248), .S0(n29), .Y(n251) );
  NOR2BX1 U255 ( .AN(WAnMANT[7]), .B(n28), .Y(n249) );
  NOR2BX1 U256 ( .AN(N106), .B(INIT_SR), .Y(N125) );
  NOR2BX1 U257 ( .AN(N105), .B(INIT_SR), .Y(N124) );
  NOR2BX1 U258 ( .AN(N104), .B(INIT_SR), .Y(N123) );
  NOR2BX1 U259 ( .AN(N103), .B(INIT_SR), .Y(N122) );
  NOR2BX1 U260 ( .AN(N102), .B(INIT_SR), .Y(N121) );
  INVX1 U261 ( .A(INIT_SR), .Y(n156) );
  NOR2BX1 U262 ( .AN(N101), .B(INIT_SR), .Y(N120) );
  INVX1 U263 ( .A(n62), .Y(n34) );
  AOI22X1 U264 ( .A0(N76), .A1(n58), .B0(AnMANT_reg[1]), .B1(n156), .Y(n62) );
  MXI2X1 U265 ( .A(n158), .B(n157), .S0(AnEXP[3]), .Y(N76) );
  NAND2X1 U266 ( .A(n184), .B(AnEXP[2]), .Y(n158) );
  INVX1 U267 ( .A(n60), .Y(n36) );
  AOI22X1 U268 ( .A0(N78), .A1(n58), .B0(AnMANT_reg[3]), .B1(n156), .Y(n60) );
  MXI2X1 U269 ( .A(n168), .B(n167), .S0(AnEXP[3]), .Y(N78) );
  MX4X1 U270 ( .A(n166), .B(n179), .C(n165), .D(n164), .S0(AnEXP[2]), .S1(n38), 
        .Y(n167) );
  INVX1 U271 ( .A(n59), .Y(n37) );
  AOI22X1 U272 ( .A0(N79), .A1(n58), .B0(AnMANT_reg[4]), .B1(n156), .Y(n59) );
  MXI2X1 U273 ( .A(n178), .B(n177), .S0(AnEXP[3]), .Y(N79) );
  MX4X1 U274 ( .A(n176), .B(n185), .C(n175), .D(n174), .S0(AnEXP[2]), .S1(n38), 
        .Y(n177) );
  INVX1 U275 ( .A(n57), .Y(n33) );
  AOI22X1 U276 ( .A0(N80), .A1(n58), .B0(AnMANT_reg[5]), .B1(n156), .Y(n57) );
  MX4X1 U277 ( .A(n184), .B(n183), .C(n182), .D(n181), .S0(AnEXP[3]), .S1(
        AnEXP[2]), .Y(N80) );
  MXI2X1 U278 ( .A(n180), .B(n179), .S0(n38), .Y(n181) );
  OAI21XL U279 ( .A0(LD_OUT_SR), .A1(n154), .B0(n68), .Y(N201) );
  AOI22X1 U280 ( .A0(N184), .A1(n3), .B0(n8), .B1(sub_245_B_14_), .Y(n68) );
  OAI21XL U281 ( .A0(LD_OUT_SR), .A1(n154), .B0(n47), .Y(n133) );
  AOI22X1 U282 ( .A0(N185), .A1(n3), .B0(WAnMAG_15_), .B1(n8), .Y(n47) );
  OAI2BB1X1 U283 ( .A0N(WAn[14]), .A1N(n155), .B0(n72), .Y(N200) );
  AOI22X1 U284 ( .A0(N183), .A1(n3), .B0(n8), .B1(sub_245_B_13_), .Y(n72) );
  INVX1 U285 ( .A(n61), .Y(n35) );
  AOI22X1 U286 ( .A0(N77), .A1(n58), .B0(AnMANT_reg[2]), .B1(n156), .Y(n61) );
  MXI2X1 U287 ( .A(n160), .B(n159), .S0(AnEXP[3]), .Y(N77) );
  NAND2X1 U288 ( .A(AnEXP[2]), .B(n190), .Y(n160) );
  NAND2BX1 U289 ( .AN(n32), .B(WAnEXP_reg[4]), .Y(N126) );
  OAI2BB1X1 U290 ( .A0N(WAn[8]), .A1N(n155), .B0(n84), .Y(N194) );
  AOI22X1 U291 ( .A0(N177), .A1(n3), .B0(n8), .B1(sub_245_B_7_), .Y(n84) );
  OAI2BB1X1 U292 ( .A0N(WAn[9]), .A1N(n155), .B0(n82), .Y(N195) );
  AOI22X1 U293 ( .A0(N178), .A1(n3), .B0(n8), .B1(sub_245_B_8_), .Y(n82) );
  OAI2BB1X1 U294 ( .A0N(WAn[10]), .A1N(n155), .B0(n80), .Y(N196) );
  AOI22X1 U295 ( .A0(N179), .A1(n3), .B0(n8), .B1(sub_245_B_9_), .Y(n80) );
  OAI2BB1X1 U296 ( .A0N(WAn[11]), .A1N(n155), .B0(n78), .Y(N197) );
  AOI22X1 U297 ( .A0(N180), .A1(n3), .B0(n8), .B1(sub_245_B_10_), .Y(n78) );
  OAI2BB1X1 U298 ( .A0N(WAn[12]), .A1N(n155), .B0(n76), .Y(N198) );
  AOI22X1 U299 ( .A0(N181), .A1(n3), .B0(n8), .B1(sub_245_B_11_), .Y(n76) );
  INVX1 U300 ( .A(WAnEXP_reg[3]), .Y(n31) );
  NOR2X1 U301 ( .A(n31), .B(sub_237_carry[3]), .Y(n10) );
  INVX1 U302 ( .A(WAnMANT_rege[4]), .Y(WAnMANT[0]) );
  INVX1 U303 ( .A(WAnEXP_reg[1]), .Y(n29) );
  INVX1 U304 ( .A(WAnEXP_reg[2]), .Y(n30) );
  OAI2BB1X1 U305 ( .A0N(WAn[13]), .A1N(n155), .B0(n74), .Y(N199) );
  AOI22X1 U306 ( .A0(N182), .A1(n3), .B0(n8), .B1(sub_245_B_12_), .Y(n74) );
  INVX1 U307 ( .A(n53), .Y(n43) );
  AOI22X1 U308 ( .A0(AnEXP[0]), .A1(INIT_SR), .B0(AnEXP_reg[1]), .B1(n156), 
        .Y(n53) );
  INVX1 U309 ( .A(n52), .Y(n39) );
  AOI22X1 U310 ( .A0(AnEXP[1]), .A1(INIT_SR), .B0(AnEXP_reg[2]), .B1(n156), 
        .Y(n52) );
  INVX1 U311 ( .A(n50), .Y(n41) );
  AOI22X1 U312 ( .A0(AnEXP[2]), .A1(INIT_SR), .B0(AnEXP_reg[3]), .B1(n156), 
        .Y(n50) );
  MXI2X1 U313 ( .A(n241), .B(n257), .S0(n1), .Y(n242) );
  MX2X1 U314 ( .A(n238), .B(n248), .S0(WAnEXP_reg[1]), .Y(n241) );
  OAI2BB1X1 U315 ( .A0N(WAn[6]), .A1N(n155), .B0(n88), .Y(N192) );
  OAI2BB1X1 U316 ( .A0N(WAn[7]), .A1N(n155), .B0(n86), .Y(N193) );
  MX2X1 U317 ( .A(n240), .B(n239), .S0(WAnEXP_reg[1]), .Y(n257) );
  NAND2X1 U318 ( .A(sub_239_carry_3_), .B(WAnEXP_reg[3]), .Y(n11) );
  OAI2BB1X1 U319 ( .A0N(WAn[3]), .A1N(n155), .B0(n94), .Y(N189) );
  AOI22XL U320 ( .A0(N172), .A1(n3), .B0(n8), .B1(sub_245_B_2_), .Y(n94) );
  OAI2BB1X1 U321 ( .A0N(WAn[4]), .A1N(n155), .B0(n92), .Y(N190) );
  OAI2BB1X1 U322 ( .A0N(WAn[5]), .A1N(n155), .B0(n90), .Y(N191) );
  OAI2BB1X1 U323 ( .A0N(WAn[2]), .A1N(n155), .B0(n96), .Y(N188) );
  AOI22XL U324 ( .A0(N171), .A1(n3), .B0(n8), .B1(sub_245_B_1_), .Y(n96) );
  XOR2X1 U325 ( .A(n27), .B(SRn[10]), .Y(n100) );
  OAI2BB1X1 U326 ( .A0N(WAn[1]), .A1N(n155), .B0(n98), .Y(N187) );
  INVX1 U327 ( .A(LD_OUT_SR), .Y(n155) );
  XOR2X1 U328 ( .A(AnEXP_reg[0]), .B(EXP_CARRY), .Y(n65) );
  NOR2BX1 U329 ( .AN(N100), .B(INIT_SR), .Y(N119) );
  NOR2X1 U330 ( .A(INIT_SR), .B(n66), .Y(N95) );
  XNOR2X1 U331 ( .A(SRnEXP_reg[0]), .B(n65), .Y(n66) );
  INVX1 U332 ( .A(n56), .Y(n152) );
  AOI22X1 U333 ( .A0(SRnEXP_reg[1]), .A1(n156), .B0(SRn[6]), .B1(INIT_SR), .Y(
        n56) );
  INVX1 U334 ( .A(n55), .Y(n151) );
  AOI22X1 U335 ( .A0(SRnEXP_reg[2]), .A1(n156), .B0(SRn[7]), .B1(INIT_SR), .Y(
        n55) );
  INVX1 U336 ( .A(n54), .Y(n150) );
  AOI22X1 U337 ( .A0(SRnEXP_reg[3]), .A1(n156), .B0(SRn[8]), .B1(INIT_SR), .Y(
        n54) );
  INVX1 U338 ( .A(WAn[15]), .Y(n154) );
  NOR2BX1 U339 ( .AN(WAnEXP_reg[1]), .B(INIT_SR), .Y(N91) );
  NOR2BX1 U340 ( .AN(WAnMANT_rege[5]), .B(INIT_SR), .Y(N117) );
  NOR2BX1 U341 ( .AN(WAnMANT_rege[6]), .B(INIT_SR), .Y(N118) );
  NOR2BX1 U342 ( .AN(WAnEXP_reg[2]), .B(INIT_SR), .Y(N92) );
  NOR2BX1 U343 ( .AN(WAnEXP_reg[3]), .B(INIT_SR), .Y(N93) );
  NOR2BX1 U344 ( .AN(WAnEXP_reg[4]), .B(INIT_SR), .Y(N94) );
  NOR2X1 U345 ( .A(INIT_SR), .B(n64), .Y(N96) );
  AOI22X1 U346 ( .A0(SRnEXP_reg[0]), .A1(n65), .B0(AnEXP_reg[0]), .B1(
        EXP_CARRY), .Y(n64) );
  AND2X1 U347 ( .A(sub_245_carry[14]), .B(n69), .Y(sub_245_carry[15]) );
  XOR2X1 U348 ( .A(n69), .B(sub_245_carry[14]), .Y(N184) );
  AND2X1 U349 ( .A(sub_245_carry[13]), .B(n73), .Y(sub_245_carry[14]) );
  XOR2X1 U350 ( .A(n73), .B(sub_245_carry[13]), .Y(N183) );
  AND2X1 U351 ( .A(sub_245_carry[12]), .B(n75), .Y(sub_245_carry[13]) );
  XOR2X1 U352 ( .A(n75), .B(sub_245_carry[12]), .Y(N182) );
  AND2X1 U353 ( .A(sub_245_carry[11]), .B(n77), .Y(sub_245_carry[12]) );
  XOR2X1 U354 ( .A(n77), .B(sub_245_carry[11]), .Y(N181) );
  AND2X1 U355 ( .A(sub_245_carry[10]), .B(n79), .Y(sub_245_carry[11]) );
  XOR2X1 U356 ( .A(n79), .B(sub_245_carry[10]), .Y(N180) );
  AND2X1 U357 ( .A(sub_245_carry[9]), .B(n81), .Y(sub_245_carry[10]) );
  XOR2X1 U358 ( .A(n81), .B(sub_245_carry[9]), .Y(N179) );
  AND2X1 U359 ( .A(sub_245_carry[8]), .B(n83), .Y(sub_245_carry[9]) );
  XOR2X1 U360 ( .A(n83), .B(sub_245_carry[8]), .Y(N178) );
  AND2X1 U361 ( .A(sub_245_carry[7]), .B(n85), .Y(sub_245_carry[8]) );
  XOR2X1 U362 ( .A(n85), .B(sub_245_carry[7]), .Y(N177) );
  AND2X1 U363 ( .A(sub_245_carry[6]), .B(n87), .Y(sub_245_carry[7]) );
  XOR2X1 U364 ( .A(n87), .B(sub_245_carry[6]), .Y(N176) );
  AND2X1 U365 ( .A(sub_245_carry[5]), .B(n89), .Y(sub_245_carry[6]) );
  XOR2X1 U366 ( .A(n89), .B(sub_245_carry[5]), .Y(N175) );
  AND2X1 U367 ( .A(sub_245_carry[4]), .B(n91), .Y(sub_245_carry[5]) );
  XOR2X1 U368 ( .A(n91), .B(sub_245_carry[4]), .Y(N174) );
  AND2X1 U369 ( .A(sub_245_carry[3]), .B(n93), .Y(sub_245_carry[4]) );
  XOR2X1 U370 ( .A(n93), .B(sub_245_carry[3]), .Y(N173) );
  AND2X1 U371 ( .A(sub_245_carry[2]), .B(n95), .Y(sub_245_carry[3]) );
  XOR2X1 U372 ( .A(n95), .B(sub_245_carry[2]), .Y(N172) );
  AND2X1 U373 ( .A(n99), .B(n97), .Y(sub_245_carry[2]) );
  XOR2X1 U374 ( .A(n97), .B(n99), .Y(N171) );
  AND2X1 U375 ( .A(sub_237_carry[2]), .B(n30), .Y(sub_237_carry[3]) );
  XNOR2X1 U376 ( .A(n28), .B(n29), .Y(N129) );
  XOR2X1 U377 ( .A(WAnMANT_rege[11]), .B(add_229_carry_7_), .Y(WAnMANT[7]) );
  AND2X1 U378 ( .A(add_229_carry_6_), .B(WAnMANT_rege[10]), .Y(
        add_229_carry_7_) );
  XOR2X1 U379 ( .A(WAnMANT_rege[10]), .B(add_229_carry_6_), .Y(WAnMANT[6]) );
  AND2X1 U380 ( .A(add_229_carry_5_), .B(WAnMANT_rege[9]), .Y(add_229_carry_6_) );
  XOR2X1 U381 ( .A(WAnMANT_rege[9]), .B(add_229_carry_5_), .Y(WAnMANT[5]) );
  AND2X1 U382 ( .A(add_229_carry_4_), .B(WAnMANT_rege[8]), .Y(add_229_carry_5_) );
  XOR2X1 U383 ( .A(WAnMANT_rege[8]), .B(add_229_carry_4_), .Y(WAnMANT[4]) );
  AND2X1 U384 ( .A(add_229_carry_3_), .B(WAnMANT_rege[7]), .Y(add_229_carry_4_) );
  XOR2X1 U385 ( .A(WAnMANT_rege[7]), .B(add_229_carry_3_), .Y(WAnMANT[3]) );
  AND2X1 U386 ( .A(add_229_carry_2_), .B(WAnMANT_rege[6]), .Y(add_229_carry_3_) );
  XOR2X1 U387 ( .A(WAnMANT_rege[6]), .B(add_229_carry_2_), .Y(WAnMANT[2]) );
  OR2X1 U388 ( .A(WAnMANT_rege[5]), .B(WAnMANT_rege[4]), .Y(add_229_carry_2_)
         );
  XNOR2X1 U389 ( .A(WAnMANT_rege[4]), .B(WAnMANT_rege[5]), .Y(WAnMANT[1]) );
  OR2X1 U390 ( .A(WAnEXP_reg[2]), .B(WAnEXP_reg[1]), .Y(sub_239_carry_3_) );
  XOR2X1 U391 ( .A(n26), .B(sub_118_carry[12]), .Y(N25) );
  AND2X1 U392 ( .A(sub_118_carry[11]), .B(n25), .Y(sub_118_carry[12]) );
  XOR2X1 U393 ( .A(n25), .B(sub_118_carry[11]), .Y(N24) );
  AND2X1 U394 ( .A(sub_118_carry[10]), .B(n24), .Y(sub_118_carry[11]) );
  XOR2X1 U395 ( .A(n24), .B(sub_118_carry[10]), .Y(N23) );
  AND2X1 U396 ( .A(sub_118_carry[9]), .B(n23), .Y(sub_118_carry[10]) );
  XOR2X1 U397 ( .A(n23), .B(sub_118_carry[9]), .Y(N22) );
  AND2X1 U398 ( .A(sub_118_carry[8]), .B(n22), .Y(sub_118_carry[9]) );
  XOR2X1 U399 ( .A(n22), .B(sub_118_carry[8]), .Y(N21) );
  AND2X1 U400 ( .A(sub_118_carry[7]), .B(n21), .Y(sub_118_carry[8]) );
  XOR2X1 U401 ( .A(n21), .B(sub_118_carry[7]), .Y(N20) );
  AND2X1 U402 ( .A(sub_118_carry[6]), .B(n20), .Y(sub_118_carry[7]) );
  XOR2X1 U403 ( .A(n20), .B(sub_118_carry[6]), .Y(N19) );
  AND2X1 U404 ( .A(sub_118_carry[5]), .B(n19), .Y(sub_118_carry[6]) );
  XOR2X1 U405 ( .A(n19), .B(sub_118_carry[5]), .Y(N18) );
  AND2X1 U406 ( .A(sub_118_carry[4]), .B(n18), .Y(sub_118_carry[5]) );
  XOR2X1 U407 ( .A(n18), .B(sub_118_carry[4]), .Y(N17) );
  AND2X1 U408 ( .A(sub_118_carry[3]), .B(n17), .Y(sub_118_carry[4]) );
  XOR2X1 U409 ( .A(n17), .B(sub_118_carry[3]), .Y(N16) );
  AND2X1 U410 ( .A(sub_118_carry[2]), .B(n16), .Y(sub_118_carry[3]) );
  XOR2X1 U411 ( .A(n16), .B(sub_118_carry[2]), .Y(N15) );
  XOR2X1 U412 ( .A(n15), .B(n14), .Y(N14) );
  AOI32X1 U413 ( .A0(WAnEXP_reg[1]), .A1(N128), .A2(WAnEXP_reg[3]), .B0(
        WAnEXP_reg[2]), .B1(WAnEXP_reg[3]), .Y(n32) );
  AND2X2 U414 ( .A(WAnMANT[0]), .B(N128), .Y(n203) );
  AND2X2 U415 ( .A(n193), .B(n147), .Y(n198) );
  AND2X2 U416 ( .A(n197), .B(n147), .Y(n200) );
  SDFFRHQXL WAn_reg_reg_14_ ( .D(N201), .SI(WAn[13]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[14]) );
  SDFFRHQXL WAn_reg_reg_13_ ( .D(N200), .SI(WAn[12]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[13]) );
  SDFFRHQXL WAn_reg_reg_12_ ( .D(N199), .SI(WAn[11]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[12]) );
  SDFFRHQXL WAn_reg_reg_11_ ( .D(N198), .SI(WAn[10]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[11]) );
  SDFFRHQXL WAn_reg_reg_10_ ( .D(N197), .SI(WAn[9]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[10]) );
  SDFFRHQXL WAn_reg_reg_9_ ( .D(N196), .SI(WAn[8]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[9]) );
  SDFFRHQXL WAn_reg_reg_8_ ( .D(N195), .SI(WAn[7]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[8]) );
  SDFFRHQXL WAn_reg_reg_7_ ( .D(N194), .SI(WAn[6]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[7]) );
  SDFFRHQXL WAn_reg_reg_6_ ( .D(N193), .SI(WAn[5]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[6]) );
  SDFFRHQXL WAn_reg_reg_5_ ( .D(N192), .SI(WAn[4]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[5]) );
  SDFFRHQXL WAn_reg_reg_4_ ( .D(N191), .SI(WAn[3]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[4]) );
  SDFFRHQXL WAn_reg_reg_3_ ( .D(N190), .SI(WAn[2]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[3]) );
  SDFFRHQXL WAn_reg_reg_2_ ( .D(N189), .SI(WAn[1]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[2]) );
  SDFFRHQXL WAn_reg_reg_1_ ( .D(N188), .SI(WAn[0]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[1]) );
  SDFFRHQXL AnEXP_reg_reg_3_ ( .D(N86), .SI(AnEXP_reg[2]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(AnEXP_reg[3]) );
  SDFFRHQXL AnEXP_reg_reg_2_ ( .D(n41), .SI(AnEXP_reg[1]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(AnEXP_reg[2]) );
  SDFFRHQXL AnEXP_reg_reg_1_ ( .D(n39), .SI(AnEXP_reg[0]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(AnEXP_reg[1]) );
  SDFFRHQXL AnMANT_reg_reg_5_ ( .D(N112), .SI(AnMANT_reg[4]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[5]) );
  SDFFRHQXL AnMANT_reg_reg_4_ ( .D(n33), .SI(AnMANT_reg[3]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[4]) );
  SDFFRHQXL AnMANT_reg_reg_3_ ( .D(n37), .SI(AnMANT_reg[2]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[3]) );
  SDFFRHQXL AnMANT_reg_reg_2_ ( .D(n36), .SI(AnMANT_reg[1]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[2]) );
  SDFFRHQXL AnMANT_reg_reg_1_ ( .D(n35), .SI(AnMANT_reg[0]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[1]) );
  SDFFRHQXL WAn_reg_reg_15_ ( .D(n133), .SI(WAn[14]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[15]) );
  SDFFRHQXL SRnEXP_reg_reg_3_ ( .D(N90), .SI(SRnEXP_reg[2]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n13), .Q(SRnEXP_reg[3]) );
  SDFFRHQXL SRnEXP_reg_reg_2_ ( .D(n150), .SI(SRnEXP_reg[1]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n12), .Q(SRnEXP_reg[2]) );
  SDFFRHQXL SRnEXP_reg_reg_1_ ( .D(n151), .SI(SRnEXP_reg[0]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n13), .Q(SRnEXP_reg[1]) );
  SDFFRHQXL WAnMANT_rege_reg_12_ ( .D(N125), .SI(WAnMANT_rege[11]), .SE(
        test_se), .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[12]) );
  SDFFRHQXL SRnEXP_reg_reg_0_ ( .D(n152), .SI(EXP_CARRY), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(SRnEXP_reg[0]) );
  SDFFRHQXL AnEXP_reg_reg_0_ ( .D(n43), .SI(test_si), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(AnEXP_reg[0]) );
  SDFFRHQXL AnMANT_reg_reg_0_ ( .D(n34), .SI(AnEXP_reg[3]), .SE(test_se), .CK(
        SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[0]) );
  SDFFRHQXL WAn_reg_reg_0_ ( .D(N187), .SI(WAnMANT_rege[12]), .SE(test_se), 
        .CK(clk), .RN(n13), .Q(WAn[0]) );
  SDFFRHQXL EXP_CARRY_reg ( .D(N96), .SI(AnMANT_reg[5]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(EXP_CARRY) );
  SDFFRHQXL WAnEXP_reg_reg_4_ ( .D(N95), .SI(n31), .SE(test_se), .CK(SHIFT_EXP), .RN(n12), .Q(WAnEXP_reg[4]) );
  SDFFRHQXL WAnMANT_rege_reg_11_ ( .D(N124), .SI(WAnMANT_rege[10]), .SE(
        test_se), .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[11]) );
  SDFFRHQXL WAnMANT_rege_reg_8_ ( .D(N121), .SI(WAnMANT_rege[7]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[8]) );
  SDFFRHQXL WAnMANT_rege_reg_9_ ( .D(N122), .SI(WAnMANT_rege[8]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[9]) );
  SDFFRHQXL WAnMANT_rege_reg_10_ ( .D(N123), .SI(WAnMANT_rege[9]), .SE(test_se), .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[10]) );
  SDFFRHQXL WAnEXP_reg_reg_3_ ( .D(N94), .SI(n30), .SE(test_se), .CK(SHIFT_EXP), .RN(n13), .Q(WAnEXP_reg[3]) );
  SDFFRHQXL WAnEXP_reg_reg_2_ ( .D(N93), .SI(n29), .SE(test_se), .CK(SHIFT_EXP), .RN(n12), .Q(WAnEXP_reg[2]) );
  SDFFRHQXL WAnEXP_reg_reg_1_ ( .D(N92), .SI(n28), .SE(test_se), .CK(SHIFT_EXP), .RN(n13), .Q(WAnEXP_reg[1]) );
  SDFFRHQXL WAnMANT_rege_reg_6_ ( .D(N119), .SI(WAnMANT_rege[5]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[6]) );
  SDFFRHQXL WAnMANT_rege_reg_5_ ( .D(N118), .SI(WAnMANT[0]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[5]) );
  SDFFRHQXL WAnMANT_rege_reg_4_ ( .D(N117), .SI(WAnEXP_reg[4]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[4]) );
  SDFFRHQXL WAnMANT_rege_reg_7_ ( .D(N120), .SI(WAnMANT_rege[6]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[7]) );
  SDFFRHQX1 WAnEXP_reg_reg_0_ ( .D(N91), .SI(SRnEXP_reg[3]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n12), .Q(N128) );
  FMULT_1_DW01_add_1 add_217 ( .A({1'b0, SRnMANT_AND}), .B({1'b0, 
        WAnMANT_rege[12:7]}), .CI(1'b0), .SUM({N106, N105, N104, N103, N102, 
        N101, N100}) );
endmodule


module ACCUM_1_test_1 ( a, clk, sei_en, sezi_en, m1_sel, m2_sel, sei, sezi, 
        reset, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, test_mode, 
        scan_enable, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, 
        test_si, test_so, test_se );
  output [14:0] sei;
  output [14:0] sezi;
  input a, clk, sei_en, sezi_en, m1_sel, m2_sel, reset, scan_in0, scan_in1,
         scan_in2, scan_in3, scan_in4, test_mode, scan_enable, test_si,
         test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   m1_out, cout, m2_out, n48, n49, n51, n52, n53, n54, n55, n1, n2, n3;
  wire   [15:0] tmp1;
  assign test_so = tmp1[15];

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(test_mode), .Y(n1) );
  XOR2X1 U6 ( .A(a), .B(m1_out), .Y(n54) );
  NOR2X1 U7 ( .A(m2_sel), .B(n53), .Y(m2_out) );
  XNOR2X1 U8 ( .A(tmp1[0]), .B(n54), .Y(n53) );
  NOR2X1 U9 ( .A(m1_sel), .B(n55), .Y(cout) );
  AOI22X1 U10 ( .A0(tmp1[0]), .A1(n54), .B0(a), .B1(m1_out), .Y(n55) );
  INVX1 U11 ( .A(n52), .Y(n49) );
  AOI22X1 U12 ( .A0(clk), .A1(test_mode), .B0(sei_en), .B1(n1), .Y(n52) );
  INVX1 U13 ( .A(n51), .Y(n48) );
  AOI22X1 U14 ( .A0(clk), .A1(test_mode), .B0(sezi_en), .B1(n1), .Y(n51) );
  SDFFRHQXL tmp1_reg_0_ ( .D(tmp1[1]), .SI(sezi[14]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[0]) );
  SDFFRHQXL m1_out_reg ( .D(cout), .SI(test_si), .SE(test_se), .CK(clk), .RN(
        n3), .Q(m1_out) );
  SDFFRHQXL sezi_reg_13_ ( .D(tmp1[14]), .SI(sezi[12]), .SE(test_se), .CK(n48), 
        .RN(n2), .Q(sezi[13]) );
  SDFFRHQXL sezi_reg_12_ ( .D(tmp1[13]), .SI(sezi[11]), .SE(test_se), .CK(n48), 
        .RN(n2), .Q(sezi[12]) );
  SDFFRHQXL sezi_reg_11_ ( .D(tmp1[12]), .SI(sezi[10]), .SE(test_se), .CK(n48), 
        .RN(n2), .Q(sezi[11]) );
  SDFFRHQXL sezi_reg_10_ ( .D(tmp1[11]), .SI(sezi[9]), .SE(test_se), .CK(n48), 
        .RN(n2), .Q(sezi[10]) );
  SDFFRHQXL sezi_reg_9_ ( .D(tmp1[10]), .SI(sezi[8]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[9]) );
  SDFFRHQXL sezi_reg_8_ ( .D(tmp1[9]), .SI(sezi[7]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[8]) );
  SDFFRHQXL sezi_reg_7_ ( .D(tmp1[8]), .SI(sezi[6]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[7]) );
  SDFFRHQXL sezi_reg_6_ ( .D(tmp1[7]), .SI(sezi[5]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[6]) );
  SDFFRHQXL sezi_reg_5_ ( .D(tmp1[6]), .SI(sezi[4]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[5]) );
  SDFFRHQXL sezi_reg_4_ ( .D(tmp1[5]), .SI(sezi[3]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[4]) );
  SDFFRHQXL sezi_reg_14_ ( .D(tmp1[15]), .SI(sezi[13]), .SE(test_se), .CK(n48), 
        .RN(n2), .Q(sezi[14]) );
  SDFFRHQXL sezi_reg_3_ ( .D(tmp1[4]), .SI(sezi[2]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[3]) );
  SDFFRHQXL sezi_reg_2_ ( .D(tmp1[3]), .SI(sezi[1]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[2]) );
  SDFFRHQXL sezi_reg_1_ ( .D(tmp1[2]), .SI(sezi[0]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[1]) );
  SDFFRHQXL sezi_reg_0_ ( .D(tmp1[1]), .SI(sei[14]), .SE(test_se), .CK(n48), 
        .RN(n3), .Q(sezi[0]) );
  SDFFRHQXL sei_reg_13_ ( .D(tmp1[14]), .SI(sei[12]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[13]) );
  SDFFRHQXL sei_reg_12_ ( .D(tmp1[13]), .SI(sei[11]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[12]) );
  SDFFRHQXL sei_reg_10_ ( .D(tmp1[11]), .SI(sei[9]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[10]) );
  SDFFRHQXL sei_reg_8_ ( .D(tmp1[9]), .SI(sei[7]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[8]) );
  SDFFRHQXL sei_reg_6_ ( .D(tmp1[7]), .SI(sei[5]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[6]) );
  SDFFRHQXL sei_reg_11_ ( .D(tmp1[12]), .SI(sei[10]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[11]) );
  SDFFRHQXL sei_reg_9_ ( .D(tmp1[10]), .SI(sei[8]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[9]) );
  SDFFRHQXL sei_reg_7_ ( .D(tmp1[8]), .SI(sei[6]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[7]) );
  SDFFRHQXL sei_reg_4_ ( .D(tmp1[5]), .SI(sei[3]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[4]) );
  SDFFRHQXL sei_reg_2_ ( .D(tmp1[3]), .SI(sei[1]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[2]) );
  SDFFRHQXL sei_reg_1_ ( .D(tmp1[2]), .SI(sei[0]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[1]) );
  SDFFRHQXL sei_reg_5_ ( .D(tmp1[6]), .SI(sei[4]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[5]) );
  SDFFRHQXL sei_reg_3_ ( .D(tmp1[4]), .SI(sei[2]), .SE(test_se), .CK(n49), 
        .RN(n2), .Q(sei[3]) );
  SDFFRHQXL tmp1_reg_15_ ( .D(m2_out), .SI(tmp1[14]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[15]) );
  SDFFRHQXL tmp1_reg_14_ ( .D(tmp1[15]), .SI(tmp1[13]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[14]) );
  SDFFRHQXL tmp1_reg_13_ ( .D(tmp1[14]), .SI(tmp1[12]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[13]) );
  SDFFRHQXL tmp1_reg_12_ ( .D(tmp1[13]), .SI(tmp1[11]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[12]) );
  SDFFRHQXL tmp1_reg_11_ ( .D(tmp1[12]), .SI(tmp1[10]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[11]) );
  SDFFRHQXL tmp1_reg_10_ ( .D(tmp1[11]), .SI(tmp1[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[10]) );
  SDFFRHQXL tmp1_reg_9_ ( .D(tmp1[10]), .SI(tmp1[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[9]) );
  SDFFRHQXL tmp1_reg_8_ ( .D(tmp1[9]), .SI(tmp1[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[8]) );
  SDFFRHQXL tmp1_reg_7_ ( .D(tmp1[8]), .SI(tmp1[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[7]) );
  SDFFRHQXL tmp1_reg_6_ ( .D(tmp1[7]), .SI(tmp1[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[6]) );
  SDFFRHQXL tmp1_reg_5_ ( .D(tmp1[6]), .SI(tmp1[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[5]) );
  SDFFRHQXL tmp1_reg_4_ ( .D(tmp1[5]), .SI(tmp1[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[4]) );
  SDFFRHQXL tmp1_reg_3_ ( .D(tmp1[4]), .SI(tmp1[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[3]) );
  SDFFRHQXL tmp1_reg_2_ ( .D(tmp1[3]), .SI(tmp1[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[2]) );
  SDFFRHQXL tmp1_reg_1_ ( .D(tmp1[2]), .SI(tmp1[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[1]) );
  SDFFRHQXL sei_reg_14_ ( .D(tmp1[15]), .SI(sei[13]), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[14]) );
  SDFFRHQXL sei_reg_0_ ( .D(tmp1[1]), .SI(m1_out), .SE(test_se), .CK(n49), 
        .RN(n3), .Q(sei[0]) );
endmodule


module FMULT_ACCUM_1_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  INVX1 U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module FMULT_ACCUM_1_test_1 ( reset, clk, start, done, A1, A2, B1, B2, B3, B4, 
        B5, B6, SR1, SR2, DQ1, DQ2, DQ3, DQ4, DQ5, DQ6, WAn, SE, SEZ, 
        test_mode, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, 
        scan_in4, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, 
        test_si, test_so, test_se );
  input [15:0] A1;
  input [15:0] A2;
  input [15:0] B1;
  input [15:0] B2;
  input [15:0] B3;
  input [15:0] B4;
  input [15:0] B5;
  input [15:0] B6;
  input [10:0] SR1;
  input [10:0] SR2;
  input [10:0] DQ1;
  input [10:0] DQ2;
  input [10:0] DQ3;
  input [10:0] DQ4;
  input [10:0] DQ5;
  input [10:0] DQ6;
  output [15:0] WAn;
  output [14:0] SE;
  output [14:0] SEZ;
  input reset, clk, start, test_mode, scan_enable, scan_in0, scan_in1,
         scan_in2, scan_in3, scan_in4, test_si, test_se;
  output done, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   LD_SEI_w, LD_SEZI_w, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR,
         CLR_CARRY, CLR_ACCUM, SHIFT_EXP_int, SHIFT_MANT_int, N83, N85, N86,
         N87, N88, N89, N90, N91, N92, N106, N109, N125, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n80, n81,
         n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178, n179, n180, n181, n182, n183, n184,
         n185, n186, n187, n188, n189, n190, n1, n2, n4, n5, n6, n7, n8, n9,
         n10, n11, n12, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n13, n14, n17, n18, n36, n37, n39, n40,
         n3;
  wire   [15:0] mux_tc_out;
  wire   [10:0] mux_fl_out;
  wire   [2:0] mux_sel;
  wire   [7:0] count;
  assign test_so = mux_sel[2];

  OR4X2 U27 ( .A(count[2]), .B(count[3]), .C(count[5]), .D(count[6]), .Y(n64)
         );
  OAI21XL U3 ( .A0(n1), .A1(test_mode), .B0(n184), .Y(LD_SEI_w) );
  OAI21XL U4 ( .A0(n2), .A1(test_mode), .B0(n184), .Y(LD_SEZI_w) );
  AND3X2 U7 ( .A(mux_sel[1]), .B(mux_sel[0]), .C(mux_sel[2]), .Y(n4) );
  AND3X2 U8 ( .A(mux_sel[0]), .B(n31), .C(mux_sel[2]), .Y(n5) );
  NOR3X2 U9 ( .A(mux_sel[1]), .B(mux_sel[2]), .C(n32), .Y(n6) );
  NOR3X2 U10 ( .A(n32), .B(mux_sel[2]), .C(n31), .Y(n7) );
  NOR3X2 U11 ( .A(mux_sel[0]), .B(mux_sel[2]), .C(n31), .Y(n8) );
  AND3X2 U12 ( .A(mux_sel[1]), .B(n32), .C(mux_sel[2]), .Y(n9) );
  AND3X2 U13 ( .A(n32), .B(n31), .C(mux_sel[2]), .Y(n10) );
  NOR3X2 U14 ( .A(mux_sel[1]), .B(mux_sel[2]), .C(mux_sel[0]), .Y(n11) );
  NOR2X1 U15 ( .A(N83), .B(start), .Y(n12) );
  INVX1 U16 ( .A(n67), .Y(n29) );
  INVX1 U17 ( .A(reset), .Y(n19) );
  AOI22X1 U18 ( .A0(B4[15]), .A1(n7), .B0(B3[15]), .B1(n8), .Y(n113) );
  NAND4X1 U19 ( .A(n112), .B(n113), .C(n114), .D(n115), .Y(mux_tc_out[15]) );
  AOI22X1 U20 ( .A0(B6[15]), .A1(n5), .B0(B5[15]), .B1(n10), .Y(n114) );
  AOI22X1 U21 ( .A0(B2[15]), .A1(n6), .B0(B1[15]), .B1(n11), .Y(n112) );
  NAND4X1 U22 ( .A(n30), .B(n35), .C(n34), .D(n33), .Y(n67) );
  NOR3X1 U23 ( .A(n35), .B(n34), .C(n30), .Y(n185) );
  NOR2BX1 U24 ( .AN(n185), .B(n33), .Y(N125) );
  NOR2X1 U25 ( .A(n29), .B(n186), .Y(N109) );
  AOI31X1 U26 ( .A0(n35), .A1(n34), .A2(n30), .B0(n33), .Y(n186) );
  NAND4X1 U28 ( .A(n136), .B(n137), .C(n138), .D(n139), .Y(mux_tc_out[0]) );
  NAND4X1 U29 ( .A(n108), .B(n109), .C(n110), .D(n111), .Y(mux_tc_out[1]) );
  NAND4X1 U30 ( .A(n104), .B(n105), .C(n106), .D(n107), .Y(mux_tc_out[2]) );
  AOI22X1 U31 ( .A0(B2[2]), .A1(n6), .B0(B1[2]), .B1(n11), .Y(n104) );
  AOI22X1 U32 ( .A0(B4[2]), .A1(n7), .B0(B3[2]), .B1(n8), .Y(n105) );
  AOI22X1 U33 ( .A0(B6[2]), .A1(n5), .B0(B5[2]), .B1(n10), .Y(n106) );
  NAND4X1 U34 ( .A(n100), .B(n101), .C(n102), .D(n103), .Y(mux_tc_out[3]) );
  AOI22X1 U35 ( .A0(B2[3]), .A1(n6), .B0(B1[3]), .B1(n11), .Y(n100) );
  AOI22X1 U36 ( .A0(B4[3]), .A1(n7), .B0(B3[3]), .B1(n8), .Y(n101) );
  AOI22X1 U37 ( .A0(B6[3]), .A1(n5), .B0(B5[3]), .B1(n10), .Y(n102) );
  NAND4X1 U38 ( .A(n96), .B(n97), .C(n98), .D(n99), .Y(mux_tc_out[4]) );
  AOI22X1 U39 ( .A0(B2[4]), .A1(n6), .B0(B1[4]), .B1(n11), .Y(n96) );
  AOI22X1 U40 ( .A0(B4[4]), .A1(n7), .B0(B3[4]), .B1(n8), .Y(n97) );
  AOI22X1 U41 ( .A0(B6[4]), .A1(n5), .B0(B5[4]), .B1(n10), .Y(n98) );
  NAND4X1 U42 ( .A(n92), .B(n93), .C(n94), .D(n95), .Y(mux_tc_out[5]) );
  AOI22X1 U43 ( .A0(B2[5]), .A1(n6), .B0(B1[5]), .B1(n11), .Y(n92) );
  AOI22X1 U44 ( .A0(B4[5]), .A1(n7), .B0(B3[5]), .B1(n8), .Y(n93) );
  AOI22X1 U45 ( .A0(B6[5]), .A1(n5), .B0(B5[5]), .B1(n10), .Y(n94) );
  INVX1 U46 ( .A(mux_sel[0]), .Y(n32) );
  INVX1 U47 ( .A(mux_sel[1]), .Y(n31) );
  AOI22X1 U48 ( .A0(A1[2]), .A1(n4), .B0(A2[2]), .B1(n9), .Y(n107) );
  AOI22X1 U49 ( .A0(A1[3]), .A1(n4), .B0(A2[3]), .B1(n9), .Y(n103) );
  AOI22X1 U50 ( .A0(A1[4]), .A1(n4), .B0(A2[4]), .B1(n9), .Y(n99) );
  AOI22X1 U51 ( .A0(A1[5]), .A1(n4), .B0(A2[5]), .B1(n9), .Y(n95) );
  NAND4X1 U52 ( .A(n84), .B(n85), .C(n86), .D(n87), .Y(mux_tc_out[7]) );
  AOI22X1 U53 ( .A0(B2[7]), .A1(n6), .B0(B1[7]), .B1(n11), .Y(n84) );
  AOI22X1 U54 ( .A0(B4[7]), .A1(n7), .B0(B3[7]), .B1(n8), .Y(n85) );
  AOI22X1 U55 ( .A0(B6[7]), .A1(n5), .B0(B5[7]), .B1(n10), .Y(n86) );
  NAND4X1 U56 ( .A(n132), .B(n133), .C(n134), .D(n135), .Y(mux_tc_out[10]) );
  AOI22X1 U57 ( .A0(B2[10]), .A1(n6), .B0(B1[10]), .B1(n11), .Y(n132) );
  AOI22X1 U58 ( .A0(B4[10]), .A1(n7), .B0(B3[10]), .B1(n8), .Y(n133) );
  AOI22X1 U59 ( .A0(B6[10]), .A1(n5), .B0(B5[10]), .B1(n10), .Y(n134) );
  NAND4X1 U60 ( .A(n128), .B(n129), .C(n130), .D(n131), .Y(mux_tc_out[11]) );
  AOI22X1 U61 ( .A0(B2[11]), .A1(n6), .B0(B1[11]), .B1(n11), .Y(n128) );
  AOI22X1 U62 ( .A0(B4[11]), .A1(n7), .B0(B3[11]), .B1(n8), .Y(n129) );
  AOI22X1 U63 ( .A0(B6[11]), .A1(n5), .B0(B5[11]), .B1(n10), .Y(n130) );
  NAND4X1 U64 ( .A(n80), .B(n81), .C(n82), .D(n83), .Y(mux_tc_out[8]) );
  AOI22X1 U65 ( .A0(B2[8]), .A1(n6), .B0(B1[8]), .B1(n11), .Y(n80) );
  AOI22X1 U66 ( .A0(B4[8]), .A1(n7), .B0(B3[8]), .B1(n8), .Y(n81) );
  AOI22X1 U67 ( .A0(B6[8]), .A1(n5), .B0(B5[8]), .B1(n10), .Y(n82) );
  NAND4X1 U68 ( .A(n88), .B(n89), .C(n90), .D(n91), .Y(mux_tc_out[6]) );
  AOI22X1 U69 ( .A0(B2[6]), .A1(n6), .B0(B1[6]), .B1(n11), .Y(n88) );
  AOI22X1 U70 ( .A0(B4[6]), .A1(n7), .B0(B3[6]), .B1(n8), .Y(n89) );
  AOI22X1 U71 ( .A0(B6[6]), .A1(n5), .B0(B5[6]), .B1(n10), .Y(n90) );
  AOI22X1 U72 ( .A0(B6[9]), .A1(n5), .B0(B5[9]), .B1(n10), .Y(n70) );
  NAND4X1 U73 ( .A(n68), .B(n69), .C(n70), .D(n71), .Y(mux_tc_out[9]) );
  AOI22X1 U74 ( .A0(B2[9]), .A1(n6), .B0(B1[9]), .B1(n11), .Y(n68) );
  AOI22X1 U75 ( .A0(B4[9]), .A1(n7), .B0(B3[9]), .B1(n8), .Y(n69) );
  AOI22X1 U76 ( .A0(A1[9]), .A1(n4), .B0(A2[9]), .B1(n9), .Y(n71) );
  AOI22X1 U77 ( .A0(A1[10]), .A1(n4), .B0(A2[10]), .B1(n9), .Y(n135) );
  AOI22X1 U78 ( .A0(A1[11]), .A1(n4), .B0(A2[11]), .B1(n9), .Y(n131) );
  AOI22X1 U79 ( .A0(A1[7]), .A1(n4), .B0(A2[7]), .B1(n9), .Y(n87) );
  AOI22X1 U80 ( .A0(A1[8]), .A1(n4), .B0(A2[8]), .B1(n9), .Y(n83) );
  AOI22X1 U81 ( .A0(A1[6]), .A1(n4), .B0(A2[6]), .B1(n9), .Y(n91) );
  NAND4X1 U82 ( .A(n124), .B(n125), .C(n126), .D(n127), .Y(mux_tc_out[12]) );
  AOI22X1 U83 ( .A0(B2[12]), .A1(n6), .B0(B1[12]), .B1(n11), .Y(n124) );
  AOI22X1 U84 ( .A0(B4[12]), .A1(n7), .B0(B3[12]), .B1(n8), .Y(n125) );
  AOI22X1 U85 ( .A0(B6[12]), .A1(n5), .B0(B5[12]), .B1(n10), .Y(n126) );
  NAND4X1 U86 ( .A(n120), .B(n121), .C(n122), .D(n123), .Y(mux_tc_out[13]) );
  AOI22X1 U87 ( .A0(B2[13]), .A1(n6), .B0(B1[13]), .B1(n11), .Y(n120) );
  AOI22X1 U88 ( .A0(B4[13]), .A1(n7), .B0(B3[13]), .B1(n8), .Y(n121) );
  AOI22X1 U89 ( .A0(B6[13]), .A1(n5), .B0(B5[13]), .B1(n10), .Y(n122) );
  NAND4X1 U90 ( .A(n116), .B(n117), .C(n118), .D(n119), .Y(mux_tc_out[14]) );
  AOI22X1 U91 ( .A0(B2[14]), .A1(n6), .B0(B1[14]), .B1(n11), .Y(n116) );
  AOI22X1 U92 ( .A0(B4[14]), .A1(n7), .B0(B3[14]), .B1(n8), .Y(n117) );
  AOI22X1 U93 ( .A0(B6[14]), .A1(n5), .B0(B5[14]), .B1(n10), .Y(n118) );
  AOI22X1 U94 ( .A0(A1[15]), .A1(n4), .B0(A2[15]), .B1(n9), .Y(n115) );
  AOI22X1 U95 ( .A0(A1[12]), .A1(n4), .B0(A2[12]), .B1(n9), .Y(n127) );
  AOI22X1 U96 ( .A0(A1[13]), .A1(n4), .B0(A2[13]), .B1(n9), .Y(n123) );
  AOI22X1 U97 ( .A0(A1[14]), .A1(n4), .B0(A2[14]), .B1(n9), .Y(n119) );
  NAND4X1 U98 ( .A(n180), .B(n181), .C(n182), .D(n183), .Y(mux_fl_out[0]) );
  AOI22X1 U99 ( .A0(DQ2[0]), .A1(n6), .B0(DQ1[0]), .B1(n11), .Y(n180) );
  AOI22X1 U100 ( .A0(DQ4[0]), .A1(n7), .B0(DQ3[0]), .B1(n8), .Y(n181) );
  AOI22X1 U101 ( .A0(SR1[4]), .A1(n4), .B0(SR2[4]), .B1(n9), .Y(n163) );
  AOI22X1 U102 ( .A0(DQ6[4]), .A1(n5), .B0(DQ5[4]), .B1(n10), .Y(n162) );
  AOI22X1 U103 ( .A0(SR1[0]), .A1(n4), .B0(SR2[0]), .B1(n9), .Y(n183) );
  AOI22X1 U104 ( .A0(SR1[1]), .A1(n4), .B0(SR2[1]), .B1(n9), .Y(n175) );
  AOI22X1 U105 ( .A0(SR1[2]), .A1(n4), .B0(SR2[2]), .B1(n9), .Y(n171) );
  AOI22X1 U106 ( .A0(SR1[10]), .A1(n4), .B0(SR2[10]), .B1(n9), .Y(n179) );
  AOI22X1 U107 ( .A0(SR1[3]), .A1(n4), .B0(SR2[3]), .B1(n9), .Y(n167) );
  AOI22X1 U108 ( .A0(DQ4[1]), .A1(n7), .B0(DQ3[1]), .B1(n8), .Y(n173) );
  AOI22X1 U109 ( .A0(DQ4[2]), .A1(n7), .B0(DQ3[2]), .B1(n8), .Y(n169) );
  AOI22X1 U110 ( .A0(DQ4[10]), .A1(n7), .B0(DQ3[10]), .B1(n8), .Y(n177) );
  AOI22X1 U111 ( .A0(DQ4[3]), .A1(n7), .B0(DQ3[3]), .B1(n8), .Y(n165) );
  AOI22X1 U112 ( .A0(DQ4[4]), .A1(n7), .B0(DQ3[4]), .B1(n8), .Y(n161) );
  AOI22X1 U113 ( .A0(DQ2[1]), .A1(n6), .B0(DQ1[1]), .B1(n11), .Y(n172) );
  AOI22X1 U114 ( .A0(DQ6[0]), .A1(n5), .B0(DQ5[0]), .B1(n10), .Y(n182) );
  AOI22X1 U115 ( .A0(DQ6[1]), .A1(n5), .B0(DQ5[1]), .B1(n10), .Y(n174) );
  AOI22X1 U116 ( .A0(DQ6[2]), .A1(n5), .B0(DQ5[2]), .B1(n10), .Y(n170) );
  AOI22X1 U117 ( .A0(DQ6[3]), .A1(n5), .B0(DQ5[3]), .B1(n10), .Y(n166) );
  NAND4X1 U118 ( .A(n176), .B(n177), .C(n178), .D(n179), .Y(mux_fl_out[10]) );
  AOI22X1 U119 ( .A0(DQ2[10]), .A1(n6), .B0(DQ1[10]), .B1(n11), .Y(n176) );
  AOI22X1 U120 ( .A0(DQ6[10]), .A1(n5), .B0(DQ5[10]), .B1(n10), .Y(n178) );
  NAND4X1 U121 ( .A(n156), .B(n157), .C(n158), .D(n159), .Y(mux_fl_out[5]) );
  AOI22X1 U122 ( .A0(DQ2[5]), .A1(n6), .B0(DQ1[5]), .B1(n11), .Y(n156) );
  NAND4X1 U123 ( .A(n168), .B(n169), .C(n170), .D(n171), .Y(mux_fl_out[2]) );
  AOI22X1 U124 ( .A0(DQ2[2]), .A1(n6), .B0(DQ1[2]), .B1(n11), .Y(n168) );
  NAND4X1 U125 ( .A(n164), .B(n165), .C(n166), .D(n167), .Y(mux_fl_out[3]) );
  AOI22X1 U126 ( .A0(DQ2[3]), .A1(n6), .B0(DQ1[3]), .B1(n11), .Y(n164) );
  NAND4X1 U127 ( .A(n160), .B(n161), .C(n162), .D(n163), .Y(mux_fl_out[4]) );
  AOI22X1 U128 ( .A0(DQ2[4]), .A1(n6), .B0(DQ1[4]), .B1(n11), .Y(n160) );
  NAND4X1 U129 ( .A(n172), .B(n173), .C(n174), .D(n175), .Y(mux_fl_out[1]) );
  NOR4X1 U130 ( .A(count[4]), .B(count[7]), .C(count[6]), .D(count[5]), .Y(
        n189) );
  INVX1 U131 ( .A(count[1]), .Y(n35) );
  INVX1 U132 ( .A(count[3]), .Y(n33) );
  INVX1 U133 ( .A(count[0]), .Y(n30) );
  INVX1 U134 ( .A(count[2]), .Y(n34) );
  AOI22X1 U135 ( .A0(SR1[5]), .A1(n4), .B0(SR2[5]), .B1(n9), .Y(n159) );
  AOI22X1 U136 ( .A0(SR1[6]), .A1(n4), .B0(SR2[6]), .B1(n9), .Y(n155) );
  AOI22X1 U137 ( .A0(SR1[7]), .A1(n4), .B0(SR2[7]), .B1(n9), .Y(n151) );
  AOI22X1 U138 ( .A0(SR1[8]), .A1(n4), .B0(SR2[8]), .B1(n9), .Y(n147) );
  AOI22X1 U139 ( .A0(SR1[9]), .A1(n4), .B0(SR2[9]), .B1(n9), .Y(n143) );
  AOI22X1 U140 ( .A0(DQ6[5]), .A1(n5), .B0(DQ5[5]), .B1(n10), .Y(n158) );
  AOI22X1 U141 ( .A0(DQ6[6]), .A1(n5), .B0(DQ5[6]), .B1(n10), .Y(n154) );
  AOI22X1 U142 ( .A0(DQ6[7]), .A1(n5), .B0(DQ5[7]), .B1(n10), .Y(n150) );
  AOI22X1 U143 ( .A0(DQ6[8]), .A1(n5), .B0(DQ5[8]), .B1(n10), .Y(n146) );
  AOI22X1 U144 ( .A0(DQ6[9]), .A1(n5), .B0(DQ5[9]), .B1(n10), .Y(n142) );
  AOI22X1 U145 ( .A0(DQ4[5]), .A1(n7), .B0(DQ3[5]), .B1(n8), .Y(n157) );
  AOI22X1 U146 ( .A0(DQ4[6]), .A1(n7), .B0(DQ3[6]), .B1(n8), .Y(n153) );
  AOI22X1 U147 ( .A0(DQ4[7]), .A1(n7), .B0(DQ3[7]), .B1(n8), .Y(n149) );
  AOI22X1 U148 ( .A0(DQ4[8]), .A1(n7), .B0(DQ3[8]), .B1(n8), .Y(n145) );
  NOR3X1 U149 ( .A(n185), .B(count[3]), .C(n29), .Y(N106) );
  NOR3BX1 U150 ( .AN(count[4]), .B(n66), .C(n67), .Y(n188) );
  NAND3BX1 U151 ( .AN(count[7]), .B(count[6]), .C(count[5]), .Y(n66) );
  OAI31X1 U152 ( .A0(n20), .A1(count[6]), .A2(count[5]), .B0(count[7]), .Y(N83) );
  NOR2X1 U153 ( .A(n64), .B(n65), .Y(n187) );
  NAND4X1 U154 ( .A(count[7]), .B(count[4]), .C(n30), .D(n35), .Y(n65) );
  NAND4X1 U155 ( .A(n140), .B(n141), .C(n142), .D(n143), .Y(mux_fl_out[9]) );
  AOI22X1 U156 ( .A0(DQ2[9]), .A1(n6), .B0(DQ1[9]), .B1(n11), .Y(n140) );
  AOI22X1 U157 ( .A0(DQ4[9]), .A1(n7), .B0(DQ3[9]), .B1(n8), .Y(n141) );
  INVX1 U158 ( .A(n59), .Y(n26) );
  AOI22X1 U159 ( .A0(n12), .A1(count[3]), .B0(N88), .B1(N83), .Y(n59) );
  INVX1 U160 ( .A(n57), .Y(n24) );
  AOI22X1 U161 ( .A0(n12), .A1(count[5]), .B0(N90), .B1(N83), .Y(n57) );
  INVX1 U162 ( .A(n56), .Y(n23) );
  AOI22X1 U163 ( .A0(n12), .A1(count[6]), .B0(N91), .B1(N83), .Y(n56) );
  INVX1 U164 ( .A(n58), .Y(n25) );
  AOI22X1 U165 ( .A0(n12), .A1(count[4]), .B0(N89), .B1(N83), .Y(n58) );
  INVX1 U166 ( .A(n60), .Y(n27) );
  AOI22X1 U167 ( .A0(n12), .A1(count[2]), .B0(N87), .B1(N83), .Y(n60) );
  INVX1 U168 ( .A(n62), .Y(n22) );
  AOI22X1 U169 ( .A0(n12), .A1(count[7]), .B0(N92), .B1(N83), .Y(n62) );
  INVX1 U170 ( .A(n61), .Y(n28) );
  AOI22X1 U171 ( .A0(n12), .A1(count[1]), .B0(N86), .B1(N83), .Y(n61) );
  INVX1 U172 ( .A(n63), .Y(n21) );
  AOI22X1 U173 ( .A0(n12), .A1(count[0]), .B0(N85), .B1(N83), .Y(n63) );
  NAND4X1 U174 ( .A(n152), .B(n153), .C(n154), .D(n155), .Y(mux_fl_out[6]) );
  AOI22X1 U175 ( .A0(DQ2[6]), .A1(n6), .B0(DQ1[6]), .B1(n11), .Y(n152) );
  NAND4X1 U176 ( .A(n148), .B(n149), .C(n150), .D(n151), .Y(mux_fl_out[7]) );
  AOI22X1 U177 ( .A0(DQ2[7]), .A1(n6), .B0(DQ1[7]), .B1(n11), .Y(n148) );
  NAND4X1 U178 ( .A(n144), .B(n145), .C(n146), .D(n147), .Y(mux_fl_out[8]) );
  AOI22X1 U179 ( .A0(DQ2[8]), .A1(n6), .B0(DQ1[8]), .B1(n11), .Y(n144) );
  NOR4BX1 U180 ( .AN(count[0]), .B(count[3]), .C(count[2]), .D(count[1]), .Y(
        n190) );
  NAND2X1 U181 ( .A(test_mode), .B(clk), .Y(n184) );
  AOI22X1 U182 ( .A0(B6[0]), .A1(n5), .B0(B5[0]), .B1(n10), .Y(n138) );
  AOI22X1 U183 ( .A0(B4[0]), .A1(n7), .B0(B3[0]), .B1(n8), .Y(n137) );
  AOI22X1 U184 ( .A0(B2[0]), .A1(n6), .B0(B1[0]), .B1(n11), .Y(n136) );
  AOI22X1 U185 ( .A0(A1[0]), .A1(n4), .B0(A2[0]), .B1(n9), .Y(n139) );
  AOI22X1 U186 ( .A0(A1[1]), .A1(n4), .B0(A2[1]), .B1(n9), .Y(n111) );
  AOI22X1 U187 ( .A0(B6[1]), .A1(n5), .B0(B5[1]), .B1(n10), .Y(n110) );
  AOI22X1 U188 ( .A0(B4[1]), .A1(n7), .B0(B3[1]), .B1(n8), .Y(n109) );
  AOI22X1 U189 ( .A0(B2[1]), .A1(n6), .B0(B1[1]), .B1(n11), .Y(n108) );
  OAI2BB1X1 U190 ( .A0N(clk), .A1N(SHIFT_MANT_int), .B0(n184), .Y(SHIFT_MANT)
         );
  OAI2BB1X1 U191 ( .A0N(SHIFT_EXP_int), .A1N(clk), .B0(n184), .Y(SHIFT_EXP) );
  SEDFFXL SHIFT_MANT_int_reg ( .D(N109), .SI(SHIFT_EXP_int), .E(n19), .SE(
        test_se), .CK(clk), .Q(SHIFT_MANT_int) );
  SEDFFXL LD_SEZI_reg ( .D(n188), .SI(n39), .E(n19), .SE(test_se), .CK(clk), 
        .Q(n40), .QN(n2) );
  SEDFFXL LD_SEI_reg ( .D(n187), .SI(n17), .E(n19), .SE(test_se), .CK(clk), 
        .Q(n39), .QN(n1) );
  SEDFFXL SHIFT_EXP_int_reg ( .D(N106), .SI(n40), .E(n19), .SE(test_se), .CK(
        clk), .Q(SHIFT_EXP_int) );
  SEDFFXL CLR_ACCUM_reg ( .D(n189), .SI(n14), .E(n19), .SE(test_se), .CK(clk), 
        .Q(CLR_ACCUM), .QN(n37) );
  SEDFFXL CLR_CARRY_reg ( .D(N125), .SI(n37), .E(n19), .SE(test_se), .CK(clk), 
        .Q(CLR_CARRY), .QN(n36) );
  SDFFRHQXL done_reg ( .D(n12), .SI(count[7]), .SE(test_se), .CK(clk), .RN(n19), .Q(done) );
  SEDFFXL LD_OUT_SR_int_reg ( .D(N125), .SI(n18), .E(n19), .SE(test_se), .CK(
        clk), .Q(LD_OUT_SR), .QN(n17) );
  SDFFRHQXL count_reg_0_ ( .D(n21), .SI(SHIFT_MANT_int), .SE(test_se), .CK(clk), .RN(n19), .Q(count[0]) );
  SDFFRHQXL count_reg_7_ ( .D(n22), .SI(count[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[7]) );
  SDFFRHQXL count_reg_1_ ( .D(n28), .SI(n30), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[1]) );
  SDFFRHQXL count_reg_2_ ( .D(n27), .SI(n35), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[2]) );
  SDFFRHQXL count_reg_4_ ( .D(n25), .SI(n33), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[4]) );
  SDFFRHQXL count_reg_6_ ( .D(n23), .SI(count[5]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[6]) );
  SDFFRHQXL count_reg_5_ ( .D(n24), .SI(count[4]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[5]) );
  SDFFRHQXL count_reg_3_ ( .D(n26), .SI(n34), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[3]) );
  SDFFRHQXL mux_sel_reg_0_ ( .D(count[4]), .SI(done), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[0]) );
  SDFFRHQXL mux_sel_reg_1_ ( .D(count[5]), .SI(n32), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[1]) );
  SDFFRHQXL mux_sel_reg_2_ ( .D(count[6]), .SI(n31), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[2]) );
  SEDFFX1 INIT_SR_int_reg ( .D(n190), .SI(n13), .E(n19), .SE(test_se), .CK(clk), .Q(INIT_SR), .QN(n18) );
  FMULT_1_test_1 FMULT_BS ( .clk(clk), .reset(reset), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .An(mux_tc_out), .SRn(mux_fl_out), .WAn(WAn), 
        .SHIFT_EXP(SHIFT_EXP), .SHIFT_MANT(SHIFT_MANT), .INIT_SR(INIT_SR), 
        .LD_OUT_SR(LD_OUT_SR), .test_si(n36), .test_so(n13), .test_se(test_se)
         );
  ACCUM_1_test_1 ACCUM_BS ( .a(WAn[0]), .clk(clk), .sei_en(LD_SEI_w), 
        .sezi_en(LD_SEZI_w), .m1_sel(CLR_CARRY), .m2_sel(CLR_ACCUM), .sei(SE), 
        .sezi(SEZ), .reset(reset), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_mode(
        test_mode), .scan_enable(1'b0), .test_si(test_si), .test_so(n14), 
        .test_se(test_se) );
  FMULT_ACCUM_1_DW01_inc_0 add_181 ( .A(count), .SUM({N92, N91, N90, N89, N88, 
        N87, N86, N85}) );
  AOI31X1 U1 ( .A0(n33), .A1(n34), .A2(n35), .B0(n3), .Y(n20) );
  INVX1 U2 ( .A(count[4]), .Y(n3) );
endmodule


module ADAP_PRED_REC_SIG_1_test_1 ( DQ, RATE, clk, dly_strb, reset, TR, 
        start_trig, SE, A2, SR, done, test_mode, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si2, test_si1, test_so2, 
        test_so1, test_se );
  input [15:0] DQ;
  input [1:0] RATE;
  output [14:0] SE;
  output [15:0] A2;
  output [15:0] SR;
  input clk, dly_strb, reset, TR, start_trig, test_mode, scan_enable, scan_in0,
         scan_in1, scan_in2, scan_in3, scan_in4, test_si2, test_si1, test_se;
  output done, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so2,
         test_so1;
  wire   PK0, SIGPK, PK1, PK2, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n17, n18, n19, n20, n22, n23;
  wire   [14:0] SEZ;
  wire   [10:0] SR0;
  wire   [10:0] SR1;
  wire   [10:0] DQ0;
  wire   [10:0] DQ1;
  wire   [15:0] B1;
  wire   [10:0] DQ2;
  wire   [15:0] B2;
  wire   [10:0] DQ3;
  wire   [15:0] B3;
  wire   [10:0] DQ4;
  wire   [15:0] B4;
  wire   [10:0] DQ5;
  wire   [15:0] B5;
  wire   [10:0] DQ6;
  wire   [15:0] B6;
  wire   [10:0] SR2;
  wire   [15:0] A1;
  wire   [15:0] A2_int;
  wire   [15:0] A2T;
  wire   [15:0] A2R_int;
  wire   [15:0] A1T;
  wire   [15:0] A1P;
  wire   [15:0] A1R;

  BUFX12 U1 ( .A(DQ[2]), .Y(n5) );
  INVX8 U2 ( .A(n1), .Y(n2) );
  CLKINVX4 U3 ( .A(DQ[6]), .Y(n1) );
  BUFX12 U4 ( .A(DQ[0]), .Y(n3) );
  BUFX3 U5 ( .A(DQ[12]), .Y(n12) );
  BUFX3 U6 ( .A(DQ[7]), .Y(n7) );
  BUFX3 U7 ( .A(DQ[14]), .Y(n14) );
  BUFX3 U8 ( .A(DQ[13]), .Y(n13) );
  BUFX3 U9 ( .A(DQ[11]), .Y(n11) );
  BUFX3 U10 ( .A(DQ[10]), .Y(n10) );
  BUFX3 U11 ( .A(DQ[8]), .Y(n8) );
  BUFX3 U12 ( .A(DQ[9]), .Y(n9) );
  BUFX16 U13 ( .A(DQ[1]), .Y(n4) );
  BUFX12 U14 ( .A(DQ[5]), .Y(n6) );
  BUFX3 U15 ( .A(TR), .Y(n15) );
  ADDC_1 addc1 ( .DQ({DQ[15], n14, n13, n12, n11, n10, n9, n8, n7, n2, n6, 
        DQ[4:3], n5, n4, n3}), .SEZ(SEZ), .PK0(PK0), .SIGPK(SIGPK) );
  DELAY_RESET_STATE0_WIDTH1_3_test_1 delay1 ( .x(PK0), .reset(reset), .y(PK1), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si1), 
        .test_se(test_se) );
  DELAY_RESET_STATE0_WIDTH1_2_test_1 delay2 ( .x(PK1), .reset(reset), .y(PK2), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_se(test_se)
         );
  ADDB_1 addb1 ( .DQ({DQ[15], n14, n13, n12, n11, n10, n9, n8, n7, n2, n6, 
        DQ[4:3], n5, n4, n3}), .SE(SE), .SR(SR) );
  FLOATB_1 floatb1 ( .SR(SR), .SR0(SR0) );
  DELAY_020_11_15_test_1 delay3 ( .x(SR0), .reset(reset), .y(SR1), .clk(
        dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(PK2), 
        .test_se(test_se) );
  FLOATA_1 floata1 ( .DQ({DQ[15], n14, n13, n12, n11, n10, n9, n8, n7, n2, n6, 
        DQ[4:3], n5, n4, n3}), .DQ0(DQ0) );
  DELAYPREDIC_11_test_1 delaypredic1 ( .DQN(DQ0), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ1), .B(B1), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si(A1[15]), .test_so(n23), .test_se(
        test_se) );
  DELAYPREDIC_10_test_1 delaypredic2 ( .DQN(DQ1), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ2), .B(B2), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si(n23), .test_so(n22), .test_se(test_se) );
  DELAYPREDIC_9_test_1 delaypredic3 ( .DQN(DQ2), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ3), .B(B3), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si2(test_si2), .test_si1(n22), 
        .test_so2(n20), .test_so1(test_so1), .test_se(test_se) );
  DELAYPREDIC_8_test_1 delaypredic4 ( .DQN(DQ3), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ4), .B(B4), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si(n20), .test_so(n19), .test_se(test_se) );
  DELAYPREDIC_7_test_1 delaypredic5 ( .DQN(DQ4), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ5), .B(B5), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si(n19), .test_so(n18), .test_se(test_se) );
  DELAYPREDIC_6_test_1 delaypredic6 ( .DQN(DQ5), .DQ({DQ[15], n14, n13, n12, 
        n11, n10, n9, n8, n7, n2, n6, DQ[4:3], n5, n4, n3}), .RATE(RATE), .TR(
        n15), .reset(reset), .clk(dly_strb), .DQN1(DQ6), .B(B6), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .test_si(n18), .test_so(n17), .test_se(test_se) );
  DELAY_020_11_14_test_1 delay4 ( .x(SR1), .reset(reset), .y(SR2), .clk(
        dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_se(test_se)
         );
  UPA2_1 upa21 ( .PK0(PK0), .PK1(PK1), .PK2(PK2), .A1(A1), .A2(A2_int), 
        .SIGPK(SIGPK), .A2T(A2T) );
  LIMC_1 limc1 ( .A2T(A2T), .A2P(A2) );
  TRIGB_WIDTH16_15 trigb1 ( .TR(n15), .nP(A2), .nR(A2R_int) );
  DELAY_RESET_STATE0_WIDTH16_15_test_1 delay5 ( .x(A2R_int), .reset(reset), 
        .y(A2_int), .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si(SR2[10]), .test_se(test_se) );
  UPA1_1 upa11 ( .PK0(PK0), .PK1(PK1), .A1(A1), .SIGPK(SIGPK), .A1T(A1T) );
  LIMD_1 limd1 ( .A1T(A1T), .A2P(A2), .A1P(A1P) );
  TRIGB_WIDTH16_14 trigb2 ( .TR(n15), .nP(A1P), .nR(A1R) );
  DELAY_RESET_STATE0_WIDTH16_14_test_1 delay6 ( .x(A1R), .reset(reset), .y(A1), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(A2_int[15]), .test_se(test_se) );
  FMULT_ACCUM_1_test_1 fmultaccum1 ( .reset(reset), .clk(clk), .start(
        start_trig), .done(done), .A1(A1), .A2(A2_int), .B1(B1), .B2(B2), .B3(
        B3), .B4(B4), .B5(B5), .B6(B6), .SR1(SR1), .SR2(SR2), .DQ1(DQ1), .DQ2(
        DQ2), .DQ3(DQ3), .DQ4(DQ4), .DQ5(DQ5), .DQ6(DQ6), .SE(SE), .SEZ(SEZ), 
        .test_mode(test_mode), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(n17), .test_so(test_so2), .test_se(test_se) );
endmodule


module FUNCTW_1 ( I, RATE, WI );
  input [4:0] I;
  input [1:0] RATE;
  output [11:0] WI;
  wire   n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68,
         n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82,
         n83, n84, n85, n86, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
         n13, n14, n15, n16, n17, n18, n19, n20, n21;

  AND2X2 U38 ( .A(n79), .B(n20), .Y(n60) );
  DLY1X1 U3 ( .A(I[2]), .Y(n4) );
  OAI31X1 U4 ( .A0(n34), .A1(n29), .A2(n67), .B0(n68), .Y(n36) );
  INVX1 U5 ( .A(n34), .Y(n17) );
  AOI211X1 U6 ( .A0(n6), .A1(n15), .B0(n21), .C0(n32), .Y(n31) );
  NAND2BX1 U7 ( .AN(n34), .B(n86), .Y(n30) );
  XOR2X1 U8 ( .A(n86), .B(n29), .Y(n80) );
  NAND3XL U9 ( .A(n11), .B(n1), .C(n17), .Y(n28) );
  INVX2 U10 ( .A(n29), .Y(n1) );
  AOI221X1 U11 ( .A0(n12), .A1(n14), .B0(n20), .B1(n15), .C0(n55), .Y(n54) );
  AOI31X1 U12 ( .A0(n18), .A1(n15), .A2(n44), .B0(n13), .Y(n64) );
  AOI21XL U13 ( .A0(n44), .A1(n45), .B0(n10), .Y(n43) );
  INVXL U14 ( .A(n46), .Y(n10) );
  NAND3XL U15 ( .A(n14), .B(n80), .C(n73), .Y(n84) );
  AOI221X1 U16 ( .A0(n21), .A1(n82), .B0(n18), .B1(n60), .C0(n61), .Y(n59) );
  NOR2X1 U17 ( .A(n14), .B(n86), .Y(n63) );
  CLKINVX3 U18 ( .A(n67), .Y(n14) );
  AOI222X1 U19 ( .A0(n15), .A1(n44), .B0(n17), .B1(n63), .C0(n12), .C1(n29), 
        .Y(n85) );
  INVX1 U20 ( .A(n45), .Y(n15) );
  AOI211XL U21 ( .A0(n60), .A1(n45), .B0(n70), .C0(n55), .Y(n76) );
  OAI31X2 U22 ( .A0(n16), .A1(n1), .A2(n11), .B0(n47), .Y(n70) );
  XNOR2X1 U23 ( .A(n3), .B(I[4]), .Y(n67) );
  NAND3XL U24 ( .A(n73), .B(n1), .C(n63), .Y(n75) );
  NAND4X1 U25 ( .A(n18), .B(n20), .C(n79), .D(n15), .Y(n83) );
  DLY1X1 U26 ( .A(I[0]), .Y(n3) );
  OAI211X1 U27 ( .A0(n14), .A1(n56), .B0(n1), .C0(n57), .Y(n53) );
  NAND4X1 U28 ( .A(n68), .B(n62), .C(n84), .D(n85), .Y(WI[0]) );
  INVX1 U29 ( .A(n1), .Y(n2) );
  INVX1 U30 ( .A(n33), .Y(n9) );
  NAND2X1 U31 ( .A(n57), .B(n81), .Y(n34) );
  INVX1 U32 ( .A(n86), .Y(n11) );
  INVX1 U33 ( .A(n72), .Y(n18) );
  NOR2XL U34 ( .A(n19), .B(n81), .Y(n73) );
  INVXL U35 ( .A(n71), .Y(n8) );
  NOR2X1 U36 ( .A(n50), .B(n79), .Y(n44) );
  XOR2XL U37 ( .A(I[1]), .B(n4), .Y(n48) );
  XNOR2XL U39 ( .A(n3), .B(n4), .Y(n77) );
  NAND3XL U40 ( .A(n17), .B(n80), .C(n67), .Y(n46) );
  OAI32XL U41 ( .A0(n14), .A1(n19), .A2(n1), .B0(n9), .B1(n16), .Y(n66) );
  AOI21XL U42 ( .A0(n15), .A1(n60), .B0(n13), .Y(n51) );
  NAND2XL U43 ( .A(n11), .B(n81), .Y(n56) );
  NAND3XL U44 ( .A(n45), .B(n72), .C(n60), .Y(n40) );
  INVXL U45 ( .A(n35), .Y(n6) );
  AOI22XL U46 ( .A0(n63), .A1(n57), .B0(n17), .B1(n14), .Y(n58) );
  NOR2XL U47 ( .A(n48), .B(n47), .Y(n61) );
  NAND4XL U48 ( .A(n2), .B(n57), .C(n14), .D(n56), .Y(n74) );
  NAND2XL U49 ( .A(n8), .B(n42), .Y(WI[11]) );
  NAND3XL U50 ( .A(n27), .B(n7), .C(n28), .Y(WI[9]) );
  OAI211XL U51 ( .A0(n29), .A1(n30), .B0(n8), .C0(n31), .Y(WI[8]) );
  NOR3XL U52 ( .A(n33), .B(n34), .C(n1), .Y(n32) );
  NAND3BXL U53 ( .AN(n48), .B(n77), .C(n78), .Y(n52) );
  NAND3XL U54 ( .A(n78), .B(n48), .C(n77), .Y(n68) );
  NAND2XL U55 ( .A(n39), .B(n40), .Y(n38) );
  OR2XL U56 ( .A(n82), .B(n39), .Y(n42) );
  AOI31XL U57 ( .A0(n17), .A1(n33), .A2(n2), .B0(n38), .Y(n37) );
  AOI211XL U58 ( .A0(n67), .A1(n12), .B0(n70), .C0(n71), .Y(n69) );
  AOI211XL U59 ( .A0(n9), .A1(n17), .B0(n66), .C0(n36), .Y(n65) );
  NAND4XL U60 ( .A(n52), .B(n49), .C(n53), .D(n54), .Y(WI[5]) );
  INVX1 U61 ( .A(n30), .Y(n12) );
  INVX1 U62 ( .A(n73), .Y(n16) );
  NAND2X1 U63 ( .A(n14), .B(n11), .Y(n33) );
  NAND2X1 U64 ( .A(n73), .B(n9), .Y(n49) );
  XOR2X1 U65 ( .A(n3), .B(I[1]), .Y(n82) );
  XNOR2X1 U66 ( .A(I[1]), .B(I[3]), .Y(n79) );
  INVX1 U67 ( .A(WI[11]), .Y(n7) );
  NAND2X1 U68 ( .A(n44), .B(n72), .Y(n35) );
  NAND2X1 U69 ( .A(n52), .B(n83), .Y(n71) );
  XNOR2XL U70 ( .A(n4), .B(I[4]), .Y(n29) );
  NAND2X1 U71 ( .A(n21), .B(n82), .Y(n62) );
  XNOR2X1 U72 ( .A(I[1]), .B(I[4]), .Y(n86) );
  INVX1 U73 ( .A(n52), .Y(n13) );
  NAND2BX1 U74 ( .AN(n47), .B(n48), .Y(n27) );
  INVX1 U75 ( .A(n57), .Y(n19) );
  NAND2X1 U76 ( .A(n39), .B(n35), .Y(n55) );
  OAI21XL U77 ( .A0(n15), .A1(n35), .B0(n7), .Y(WI[10]) );
  OAI221XL U78 ( .A0(n49), .A1(n2), .B0(n50), .B1(n18), .C0(n51), .Y(n41) );
  NAND2BX1 U79 ( .AN(n77), .B(n78), .Y(n47) );
  NOR3X1 U80 ( .A(n78), .B(n20), .C(n21), .Y(n57) );
  INVX1 U81 ( .A(n50), .Y(n20) );
  INVX1 U82 ( .A(n39), .Y(n21) );
  NAND4X1 U83 ( .A(n74), .B(n46), .C(n75), .D(n76), .Y(WI[1]) );
  NAND4X1 U84 ( .A(n49), .B(n40), .C(n62), .D(n69), .Y(WI[2]) );
  NAND4BXL U85 ( .AN(n61), .B(n42), .C(n64), .D(n65), .Y(WI[3]) );
  NAND3X1 U86 ( .A(n58), .B(n51), .C(n59), .Y(WI[4]) );
  NAND4BXL U87 ( .AN(n41), .B(n42), .C(n27), .D(n43), .Y(WI[6]) );
  NAND3BX1 U88 ( .AN(n36), .B(n8), .C(n37), .Y(WI[7]) );
  NOR2X1 U89 ( .A(n5), .B(RATE[0]), .Y(n78) );
  NAND2X1 U90 ( .A(RATE[0]), .B(n5), .Y(n50) );
  NAND2X1 U91 ( .A(RATE[0]), .B(RATE[1]), .Y(n39) );
  INVX1 U92 ( .A(RATE[1]), .Y(n5) );
  XOR2XL U93 ( .A(n4), .B(I[3]), .Y(n72) );
  XOR2XL U94 ( .A(n3), .B(I[3]), .Y(n45) );
  XOR2XL U95 ( .A(I[3]), .B(I[4]), .Y(n81) );
endmodule


module FILTD_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [12:2] carry;

  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X2 U1_12 ( .A(A[12]), .B(B[12]), .C(carry[12]), .Y(SUM[12]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTD_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [17:0] A;
  input [17:0] B;
  output [17:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [16:7] carry;

  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(n1), .CO(carry[7]), .S(SUM[6]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  XOR3X2 U1_16 ( .A(A[16]), .B(B[16]), .C(carry[16]), .Y(SUM[16]) );
  ADDFX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX1 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX1 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AND2X2 U1 ( .A(B[5]), .B(A[5]), .Y(n1) );
  XOR2XL U2 ( .A(B[5]), .B(A[5]), .Y(SUM[5]) );
endmodule


module FILTD_1 ( WI, Y, YUT );
  input [11:0] WI;
  input [12:0] Y;
  output [12:0] YUT;
  wire   DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_,
         DIFSX_2_, DIFSX_1_, DIFSX_12_, DIFSX_10_, DIFSX_0_, N9, N8, N7, N6,
         N5, N17, N12, N11, N10, N0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3,
         SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5;
  wire   [12:5] sub_43_carry;
  assign N0 = Y[0];

  NOR2BX1 U3 ( .AN(sub_43_carry[6]), .B(Y[6]), .Y(sub_43_carry[7]) );
  OR2X2 U4 ( .A(n1), .B(Y[12]), .Y(n2) );
  INVX1 U5 ( .A(sub_43_carry[12]), .Y(n1) );
  INVX1 U6 ( .A(Y[7]), .Y(n6) );
  INVXL U7 ( .A(Y[5]), .Y(n4) );
  INVXL U8 ( .A(Y[9]), .Y(n8) );
  INVXL U9 ( .A(Y[6]), .Y(n5) );
  INVXL U10 ( .A(Y[11]), .Y(n10) );
  INVXL U11 ( .A(Y[10]), .Y(n9) );
  INVXL U12 ( .A(Y[8]), .Y(n7) );
  NOR4BXL U13 ( .AN(n3), .B(Y[1]), .C(N0), .D(Y[2]), .Y(sub_43_carry[5]) );
  NOR2XL U14 ( .A(Y[4]), .B(Y[3]), .Y(n3) );
  INVX1 U15 ( .A(n2), .Y(N17) );
  INVX1 U16 ( .A(Y[12]), .Y(n11) );
  XOR2X1 U17 ( .A(n11), .B(sub_43_carry[12]), .Y(N12) );
  AND2X1 U18 ( .A(sub_43_carry[11]), .B(n10), .Y(sub_43_carry[12]) );
  XOR2X1 U19 ( .A(n10), .B(sub_43_carry[11]), .Y(N11) );
  AND2X1 U20 ( .A(sub_43_carry[10]), .B(n9), .Y(sub_43_carry[11]) );
  XOR2X1 U21 ( .A(n9), .B(sub_43_carry[10]), .Y(N10) );
  AND2X1 U22 ( .A(sub_43_carry[9]), .B(n8), .Y(sub_43_carry[10]) );
  XOR2X1 U23 ( .A(n8), .B(sub_43_carry[9]), .Y(N9) );
  AND2X1 U24 ( .A(sub_43_carry[8]), .B(n7), .Y(sub_43_carry[9]) );
  XOR2X1 U25 ( .A(n7), .B(sub_43_carry[8]), .Y(N8) );
  AND2X1 U26 ( .A(sub_43_carry[7]), .B(n6), .Y(sub_43_carry[8]) );
  XOR2X1 U27 ( .A(n6), .B(sub_43_carry[7]), .Y(N7) );
  XOR2X1 U28 ( .A(n5), .B(sub_43_carry[6]), .Y(N6) );
  AND2X1 U29 ( .A(sub_43_carry[5]), .B(n4), .Y(sub_43_carry[6]) );
  XOR2X1 U30 ( .A(n4), .B(sub_43_carry[5]), .Y(N5) );
  FILTD_1_DW01_add_1 add_60 ( .A({Y[12:1], N0}), .B({DIFSX_12_, DIFSX_12_, 
        DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .CI(1'b0), .SUM(YUT) );
  FILTD_1_DW01_add_0 add_43 ( .A({1'b0, WI, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}), 
        .B({N17, n2, n2, n2, n2, N12, N11, N10, N9, N8, N7, N6, N5, 1'b0, 1'b0, 
        1'b0, 1'b0, N0}), .CI(1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, DIFSX_12_, 
        DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3, 
        SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5}) );
endmodule


module LIMB_1 ( YUP, YUT );
  output [12:0] YUP;
  input [12:0] YUT;
  wire   GEUL_13_, GELL_13_, n10, n1, n2, n3;

  AND2X2 U17 ( .A(YUT[1]), .B(n10), .Y(YUP[1]) );
  AOI211X2 U3 ( .A0(YUT[9]), .A1(n2), .B0(n1), .C0(YUT[10]), .Y(GELL_13_) );
  AND2X4 U4 ( .A(YUT[0]), .B(n10), .Y(YUP[0]) );
  AND2X2 U5 ( .A(YUT[2]), .B(n10), .Y(YUP[2]) );
  CLKINVXL U6 ( .A(GELL_13_), .Y(n3) );
  NOR2BX4 U7 ( .AN(GEUL_13_), .B(GELL_13_), .Y(n10) );
  OR4X2 U8 ( .A(YUT[6]), .B(YUT[5]), .C(YUT[8]), .D(YUT[7]), .Y(n2) );
  OR2X2 U9 ( .A(YUT[12]), .B(YUT[11]), .Y(n1) );
  AND2X1 U10 ( .A(YUT[6]), .B(n10), .Y(YUP[6]) );
  AND2X1 U11 ( .A(YUT[7]), .B(n10), .Y(YUP[7]) );
  AND2X1 U12 ( .A(YUT[3]), .B(n10), .Y(YUP[3]) );
  AND2X1 U13 ( .A(YUT[4]), .B(n10), .Y(YUP[4]) );
  OAI2BB2XL U14 ( .B0(GEUL_13_), .B1(GELL_13_), .A0N(YUT[10]), .A1N(n10), .Y(
        YUP[10]) );
  AND2X1 U15 ( .A(YUT[11]), .B(n10), .Y(YUP[11]) );
  AND2X1 U16 ( .A(YUT[8]), .B(n10), .Y(YUP[8]) );
  OAI2BB1X1 U18 ( .A0N(YUT[5]), .A1N(n10), .B0(n3), .Y(YUP[5]) );
  OAI2BB1X1 U19 ( .A0N(YUT[9]), .A1N(GEUL_13_), .B0(n3), .Y(YUP[9]) );
  OAI2BB2X1 U20 ( .B0(GEUL_13_), .B1(GELL_13_), .A0N(YUT[12]), .A1N(n10), .Y(
        YUP[12]) );
  OAI21XL U21 ( .A0(YUT[11]), .A1(YUT[10]), .B0(YUT[12]), .Y(GEUL_13_) );
endmodule


module DELAY_0220_13_1_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [12:0] x;
  output [12:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n17, n18, n19, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n21, n22;
  wire   [12:0] delay0;
  wire   [12:0] delay1;
  wire   [12:0] delay2;
  wire   [12:0] delay3;
  wire   [12:0] delay4;
  wire   [12:0] delay5;
  wire   [12:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n18) );
  INVX1 U4 ( .A(reset), .Y(n19) );
  INVX1 U6 ( .A(reset), .Y(n17) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n19), .Q(y[12]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n17), .Q(y[11]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n17), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n18), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(n4), .SE(test_se), .CK(clk), .RN(
        n18), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n3), .SE(test_se), .CK(clk), .RN(n17), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(n10), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(n16), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n9), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n11), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n15), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[12]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[12]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[12]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[12]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[12]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[12]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[0]) );
  SDFFSXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(clk), .SN(n18), .Q(delay6[9]), .QN(n16) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n18), .Q(delay6[5]), .QN(n15) );
  SDFFSXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(clk), .SN(n19), .Q(delay5[9]), .QN(n14) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n17), .Q(delay5[5]), .QN(n13) );
  SDFFSXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(clk), .SN(n17), .Q(delay4[9]), .QN(n12) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n18), .Q(delay4[5]), .QN(n11) );
  SDFFSXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(clk), .SN(n19), .Q(delay3[9]), .QN(n10) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n19), .Q(delay3[5]), .QN(n9) );
  SDFFSXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(clk), .SN(n17), .Q(delay2[9]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n19), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(clk), .SN(n18), .Q(delay1[9]), .QN(n6) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n18), .Q(delay1[5]), .QN(n5) );
  SDFFSXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .SN(n19), .Q(delay0[9]), .QN(n4) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n17), .Q(delay0[5]), .QN(n3) );
  SDFFRHQX2 delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[1]) );
  SDFFRHQX2 delay7_reg_6_ ( .D(delay6[6]), .SI(n21), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[6]) );
  SDFFRHQX1 delay7_reg_10_ ( .D(delay6[10]), .SI(n22), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[10]) );
  SDFFRHQX1 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[8]) );
  SDFFRHQX2 delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[7]) );
  SDFFRHQX2 delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[12]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(y[0]) );
  SDFFRHQX1 delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[2]) );
  SDFFRHQX1 delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[3]) );
  SDFFSX1 delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .SN(n17), .Q(y[9]), .QN(n22) );
  SDFFRHQX1 delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[4]) );
  SDFFSX1 delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n18), .Q(y[5]), .QN(n21) );
endmodule


module FILTE_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [13:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX1 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U3 ( .A(B[13]), .B(carry[13]), .Y(SUM[13]) );
endmodule


module FILTE_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [18:0] A;
  input [18:0] B;
  output [18:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [18:2] carry;

  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  XOR3X2 U1_18 ( .A(A[18]), .B(B[18]), .C(carry[18]), .Y(SUM[18]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTE_1 ( YUP, YL, YLP );
  input [12:0] YUP;
  input [18:0] YL;
  output [18:0] YLP;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N14, N13, N12, N11, N10, N1, N0,
         DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_,
         DIFSX_2_, DIFSX_1_, DIFSX_18_, DIFSX_12_, DIFSX_11_, DIFSX_10_,
         DIFSX_0_, n1, n2, n3, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1;
  wire   [18:6] sub_51_carry;

  INVX1 U4 ( .A(YL[7]), .Y(n3) );
  INVX1 U5 ( .A(YL[8]), .Y(n5) );
  INVX1 U7 ( .A(YL[9]), .Y(n6) );
  INVXL U9 ( .A(YL[10]), .Y(n7) );
  INVXL U10 ( .A(YL[18]), .Y(n15) );
  INVXL U11 ( .A(YL[17]), .Y(n14) );
  INVXL U12 ( .A(YL[16]), .Y(n13) );
  INVXL U13 ( .A(YL[14]), .Y(n11) );
  INVX1 U14 ( .A(N14), .Y(N13) );
  INVXL U16 ( .A(YL[15]), .Y(n12) );
  INVXL U17 ( .A(YL[13]), .Y(n10) );
  AND2X1 U18 ( .A(sub_51_carry[18]), .B(n15), .Y(N14) );
  XOR2X1 U19 ( .A(n15), .B(sub_51_carry[18]), .Y(N12) );
  AND2X1 U20 ( .A(sub_51_carry[17]), .B(n14), .Y(sub_51_carry[18]) );
  XOR2X1 U21 ( .A(n14), .B(sub_51_carry[17]), .Y(N11) );
  AND2X1 U22 ( .A(sub_51_carry[16]), .B(n13), .Y(sub_51_carry[17]) );
  XOR2X1 U23 ( .A(n13), .B(sub_51_carry[16]), .Y(N10) );
  AND2X1 U24 ( .A(sub_51_carry[15]), .B(n12), .Y(sub_51_carry[16]) );
  XOR2X1 U25 ( .A(n12), .B(sub_51_carry[15]), .Y(N9) );
  AND2X1 U26 ( .A(sub_51_carry[14]), .B(n11), .Y(sub_51_carry[15]) );
  XOR2X1 U27 ( .A(n11), .B(sub_51_carry[14]), .Y(N8) );
  AND2X1 U28 ( .A(sub_51_carry[13]), .B(n10), .Y(sub_51_carry[14]) );
  XOR2X1 U29 ( .A(n10), .B(sub_51_carry[13]), .Y(N7) );
  AND2X1 U30 ( .A(sub_51_carry[12]), .B(n9), .Y(sub_51_carry[13]) );
  XOR2X1 U31 ( .A(n9), .B(sub_51_carry[12]), .Y(N6) );
  AND2X1 U32 ( .A(sub_51_carry[11]), .B(n8), .Y(sub_51_carry[12]) );
  XOR2X1 U33 ( .A(n8), .B(sub_51_carry[11]), .Y(N5) );
  AND2X1 U34 ( .A(sub_51_carry[10]), .B(n7), .Y(sub_51_carry[11]) );
  XOR2X1 U35 ( .A(n7), .B(sub_51_carry[10]), .Y(N4) );
  AND2X1 U36 ( .A(sub_51_carry[9]), .B(n6), .Y(sub_51_carry[10]) );
  XOR2X1 U37 ( .A(n6), .B(sub_51_carry[9]), .Y(N3) );
  AND2X1 U38 ( .A(sub_51_carry[8]), .B(n5), .Y(sub_51_carry[9]) );
  XOR2X1 U39 ( .A(n5), .B(sub_51_carry[8]), .Y(N2) );
  AND2X1 U40 ( .A(sub_51_carry[7]), .B(n3), .Y(sub_51_carry[8]) );
  XOR2X1 U41 ( .A(n3), .B(sub_51_carry[7]), .Y(N1) );
  AND2X1 U42 ( .A(sub_51_carry[6]), .B(n2), .Y(sub_51_carry[7]) );
  XOR2X1 U43 ( .A(n2), .B(sub_51_carry[6]), .Y(N0) );
  NOR3X1 U44 ( .A(YL[3]), .B(YL[5]), .C(YL[4]), .Y(n1) );
  NOR4BX1 U45 ( .AN(n1), .B(YL[2]), .C(YL[0]), .D(YL[1]), .Y(sub_51_carry[6])
         );
  INVX1 U2 ( .A(YL[11]), .Y(n8) );
  FILTE_1_DW01_add_0 add_51 ( .A({1'b0, 1'b0, 1'b0, YUP}), .B({1'b0, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, DIFSX_18_, 
        DIFSX_12_, DIFSX_11_, DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, 
        DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_})
         );
  FILTE_1_DW01_add_1 add_56 ( .A(YL), .B({DIFSX_18_, DIFSX_18_, DIFSX_18_, 
        DIFSX_18_, DIFSX_18_, DIFSX_18_, DIFSX_12_, DIFSX_11_, DIFSX_10_, 
        DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, 
        DIFSX_2_, DIFSX_1_, DIFSX_0_}), .CI(1'b0), .SUM(YLP) );
  INVX1 U1 ( .A(YL[6]), .Y(n2) );
  INVX1 U3 ( .A(YL[12]), .Y(n9) );
endmodule


module DELAY_08800_19_1_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [18:0] x;
  output [18:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n22, n17, n18, n19, n20, n21, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n23;
  wire   [18:0] delay0;
  wire   [18:0] delay1;
  wire   [18:0] delay2;
  wire   [18:0] delay3;
  wire   [18:0] delay4;
  wire   [18:0] delay5;
  wire   [18:0] delay6;

  BUFX3 U3 ( .A(n22), .Y(y[13]) );
  INVX1 U4 ( .A(reset), .Y(n18) );
  INVX1 U5 ( .A(reset), .Y(n19) );
  INVX1 U6 ( .A(reset), .Y(n20) );
  INVX1 U7 ( .A(reset), .Y(n21) );
  INVX1 U8 ( .A(reset), .Y(n17) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[4]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[5]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[18]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(y[0]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n17), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(n3), .SE(test_se), .CK(clk), .RN(
        n18), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n21), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[0]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n21), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[18]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay1[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[18]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[18]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay6[0]) );
  SDFFRHQXL delay1_reg_18_ ( .D(delay0[18]), .SI(delay1[17]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay1[18]) );
  SDFFRHQXL delay2_reg_18_ ( .D(delay1[18]), .SI(delay2[17]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay2[18]) );
  SDFFRHQXL delay3_reg_18_ ( .D(delay2[18]), .SI(delay3[17]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay3[18]) );
  SDFFRHQXL delay4_reg_18_ ( .D(delay3[18]), .SI(delay4[17]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay4[18]) );
  SDFFRHQXL delay5_reg_18_ ( .D(delay4[18]), .SI(delay5[17]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay5[18]) );
  SDFFRHQXL delay6_reg_18_ ( .D(delay5[18]), .SI(delay6[17]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay6[18]) );
  SDFFRHQXL delay1_reg_17_ ( .D(delay0[17]), .SI(delay1[16]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay1[17]) );
  SDFFRHQXL delay2_reg_17_ ( .D(delay1[17]), .SI(delay2[16]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay2[17]) );
  SDFFRHQXL delay3_reg_17_ ( .D(delay2[17]), .SI(delay3[16]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay3[17]) );
  SDFFRHQXL delay4_reg_17_ ( .D(delay3[17]), .SI(delay4[16]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay4[17]) );
  SDFFRHQXL delay5_reg_17_ ( .D(delay4[17]), .SI(delay5[16]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay5[17]) );
  SDFFRHQXL delay6_reg_17_ ( .D(delay5[17]), .SI(delay6[16]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay6[17]) );
  SDFFRHQXL delay1_reg_16_ ( .D(delay0[16]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay1[16]) );
  SDFFRHQXL delay2_reg_16_ ( .D(delay1[16]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay2[16]) );
  SDFFRHQXL delay3_reg_16_ ( .D(delay2[16]), .SI(n9), .SE(test_se), .CK(clk), 
        .RN(n21), .Q(delay3[16]) );
  SDFFRHQXL delay4_reg_16_ ( .D(delay3[16]), .SI(n11), .SE(test_se), .CK(clk), 
        .RN(n21), .Q(delay4[16]) );
  SDFFRHQXL delay5_reg_16_ ( .D(delay4[16]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n21), .Q(delay5[16]) );
  SDFFRHQXL delay6_reg_16_ ( .D(delay5[16]), .SI(n15), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay6[16]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n21), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(n10), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n21), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n21), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n21), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n21), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[3]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[2]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay2[0]) );
  SDFFSXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), 
        .SN(n21), .Q(delay0[15]), .QN(n16) );
  SDFFRHQXL delay0_reg_18_ ( .D(x[18]), .SI(delay0[17]), .SE(test_se), .CK(clk), .RN(n20), .Q(delay0[18]) );
  SDFFRHQXL delay0_reg_17_ ( .D(x[17]), .SI(delay0[16]), .SE(test_se), .CK(clk), .RN(n17), .Q(delay0[17]) );
  SDFFRHQXL delay0_reg_16_ ( .D(x[16]), .SI(n16), .SE(test_se), .CK(clk), .RN(
        n18), .Q(delay0[16]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n17), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n21), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay0[1]) );
  SDFFSXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), .CK(
        clk), .SN(n20), .Q(delay6[15]), .QN(n15) );
  SDFFSXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .SN(n17), .Q(delay6[11]), .QN(n14) );
  SDFFSXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay5[15]), .QN(n13) );
  SDFFSXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .SN(n21), .Q(delay5[11]), .QN(n12) );
  SDFFSXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), .CK(
        clk), .SN(n19), .Q(delay4[15]), .QN(n11) );
  SDFFSXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .SN(n20), .Q(delay4[11]), .QN(n10) );
  SDFFSXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), .CK(
        clk), .SN(n17), .Q(delay3[15]), .QN(n9) );
  SDFFSXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay3[11]), .QN(n8) );
  SDFFSXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), .CK(
        clk), .SN(n21), .Q(delay2[15]), .QN(n7) );
  SDFFSXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .SN(n19), .Q(delay2[11]), .QN(n6) );
  SDFFSXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .SN(n20), .Q(delay1[11]), .QN(n5) );
  SDFFSXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), .CK(
        clk), .SN(n17), .Q(delay1[15]), .QN(n4) );
  SDFFSXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), 
        .SN(n18), .Q(delay0[11]), .QN(n3) );
  SDFFSHQX4 delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .SN(n20), .Q(y[15]) );
  SDFFRHQX4 delay7_reg_12_ ( .D(delay6[12]), .SI(n23), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[12]) );
  SDFFRHQX4 delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n21), .Q(n22) );
  SDFFRHQX4 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[8]) );
  SDFFRHQX4 delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[7]) );
  SDFFRHQX2 delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[10]) );
  SDFFRHQX2 delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[9]) );
  SDFFRHQX4 delay7_reg_16_ ( .D(delay6[16]), .SI(y[15]), .SE(test_se), .CK(clk), .RN(n19), .Q(y[16]) );
  SDFFRHQX1 delay7_reg_18_ ( .D(delay6[18]), .SI(y[17]), .SE(test_se), .CK(clk), .RN(n19), .Q(y[18]) );
  SDFFRHQX4 delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[6]) );
  SDFFRHQX2 delay7_reg_17_ ( .D(delay6[17]), .SI(y[16]), .SE(test_se), .CK(clk), .RN(n21), .Q(y[17]) );
  SDFFRHQX2 delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n21), .Q(y[14]) );
  SDFFSX2 delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), 
        .SN(n21), .Q(y[11]), .QN(n23) );
endmodule


module MIX_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [14:0] A;
  input [14:0] B;
  output [14:0] SUM;
  input CI;
  output CO;
  wire   n4, n5, n1, n2, n3;
  wire   [12:2] carry;

  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  XOR3X2 U1_12 ( .A(A[12]), .B(B[12]), .C(carry[12]), .Y(n4) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(n3), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(B[10]), .B(A[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(n5) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  BUFX4 U1 ( .A(n4), .Y(SUM[12]) );
  BUFX4 U3 ( .A(n5), .Y(SUM[8]) );
  XOR2XL U4 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X1 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  ADDFHX2 U5 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  INVX2 U6 ( .A(B[9]), .Y(n2) );
  CLKINVX3 U7 ( .A(n2), .Y(n3) );
  ADDFHX4 U8 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U9 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
endmodule


module MIX_1_DW_mult_uns_0 ( a, b, product );
  input [13:0] a;
  input [6:0] b;
  output [20:0] product;
  wire   n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37,
         n44, n45, n46, n47, n48, n50, n51, n52, n53, n54, n55, n56, n58, n59,
         n60, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74,
         n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88,
         n89, n90, n91, n92, n93, n94, n95, n96, n97, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n114, n115, n116,
         n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127,
         n128, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n146, n147, n148, n149, n150, n151, n152,
         n153, n154, n155, n156, n157, a_13_, a_12_, a_11_, a_10_, a_9_, a_8_,
         a_7_, a_6_, a_5_, a_4_, a_3_, a_2_, a_1_, b_6_, product_6_,
         product_7_, product_8_, product_9_, product_10_, product_11_,
         product_12_, product_13_, product_14_, product_15_, product_16_,
         product_17_, product_18_, product_19_, product_20_, b_0_, b_1_, b_2_,
         b_3_, b_4_, b_5_, a_0_, n283, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n297, n298, n299, n300, n301, n302,
         n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313,
         n314, n315, n316, n317, n318, n319, n320, n321, n322, n323, n324,
         n325, n326, n327, n328, n329, n330, n331, n332, n333, n334, n335,
         n336, n337, n338, n339, n340, n341, n342, n343, n344, n345, n346,
         n347, n348, n349, n350, n351, n352, n353, n354, n355, n356, n357,
         n358, n359, n360, n361, n362, n363, n364, n365, n366, n367, n368,
         n369, n370, n371, n372, n373, n374, n375, n376;
  assign a_13_ = a[13];
  assign a_12_ = a[12];
  assign a_11_ = a[11];
  assign a_10_ = a[10];
  assign a_9_ = a[9];
  assign a_8_ = a[8];
  assign a_7_ = a[7];
  assign a_6_ = a[6];
  assign a_5_ = a[5];
  assign a_4_ = a[4];
  assign a_3_ = a[3];
  assign a_2_ = a[2];
  assign a_1_ = a[1];
  assign b_6_ = b[6];
  assign product[6] = product_6_;
  assign product[7] = product_7_;
  assign product[8] = product_8_;
  assign product[9] = product_9_;
  assign product[10] = product_10_;
  assign product[11] = product_11_;
  assign product[12] = product_12_;
  assign product[13] = product_13_;
  assign product[14] = product_14_;
  assign product[15] = product_15_;
  assign product[16] = product_16_;
  assign product[17] = product_17_;
  assign product[18] = product_18_;
  assign product[19] = product_19_;
  assign product[20] = product_20_;
  assign b_0_ = b[0];
  assign b_1_ = b[1];
  assign b_2_ = b[2];
  assign b_3_ = b[3];
  assign b_4_ = b[4];
  assign b_5_ = b[5];
  assign a_0_ = a[0];

  ADDFX2 U10 ( .A(n45), .B(n46), .CI(n25), .CO(n24), .S(product_19_) );
  ADDFX2 U13 ( .A(n51), .B(n47), .CI(n26), .CO(n25), .S(product_18_) );
  ADDFX2 U15 ( .A(n55), .B(n59), .CI(n28), .CO(n27), .S(product_16_) );
  ADDFX2 U16 ( .A(n60), .B(n63), .CI(n29), .CO(n28), .S(product_15_) );
  ADDFX2 U17 ( .A(n64), .B(n66), .CI(n30), .CO(n29), .S(product_14_) );
  ADDFX2 U18 ( .A(n67), .B(n69), .CI(n31), .CO(n30), .S(product_13_) );
  ADDFX2 U19 ( .A(n70), .B(n72), .CI(n32), .CO(n31), .S(product_12_) );
  ADDFX2 U20 ( .A(n73), .B(n75), .CI(n33), .CO(n32), .S(product_11_) );
  ADDFX2 U21 ( .A(n76), .B(n78), .CI(n34), .CO(n33), .S(product_10_) );
  ADDFX2 U22 ( .A(n79), .B(n81), .CI(n35), .CO(n34), .S(product_9_) );
  ADDFX2 U23 ( .A(n82), .B(n84), .CI(n36), .CO(n35), .S(product_8_) );
  ADDFX2 U24 ( .A(n85), .B(n87), .CI(n37), .CO(n36), .S(product_7_) );
  ADDFX2 U25 ( .A(n88), .B(n89), .CI(n304), .CO(n37), .S(product_6_) );
  ADDFX2 U32 ( .A(n101), .B(n48), .CI(n321), .CO(n44), .S(n45) );
  ADDFX2 U33 ( .A(n313), .B(n114), .CI(n50), .CO(n46), .S(n47) );
  CMPR42X1 U35 ( .A(n56), .B(n102), .C(n115), .D(n53), .ICI(n319), .S(n52), 
        .ICO(n50), .CO(n51) );
  CMPR42X1 U36 ( .A(n103), .B(n116), .C(n130), .D(n299), .ICI(n58), .S(n55), 
        .ICO(n53), .CO(n54) );
  CMPR42X1 U38 ( .A(n131), .B(n117), .C(n299), .D(n62), .ICI(n320), .S(n60), 
        .ICO(n58), .CO(n59) );
  CMPR42X1 U40 ( .A(n146), .B(n104), .C(n118), .D(n132), .ICI(n65), .S(n64), 
        .ICO(n62), .CO(n63) );
  CMPR42X1 U41 ( .A(n147), .B(n105), .C(n119), .D(n133), .ICI(n68), .S(n67), 
        .ICO(n65), .CO(n66) );
  CMPR42X1 U42 ( .A(n148), .B(n106), .C(n120), .D(n134), .ICI(n71), .S(n70), 
        .ICO(n68), .CO(n69) );
  CMPR42X1 U43 ( .A(n149), .B(n107), .C(n121), .D(n135), .ICI(n74), .S(n73), 
        .ICO(n71), .CO(n72) );
  CMPR42X1 U44 ( .A(n150), .B(n108), .C(n122), .D(n136), .ICI(n77), .S(n76), 
        .ICO(n74), .CO(n75) );
  CMPR42X1 U45 ( .A(n151), .B(n109), .C(n123), .D(n137), .ICI(n80), .S(n79), 
        .ICO(n77), .CO(n78) );
  CMPR42X1 U46 ( .A(n152), .B(n110), .C(n124), .D(n138), .ICI(n83), .S(n82), 
        .ICO(n80), .CO(n81) );
  CMPR42X1 U47 ( .A(n153), .B(n111), .C(n125), .D(n139), .ICI(n86), .S(n85), 
        .ICO(n83), .CO(n84) );
  CMPR42X1 U48 ( .A(n112), .B(n154), .C(n126), .D(n140), .ICI(n91), .S(n88), 
        .ICO(n86), .CO(n87) );
  ADDFX2 U49 ( .A(n127), .B(n141), .CI(n92), .CO(n89), .S(n90) );
  ADDFX2 U51 ( .A(n156), .B(n128), .CI(n142), .CO(n93), .S(n94) );
  CLKINVX3 U201 ( .A(n295), .Y(n320) );
  NAND2X2 U202 ( .A(n295), .B(n318), .Y(n292) );
  XNOR2X2 U208 ( .A(a_9_), .B(n295), .Y(n342) );
  XOR2X4 U211 ( .A(b_4_), .B(n322), .Y(n285) );
  CLKINVX3 U213 ( .A(b_0_), .Y(n318) );
  OAI22XL U214 ( .A0(a_1_), .A1(n292), .B0(n335), .B1(n318), .Y(n334) );
  OAI22X1 U215 ( .A0(n336), .A1(n292), .B0(n337), .B1(n318), .Y(n156) );
  XNOR2XL U216 ( .A(a_1_), .B(b_3_), .Y(n348) );
  INVX1 U217 ( .A(a_1_), .Y(n312) );
  INVX1 U220 ( .A(n326), .Y(n304) );
  AOI21X1 U221 ( .A0(n346), .A1(n318), .B0(n320), .Y(n146) );
  OAI2BB1X1 U223 ( .A0N(n291), .A1N(n331), .B0(b_3_), .Y(n319) );
  NAND2X1 U224 ( .A(n95), .B(n94), .Y(n290) );
  OAI2BB1X1 U225 ( .A0N(n285), .A1N(n287), .B0(n297), .Y(n321) );
  OAI22X1 U229 ( .A0(n338), .A1(n292), .B0(n339), .B1(n318), .Y(n154) );
  BUFX3 U230 ( .A(n293), .Y(n286) );
  OAI22X1 U231 ( .A0(n339), .A1(n292), .B0(n340), .B1(n318), .Y(n153) );
  CLKINVX3 U232 ( .A(n334), .Y(n310) );
  BUFX3 U233 ( .A(b_5_), .Y(n297) );
  NAND3X2 U234 ( .A(n288), .B(n289), .C(n290), .Y(n327) );
  OR2X2 U235 ( .A(n328), .B(n306), .Y(n288) );
  OR2X2 U236 ( .A(n328), .B(n308), .Y(n289) );
  NAND2X4 U239 ( .A(n285), .B(n376), .Y(n287) );
  ADDHX1 U240 ( .A(n157), .B(n143), .CO(n95), .S(n96) );
  AOI222X2 U243 ( .A0(n329), .A1(n96), .B0(n330), .B1(n329), .C0(n330), .C1(
        n96), .Y(n328) );
  AOI222X2 U244 ( .A0(n327), .A1(n90), .B0(n327), .B1(n93), .C0(n93), .C1(n90), 
        .Y(n326) );
  OAI22XL U245 ( .A0(n359), .A1(n331), .B0(n291), .B1(n360), .Y(n131) );
  NAND2BXL U246 ( .AN(n294), .B(a_13_), .Y(n324) );
  OAI22XL U247 ( .A0(n372), .A1(n287), .B0(n285), .B1(n373), .Y(n117) );
  INVX1 U248 ( .A(n56), .Y(n299) );
  INVXL U249 ( .A(a_6_), .Y(n303) );
  INVXL U250 ( .A(a_10_), .Y(n316) );
  INVXL U251 ( .A(a_11_), .Y(n315) );
  INVXL U252 ( .A(a_12_), .Y(n314) );
  INVXL U253 ( .A(a_13_), .Y(n298) );
  OAI22XL U254 ( .A0(n375), .A1(n287), .B0(n285), .B1(n323), .Y(n114) );
  NOR3XL U255 ( .A(n320), .B(n310), .C(a_1_), .Y(n332) );
  XOR2X4 U256 ( .A(b_2_), .B(n320), .Y(n291) );
  OAI22XL U257 ( .A0(n343), .A1(n292), .B0(n344), .B1(n318), .Y(n149) );
  OAI22XL U258 ( .A0(n344), .A1(n292), .B0(n345), .B1(n318), .Y(n148) );
  OAI22XL U259 ( .A0(n345), .A1(n292), .B0(n346), .B1(n318), .Y(n147) );
  OAI22XL U260 ( .A0(n294), .A1(n309), .B0(n286), .B1(n307), .Y(n108) );
  OAI22XL U261 ( .A0(n367), .A1(n287), .B0(n285), .B1(n368), .Y(n122) );
  OAI22XL U262 ( .A0(n354), .A1(n331), .B0(n291), .B1(n355), .Y(n136) );
  OAI22XL U263 ( .A0(n294), .A1(n307), .B0(n286), .B1(n305), .Y(n107) );
  OAI22XL U264 ( .A0(n368), .A1(n287), .B0(n285), .B1(n369), .Y(n121) );
  OAI22XL U265 ( .A0(n355), .A1(n331), .B0(n291), .B1(n356), .Y(n135) );
  OAI22XL U266 ( .A0(n370), .A1(n287), .B0(n285), .B1(n371), .Y(n119) );
  OAI22XL U267 ( .A0(n357), .A1(n331), .B0(n291), .B1(n358), .Y(n133) );
  OAI22XL U268 ( .A0(n369), .A1(n287), .B0(n285), .B1(n370), .Y(n120) );
  OAI22XL U269 ( .A0(n356), .A1(n331), .B0(n291), .B1(n357), .Y(n134) );
  OAI22XL U270 ( .A0(n294), .A1(n302), .B0(n286), .B1(n301), .Y(n104) );
  OAI22XL U271 ( .A0(n371), .A1(n287), .B0(n285), .B1(n372), .Y(n118) );
  OAI22XL U272 ( .A0(n374), .A1(n287), .B0(n285), .B1(n375), .Y(n115) );
  OAI22XL U273 ( .A0(n360), .A1(n331), .B0(n291), .B1(n322), .Y(n130) );
  OAI22XL U274 ( .A0(n294), .A1(n300), .B0(n286), .B1(n316), .Y(n103) );
  OAI22XL U275 ( .A0(n373), .A1(n287), .B0(n285), .B1(n374), .Y(n116) );
  OAI22XL U276 ( .A0(n294), .A1(n315), .B0(n286), .B1(n314), .Y(n48) );
  INVX1 U277 ( .A(a_2_), .Y(n311) );
  INVX1 U278 ( .A(a_3_), .Y(n309) );
  INVX1 U279 ( .A(n283), .Y(n302) );
  INVX1 U280 ( .A(a_8_), .Y(n301) );
  INVX1 U281 ( .A(a_9_), .Y(n300) );
  INVX1 U282 ( .A(a_4_), .Y(n307) );
  INVX1 U283 ( .A(a_5_), .Y(n305) );
  INVX1 U284 ( .A(n95), .Y(n308) );
  INVX1 U285 ( .A(n94), .Y(n306) );
  ADDFX2 U286 ( .A(n52), .B(n54), .CI(n27), .CO(n26), .S(product_17_) );
  INVX1 U287 ( .A(n48), .Y(n313) );
  INVX1 U288 ( .A(n297), .Y(n323) );
  INVX1 U289 ( .A(a_0_), .Y(n317) );
  XOR2X1 U290 ( .A(n324), .B(n325), .Y(product_20_) );
  XOR2X1 U291 ( .A(n44), .B(n24), .Y(n325) );
  OAI32X1 U292 ( .A0(n323), .A1(a_0_), .A2(n285), .B0(n323), .B1(n287), .Y(n97) );
  OAI22X1 U293 ( .A0(n294), .A1(n301), .B0(n286), .B1(n300), .Y(n56) );
  OAI32X1 U294 ( .A0(n322), .A1(a_0_), .A2(n291), .B0(n322), .B1(n331), .Y(
        n330) );
  OAI22X1 U296 ( .A0(n337), .A1(n292), .B0(n338), .B1(n318), .Y(n155) );
  OAI22X1 U297 ( .A0(n340), .A1(n292), .B0(n341), .B1(n318), .Y(n152) );
  OAI22X1 U298 ( .A0(n341), .A1(n292), .B0(n342), .B1(n318), .Y(n151) );
  OAI22X1 U299 ( .A0(n342), .A1(n292), .B0(n343), .B1(n318), .Y(n150) );
  XNOR2X1 U300 ( .A(a_10_), .B(n295), .Y(n343) );
  XNOR2X1 U301 ( .A(a_11_), .B(n295), .Y(n344) );
  XNOR2X1 U302 ( .A(a_12_), .B(n295), .Y(n345) );
  XNOR2X1 U303 ( .A(a_13_), .B(n295), .Y(n346) );
  XNOR2X1 U304 ( .A(a_0_), .B(b_3_), .Y(n347) );
  XNOR2X1 U307 ( .A(a_2_), .B(b_3_), .Y(n349) );
  XNOR2X1 U309 ( .A(a_3_), .B(b_3_), .Y(n350) );
  XNOR2X1 U311 ( .A(a_4_), .B(b_3_), .Y(n351) );
  XNOR2X1 U313 ( .A(a_5_), .B(b_3_), .Y(n352) );
  XNOR2X1 U315 ( .A(a_6_), .B(b_3_), .Y(n353) );
  XNOR2X1 U316 ( .A(n283), .B(b_3_), .Y(n354) );
  XNOR2X1 U317 ( .A(a_8_), .B(b_3_), .Y(n355) );
  XNOR2X1 U318 ( .A(a_9_), .B(b_3_), .Y(n356) );
  XNOR2X1 U319 ( .A(a_10_), .B(b_3_), .Y(n357) );
  OAI22X1 U320 ( .A0(n358), .A1(n331), .B0(n291), .B1(n359), .Y(n132) );
  XNOR2X1 U321 ( .A(a_11_), .B(b_3_), .Y(n358) );
  XNOR2X1 U322 ( .A(a_12_), .B(b_3_), .Y(n359) );
  XNOR2X1 U323 ( .A(a_13_), .B(b_3_), .Y(n360) );
  XNOR2X1 U324 ( .A(n322), .B(b_2_), .Y(n361) );
  NOR2X1 U325 ( .A(n285), .B(n317), .Y(n128) );
  OAI22X1 U326 ( .A0(n362), .A1(n287), .B0(n285), .B1(n363), .Y(n127) );
  XNOR2X1 U327 ( .A(a_0_), .B(n297), .Y(n362) );
  OAI22X1 U328 ( .A0(n363), .A1(n287), .B0(n285), .B1(n364), .Y(n126) );
  XNOR2X1 U329 ( .A(a_1_), .B(n297), .Y(n363) );
  OAI22X1 U330 ( .A0(n364), .A1(n287), .B0(n285), .B1(n365), .Y(n125) );
  XNOR2X1 U331 ( .A(a_2_), .B(n297), .Y(n364) );
  OAI22X1 U332 ( .A0(n365), .A1(n287), .B0(n285), .B1(n366), .Y(n124) );
  XNOR2X1 U333 ( .A(a_3_), .B(n297), .Y(n365) );
  OAI22X1 U334 ( .A0(n366), .A1(n287), .B0(n285), .B1(n367), .Y(n123) );
  XNOR2X1 U335 ( .A(a_4_), .B(n297), .Y(n366) );
  XNOR2X1 U336 ( .A(a_5_), .B(n297), .Y(n367) );
  XNOR2X1 U337 ( .A(a_6_), .B(n297), .Y(n368) );
  XNOR2X1 U338 ( .A(n283), .B(n297), .Y(n369) );
  XNOR2X1 U340 ( .A(a_9_), .B(n297), .Y(n371) );
  XNOR2X1 U341 ( .A(a_10_), .B(n297), .Y(n372) );
  XNOR2X1 U342 ( .A(a_11_), .B(n297), .Y(n373) );
  XNOR2X1 U343 ( .A(a_12_), .B(n297), .Y(n374) );
  XNOR2X1 U344 ( .A(a_13_), .B(n297), .Y(n375) );
  XNOR2X1 U345 ( .A(n323), .B(b_4_), .Y(n376) );
  NOR2X1 U346 ( .A(n286), .B(n317), .Y(n112) );
  OAI22X1 U347 ( .A0(n294), .A1(n317), .B0(n286), .B1(n312), .Y(n111) );
  OAI22X1 U348 ( .A0(n312), .A1(n294), .B0(n286), .B1(n311), .Y(n110) );
  OAI22X1 U349 ( .A0(n294), .A1(n311), .B0(n286), .B1(n309), .Y(n109) );
  OAI22X1 U350 ( .A0(n294), .A1(n305), .B0(n286), .B1(n303), .Y(n106) );
  OAI22X1 U351 ( .A0(n294), .A1(n303), .B0(n286), .B1(n302), .Y(n105) );
  OAI22X1 U352 ( .A0(n294), .A1(n316), .B0(n286), .B1(n315), .Y(n102) );
  OAI22X1 U353 ( .A0(n294), .A1(n314), .B0(n286), .B1(n298), .Y(n101) );
  XNOR2XL U1 ( .A(b_6_), .B(n297), .Y(n293) );
  XNOR2X2 U2 ( .A(a_3_), .B(n295), .Y(n336) );
  OAI22X2 U3 ( .A0(n347), .A1(n331), .B0(n291), .B1(n348), .Y(n143) );
  XNOR2X1 U4 ( .A(a_2_), .B(n295), .Y(n335) );
  MX2X2 U5 ( .A(n332), .B(n333), .S0(a_0_), .Y(n329) );
  OAI22XL U6 ( .A0(n335), .A1(n292), .B0(n336), .B1(n318), .Y(n157) );
  XOR2X1 U7 ( .A(n301), .B(n297), .Y(n370) );
  OAI22XL U8 ( .A0(n348), .A1(n331), .B0(n291), .B1(n349), .Y(n142) );
  NOR2XL U9 ( .A(n310), .B(n291), .Y(n333) );
  OAI22XL U11 ( .A0(n349), .A1(n331), .B0(n291), .B1(n350), .Y(n141) );
  OAI22XL U12 ( .A0(n350), .A1(n331), .B0(n291), .B1(n351), .Y(n140) );
  OAI22XL U14 ( .A0(n351), .A1(n331), .B0(n291), .B1(n352), .Y(n139) );
  OAI22XL U26 ( .A0(n352), .A1(n331), .B0(n291), .B1(n353), .Y(n138) );
  OAI22XL U27 ( .A0(n353), .A1(n331), .B0(n291), .B1(n354), .Y(n137) );
  CLKBUFX8 U28 ( .A(b_1_), .Y(n295) );
  XNOR2X1 U29 ( .A(a_5_), .B(n295), .Y(n338) );
  INVX4 U30 ( .A(b_3_), .Y(n322) );
  NAND2X4 U31 ( .A(n291), .B(n361), .Y(n331) );
  XNOR2X1 U34 ( .A(a_4_), .B(n295), .Y(n337) );
  BUFX3 U37 ( .A(a_7_), .Y(n283) );
  XNOR2X1 U39 ( .A(a_8_), .B(n295), .Y(n341) );
  XNOR2X1 U50 ( .A(a_7_), .B(n295), .Y(n340) );
  XNOR2X1 U52 ( .A(a_6_), .B(n295), .Y(n339) );
  ADDHXL U53 ( .A(n155), .B(n97), .CO(n91), .S(n92) );
  NAND2X2 U54 ( .A(n293), .B(b_6_), .Y(n294) );
endmodule


module MIX_1_DW01_sub_3 ( A, B, CI, DIFF, CO );
  input [14:0] A;
  input [14:0] B;
  output [14:0] DIFF;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n19, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n43, n45, n46, n48, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n65,
         n67, n68, n70, n72, n73, n74, n76, n78, n79, n92, n93, n94, n95, n96,
         n97, n98, n99, n100, n101, n102, n103, n104, DIFF_0_, DIFF_1_,
         DIFF_2_, DIFF_3_, DIFF_4_, DIFF_5_, DIFF_6_, DIFF_7_, DIFF_8_,
         DIFF_9_, DIFF_10_, DIFF_11_, DIFF_12_, DIFF_13_, B_0_, B_1_, B_2_,
         B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_, B_11_, B_12_, A_0_,
         A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_, A_10_, A_11_,
         A_12_, n157, n158, n159, n160, n161, n162, n163;
  assign DIFF[0] = DIFF_0_;
  assign DIFF[1] = DIFF_1_;
  assign DIFF[2] = DIFF_2_;
  assign DIFF[3] = DIFF_3_;
  assign DIFF[4] = DIFF_4_;
  assign DIFF[5] = DIFF_5_;
  assign DIFF[6] = DIFF_6_;
  assign DIFF[7] = DIFF_7_;
  assign DIFF[8] = DIFF_8_;
  assign DIFF[9] = DIFF_9_;
  assign DIFF[10] = DIFF_10_;
  assign DIFF[11] = DIFF_11_;
  assign DIFF[12] = DIFF_12_;
  assign DIFF[13] = DIFF_13_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];

  OAI21X4 U3 ( .A0(n17), .A1(n15), .B0(n16), .Y(n14) );
  AOI21X4 U9 ( .A0(n22), .A1(n163), .B0(n19), .Y(n17) );
  OAI21X4 U17 ( .A0(n23), .A1(n52), .B0(n24), .Y(n22) );
  OAI21X2 U125 ( .A0(n74), .A1(n62), .B0(n63), .Y(n61) );
  INVX1 U129 ( .A(B_2_), .Y(n102) );
  INVX2 U130 ( .A(B_3_), .Y(n101) );
  NAND2X1 U131 ( .A(n102), .B(A_2_), .Y(n72) );
  AOI21X1 U132 ( .A0(n162), .A1(n1), .B0(n76), .Y(n74) );
  AOI21X1 U133 ( .A0(n161), .A1(n48), .B0(n43), .Y(n41) );
  NAND2BX1 U135 ( .AN(n35), .B(n36), .Y(n6) );
  NAND2BX1 U136 ( .AN(n30), .B(n31), .Y(n5) );
  NAND2BX1 U137 ( .AN(n55), .B(n56), .Y(n9) );
  NAND2BX1 U138 ( .AN(n58), .B(n59), .Y(n10) );
  NAND2BX1 U139 ( .AN(n27), .B(n28), .Y(n4) );
  NAND2BX1 U140 ( .AN(n15), .B(n16), .Y(n2) );
  NOR2X1 U141 ( .A(n30), .B(n27), .Y(n25) );
  NAND2X1 U142 ( .A(n25), .B(n33), .Y(n23) );
  INVX1 U144 ( .A(n50), .Y(n48) );
  INVX1 U145 ( .A(B_8_), .Y(n96) );
  INVX1 U146 ( .A(B_4_), .Y(n100) );
  NOR2X1 U147 ( .A(n96), .B(A_8_), .Y(n35) );
  INVX1 U148 ( .A(B_12_), .Y(n92) );
  INVX1 U149 ( .A(n21), .Y(n19) );
  AOI21X2 U150 ( .A0(n25), .A1(n34), .B0(n26), .Y(n24) );
  NAND2X1 U151 ( .A(n98), .B(A_6_), .Y(n50) );
  INVX1 U152 ( .A(B_7_), .Y(n97) );
  INVX1 U154 ( .A(n74), .Y(n73) );
  AOI21X1 U155 ( .A0(n160), .A1(n70), .B0(n65), .Y(n63) );
  NOR2X1 U156 ( .A(n99), .B(A_5_), .Y(n55) );
  INVX1 U160 ( .A(B_9_), .Y(n95) );
  NOR2X1 U161 ( .A(n40), .B(n35), .Y(n33) );
  NOR2X1 U162 ( .A(n55), .B(n58), .Y(n53) );
  OAI21XL U163 ( .A0(n55), .A1(n59), .B0(n56), .Y(n54) );
  NOR2X1 U164 ( .A(n94), .B(A_10_), .Y(n27) );
  NOR2X1 U165 ( .A(n95), .B(A_9_), .Y(n30) );
  INVX1 U166 ( .A(B_11_), .Y(n93) );
  CLKINVX3 U167 ( .A(n14), .Y(DIFF_13_) );
  OR2X2 U168 ( .A(n102), .B(A_2_), .Y(n159) );
  AOI21X1 U169 ( .A0(n73), .A1(n159), .B0(n70), .Y(n68) );
  NAND2X1 U170 ( .A(n96), .B(A_8_), .Y(n36) );
  AOI21XL U171 ( .A0(n51), .A1(n33), .B0(n34), .Y(n32) );
  NAND2X1 U172 ( .A(n159), .B(n160), .Y(n62) );
  XOR2X1 U174 ( .A(n51), .B(n157), .Y(DIFF_6_) );
  AND2X1 U175 ( .A(n158), .B(n50), .Y(n157) );
  XNOR2X1 U176 ( .A(n104), .B(A_0_), .Y(DIFF_0_) );
  NAND2X1 U177 ( .A(n99), .B(A_5_), .Y(n56) );
  OR2X2 U178 ( .A(n98), .B(A_6_), .Y(n158) );
  NAND2X1 U179 ( .A(n95), .B(A_9_), .Y(n31) );
  NAND2XL U180 ( .A(n158), .B(n161), .Y(n40) );
  NAND2XL U182 ( .A(n161), .B(n45), .Y(n7) );
  AOI21XL U183 ( .A0(n51), .A1(n158), .B0(n48), .Y(n46) );
  NAND2XL U184 ( .A(n159), .B(n72), .Y(n12) );
  NAND2XL U186 ( .A(n162), .B(n78), .Y(n13) );
  NAND2XL U187 ( .A(n163), .B(n21), .Y(n3) );
  NAND2XL U188 ( .A(n92), .B(A_12_), .Y(n16) );
  NAND2XL U189 ( .A(n94), .B(A_10_), .Y(n28) );
  INVX1 U190 ( .A(n40), .Y(n38) );
  INVX1 U192 ( .A(n45), .Y(n43) );
  INVX1 U193 ( .A(n67), .Y(n65) );
  OAI21XL U194 ( .A0(n31), .A1(n27), .B0(n28), .Y(n26) );
  XOR2X1 U195 ( .A(n32), .B(n5), .Y(DIFF_9_) );
  XNOR2X1 U196 ( .A(n29), .B(n4), .Y(DIFF_10_) );
  OAI21XL U197 ( .A0(n32), .A1(n30), .B0(n31), .Y(n29) );
  XOR2X1 U198 ( .A(n46), .B(n7), .Y(DIFF_7_) );
  XOR2X1 U199 ( .A(n37), .B(n6), .Y(DIFF_8_) );
  INVX1 U200 ( .A(n72), .Y(n70) );
  XOR2X1 U201 ( .A(n60), .B(n10), .Y(DIFF_4_) );
  XNOR2X1 U202 ( .A(n57), .B(n9), .Y(DIFF_5_) );
  OAI21XL U203 ( .A0(n60), .A1(n58), .B0(n59), .Y(n57) );
  XNOR2X1 U204 ( .A(n73), .B(n12), .Y(DIFF_2_) );
  XOR2X1 U205 ( .A(n68), .B(n11), .Y(DIFF_3_) );
  INVX1 U206 ( .A(n78), .Y(n76) );
  INVX1 U207 ( .A(n79), .Y(n1) );
  XOR2X1 U208 ( .A(n17), .B(n2), .Y(DIFF_12_) );
  XNOR2X1 U209 ( .A(n22), .B(n3), .Y(DIFF_11_) );
  NOR2X1 U210 ( .A(n92), .B(A_12_), .Y(n15) );
  OR2X2 U211 ( .A(n101), .B(A_3_), .Y(n160) );
  OR2X2 U212 ( .A(n97), .B(A_7_), .Y(n161) );
  NAND2X1 U213 ( .A(n93), .B(A_11_), .Y(n21) );
  NAND2X1 U214 ( .A(n97), .B(A_7_), .Y(n45) );
  NAND2X1 U215 ( .A(n103), .B(A_1_), .Y(n78) );
  NAND2X1 U216 ( .A(n101), .B(A_3_), .Y(n67) );
  OR2X2 U218 ( .A(n103), .B(A_1_), .Y(n162) );
  OR2X2 U219 ( .A(n93), .B(A_11_), .Y(n163) );
  INVX4 U5 ( .A(B_0_), .Y(n104) );
  XOR2XL U1 ( .A(n13), .B(n79), .Y(DIFF_1_) );
  NAND2X1 U2 ( .A(n160), .B(n67), .Y(n11) );
  AOI21X1 U4 ( .A0(n51), .A1(n38), .B0(n39), .Y(n37) );
  INVXL U6 ( .A(n52), .Y(n51) );
  INVXL U7 ( .A(n41), .Y(n39) );
  INVX2 U8 ( .A(B_1_), .Y(n103) );
  NOR2X2 U10 ( .A(n104), .B(A_0_), .Y(n79) );
  AOI21X2 U11 ( .A0(n53), .A1(n61), .B0(n54), .Y(n52) );
  INVX1 U12 ( .A(B_6_), .Y(n98) );
  INVX1 U13 ( .A(B_5_), .Y(n99) );
  INVX1 U14 ( .A(n61), .Y(n60) );
  NAND2X1 U15 ( .A(n100), .B(A_4_), .Y(n59) );
  NOR2X1 U16 ( .A(n100), .B(A_4_), .Y(n58) );
  INVX1 U18 ( .A(B_10_), .Y(n94) );
  OAI21X1 U19 ( .A0(n41), .A1(n35), .B0(n36), .Y(n34) );
endmodule


module MIX_1 ( AL, YU, YL, Y );
  input [6:0] AL;
  input [12:0] YU;
  input [18:0] YL;
  output [12:0] Y;
  wire   N18, DIFM_13_, N32, N9, N8, N7, N6, N5, N4, N3, N2, N14, N13, N12,
         N11, N10, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3,
         SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5,
         SYNOPSYS_UNCONNECTED__6, SYNOPSYS_UNCONNECTED__7,
         SYNOPSYS_UNCONNECTED__8;
  wire   [13:1] DIF;
  wire   [14:1] PRODM;
  assign N9 = YU[7];
  assign N8 = YU[6];
  assign N7 = YU[5];
  assign N6 = YU[4];
  assign N5 = YU[3];
  assign N4 = YU[2];
  assign N3 = YU[1];
  assign N2 = YU[0];
  assign N14 = YU[12];
  assign N13 = YU[11];
  assign N12 = YU[10];
  assign N11 = YU[9];
  assign N10 = YU[8];

  NOR2X1 U6 ( .A(n60), .B(n17), .Y(n61) );
  AND2X2 U7 ( .A(n15), .B(N18), .Y(n33) );
  NOR2X1 U9 ( .A(DIF[5]), .B(n24), .Y(n9) );
  OR2X2 U10 ( .A(n27), .B(DIF[4]), .Y(n24) );
  AND2X2 U11 ( .A(n38), .B(n15), .Y(n59) );
  INVX1 U12 ( .A(n15), .Y(n68) );
  INVX1 U13 ( .A(N18), .Y(n32) );
  INVX1 U14 ( .A(DIF[4]), .Y(n29) );
  XNOR2X1 U15 ( .A(DIF[8]), .B(n4), .Y(n85) );
  XNOR2X1 U16 ( .A(DIF[9]), .B(n3), .Y(n84) );
  INVX1 U17 ( .A(n41), .Y(n52) );
  INVX1 U18 ( .A(n43), .Y(n49) );
  OR2X2 U19 ( .A(n51), .B(n17), .Y(n6) );
  BUFX8 U20 ( .A(DIF[13]), .Y(n15) );
  XNOR2X2 U22 ( .A(DIF[2]), .B(n2), .Y(n91) );
  NOR2XL U23 ( .A(n14), .B(n17), .Y(n21) );
  NAND2BXL U24 ( .AN(PRODM[11]), .B(n51), .Y(n43) );
  NOR2X1 U25 ( .A(n13), .B(n17), .Y(n22) );
  NOR2BX1 U26 ( .AN(n15), .B(n9), .Y(n23) );
  OR2XL U27 ( .A(n12), .B(n17), .Y(n3) );
  OR2X2 U28 ( .A(n10), .B(n17), .Y(n5) );
  XOR2X1 U29 ( .A(n29), .B(n28), .Y(n89) );
  NAND2XL U30 ( .A(n15), .B(n27), .Y(n28) );
  NOR2X1 U31 ( .A(n56), .B(n17), .Y(n57) );
  NOR2XL U32 ( .A(n47), .B(n17), .Y(n48) );
  NAND2XL U34 ( .A(n15), .B(n30), .Y(n1) );
  NAND2XL U35 ( .A(n15), .B(n31), .Y(n2) );
  OR2X1 U36 ( .A(n11), .B(n17), .Y(n4) );
  XOR2X1 U37 ( .A(n26), .B(n25), .Y(n88) );
  NAND2XL U38 ( .A(n14), .B(n18), .Y(n19) );
  NOR2BX1 U39 ( .AN(n9), .B(DIF[6]), .Y(n10) );
  XNOR2X2 U40 ( .A(PRODM[11]), .B(n6), .Y(n73) );
  INVX1 U41 ( .A(n36), .Y(n62) );
  NAND2BX1 U42 ( .AN(PRODM[4]), .B(n64), .Y(n36) );
  INVX1 U43 ( .A(n39), .Y(n56) );
  NAND2BX1 U44 ( .AN(PRODM[7]), .B(n58), .Y(n39) );
  INVX1 U45 ( .A(n38), .Y(n58) );
  NAND2BX1 U46 ( .AN(PRODM[6]), .B(n60), .Y(n38) );
  INVX1 U47 ( .A(n37), .Y(n60) );
  NAND2BX1 U48 ( .AN(PRODM[5]), .B(n62), .Y(n37) );
  NAND2BX1 U49 ( .AN(PRODM[9]), .B(n54), .Y(n41) );
  INVX1 U50 ( .A(n42), .Y(n51) );
  NAND2BXL U51 ( .AN(PRODM[10]), .B(n52), .Y(n42) );
  INVX1 U52 ( .A(n40), .Y(n54) );
  NAND2BX1 U53 ( .AN(PRODM[8]), .B(n56), .Y(n40) );
  NOR2X1 U54 ( .A(PRODM[1]), .B(N32), .Y(n7) );
  INVX1 U55 ( .A(n34), .Y(n66) );
  NAND2BX1 U56 ( .AN(PRODM[2]), .B(n7), .Y(n34) );
  INVX1 U57 ( .A(n35), .Y(n64) );
  NAND2BX1 U58 ( .AN(PRODM[3]), .B(n66), .Y(n35) );
  INVX1 U59 ( .A(n44), .Y(n47) );
  NAND2BXL U60 ( .AN(PRODM[12]), .B(n49), .Y(n44) );
  XOR2X1 U61 ( .A(PRODM[13]), .B(n48), .Y(n71) );
  NOR3BX1 U62 ( .AN(n15), .B(DIF[12]), .C(n19), .Y(DIFM_13_) );
  INVX1 U63 ( .A(DIF[11]), .Y(n18) );
  XOR2X1 U64 ( .A(DIF[12]), .B(n20), .Y(n93) );
  XOR2X1 U65 ( .A(DIF[6]), .B(n23), .Y(n87) );
  XOR2X1 U66 ( .A(DIF[11]), .B(n21), .Y(n94) );
  XOR2X1 U67 ( .A(DIF[10]), .B(n22), .Y(n95) );
  NAND2XL U68 ( .A(n15), .B(n24), .Y(n25) );
  AND2X2 U69 ( .A(N32), .B(n15), .Y(n8) );
  NAND2BX1 U70 ( .AN(DIF[1]), .B(n32), .Y(n31) );
  OR2X2 U71 ( .A(DIF[2]), .B(n31), .Y(n30) );
  OR2X2 U72 ( .A(DIF[3]), .B(n30), .Y(n27) );
  NOR2BX1 U73 ( .AN(n10), .B(DIF[7]), .Y(n11) );
  NOR2BX1 U74 ( .AN(n11), .B(DIF[8]), .Y(n12) );
  NOR2BX1 U75 ( .AN(n12), .B(DIF[9]), .Y(n13) );
  NOR2BX1 U76 ( .AN(n13), .B(DIF[10]), .Y(n14) );
  NOR2X1 U77 ( .A(PRODM[13]), .B(n45), .Y(n46) );
  XOR2X1 U79 ( .A(PRODM[14]), .B(n46), .Y(n70) );
  INVX1 U80 ( .A(DIF[5]), .Y(n26) );
  XOR2X1 U81 ( .A(PRODM[2]), .B(n69), .Y(n82) );
  NOR2X1 U82 ( .A(n7), .B(n17), .Y(n69) );
  XOR2X1 U83 ( .A(PRODM[9]), .B(n55), .Y(n75) );
  XOR2X1 U84 ( .A(PRODM[8]), .B(n57), .Y(n76) );
  XOR2X1 U85 ( .A(PRODM[7]), .B(n59), .Y(n77) );
  XOR2X1 U86 ( .A(PRODM[5]), .B(n63), .Y(n79) );
  NOR2X1 U87 ( .A(n62), .B(n17), .Y(n63) );
  XOR2X1 U88 ( .A(PRODM[6]), .B(n61), .Y(n78) );
  XOR2X1 U89 ( .A(PRODM[3]), .B(n67), .Y(n81) );
  NOR2X1 U90 ( .A(n66), .B(n17), .Y(n67) );
  XOR2X1 U91 ( .A(PRODM[4]), .B(n65), .Y(n80) );
  NOR2X1 U92 ( .A(n64), .B(n17), .Y(n65) );
  XOR2X1 U93 ( .A(PRODM[1]), .B(n8), .Y(n83) );
  XOR2X1 U94 ( .A(PRODM[10]), .B(n53), .Y(n74) );
  XOR2X2 U95 ( .A(PRODM[12]), .B(n50), .Y(n72) );
  NOR2X2 U96 ( .A(n49), .B(n17), .Y(n50) );
  NOR2X2 U97 ( .A(n52), .B(n17), .Y(n53) );
  XNOR2X2 U1 ( .A(DIF[3]), .B(n1), .Y(n90) );
  MIX_1_DW01_add_0 add_60 ( .A({1'b0, 1'b0, YL[18:6]}), .B({n70, n71, n72, n73, 
        n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, N32}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, Y}) );
  MIX_1_DW_mult_uns_0 mult_58 ( .a({DIFM_13_, n93, n94, n95, n84, n85, n86, 
        n87, n88, n89, n90, n91, n92, N18}), .b(AL), .product({PRODM, N32, 
        SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3, 
        SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5, 
        SYNOPSYS_UNCONNECTED__6, SYNOPSYS_UNCONNECTED__7}) );
  MIX_1_DW01_sub_3 sub_0_root_sub_0_root_sub_55 ( .A({1'b1, 1'b0, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2}), .B({1'b0, 1'b0, 
        YL[18:6]}), .CI(1'b0), .DIFF({SYNOPSYS_UNCONNECTED__8, DIF, N18}) );
  AND2X1 U2 ( .A(n19), .B(n15), .Y(n20) );
  NOR2X1 U3 ( .A(n54), .B(n68), .Y(n55) );
  NAND2XL U4 ( .A(n47), .B(n15), .Y(n45) );
  BUFX3 U5 ( .A(n68), .Y(n17) );
  XOR2X2 U8 ( .A(DIF[1]), .B(n33), .Y(n92) );
  XNOR2X1 U21 ( .A(DIF[7]), .B(n5), .Y(n86) );
endmodule


module QUAN_SCAL_FAC_ADAP_1_test_1 ( CLK, IC, RATE, AL, YL, reset, Y, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_se );
  input [4:0] IC;
  input [1:0] RATE;
  input [6:0] AL;
  output [18:0] YL;
  output [12:0] Y;
  input CLK, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;

  wire   [11:0] WI;
  wire   [12:0] YUT;
  wire   [12:0] YUP;
  wire   [12:0] YU;
  wire   [18:0] YLP;

  FUNCTW_1 iFUNCTW ( .I(IC), .RATE(RATE), .WI(WI) );
  FILTD_1 iFILTD ( .WI(WI), .Y(Y), .YUT(YUT) );
  LIMB_1 iLIMB ( .YUP(YUP), .YUT(YUT) );
  DELAY_0220_13_1_test_1 iDELAY_1 ( .x(YUP), .reset(reset), .y(YU), .clk(CLK), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  FILTE_1 iFILTE ( .YUP(YUP), .YL(YL), .YLP(YLP) );
  DELAY_08800_19_1_test_1 iDELAY_2 ( .x(YLP), .reset(reset), .y(YL), .clk(CLK), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(YU[12]), .test_se(test_se)
         );
  MIX_1 iMIX ( .AL(AL), .YU(YU), .YL(YL), .Y(Y) );
endmodule


module FUNCTF_1 ( I, RATE, FI );
  input [4:0] I;
  input [1:0] RATE;
  output [2:0] FI;
  wire   n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n1, n2, n3, n4,
         FI_1_, n6, n7, n8, n9, n10, n11, n12;
  assign FI[1] = FI_1_;

  AND2X2 U19 ( .A(RATE[1]), .B(n4), .Y(n24) );
  AND2X2 U25 ( .A(RATE[1]), .B(RATE[0]), .Y(n38) );
  DLY1X1 U2 ( .A(I[2]), .Y(n3) );
  DLY1X1 U3 ( .A(I[0]), .Y(n1) );
  INVX1 U4 ( .A(I[1]), .Y(n2) );
  INVX1 U5 ( .A(n37), .Y(n9) );
  XOR2XL U6 ( .A(n2), .B(n10), .Y(n21) );
  XOR2XL U7 ( .A(n1), .B(n3), .Y(n23) );
  AOI31XL U8 ( .A0(n12), .A1(n9), .A2(n19), .B0(n8), .Y(n18) );
  AOI33XL U9 ( .A0(n20), .A1(n21), .A2(n11), .B0(n22), .B1(n23), .B2(n24), .Y(
        n17) );
  XOR2X1 U10 ( .A(I[1]), .B(n3), .Y(n22) );
  INVX1 U11 ( .A(I[3]), .Y(n10) );
  AOI22X1 U12 ( .A0(n35), .A1(n36), .B0(n37), .B1(n7), .Y(n32) );
  OAI21XL U13 ( .A0(n35), .A1(n36), .B0(n9), .Y(n34) );
  INVX1 U14 ( .A(n35), .Y(n7) );
  INVX1 U15 ( .A(n33), .Y(n12) );
  XOR2XL U16 ( .A(n2), .B(I[4]), .Y(n35) );
  XOR2XL U17 ( .A(n1), .B(I[4]), .Y(n36) );
  XNOR2XL U18 ( .A(n3), .B(I[4]), .Y(n33) );
  XOR2XL U20 ( .A(n10), .B(I[4]), .Y(n37) );
  INVX1 U21 ( .A(n28), .Y(n11) );
  INVX1 U22 ( .A(n27), .Y(n8) );
  NAND2X1 U23 ( .A(n17), .B(n18), .Y(FI[2]) );
  NAND4X1 U24 ( .A(n28), .B(n27), .C(n29), .D(n30), .Y(FI[0]) );
  AOI22X1 U26 ( .A0(n19), .A1(n31), .B0(n24), .B1(n23), .Y(n30) );
  NAND3X1 U27 ( .A(n20), .B(n21), .C(n39), .Y(n29) );
  OAI22X1 U28 ( .A0(n32), .A1(n33), .B0(n12), .B1(n34), .Y(n31) );
  INVX1 U29 ( .A(n25), .Y(FI_1_) );
  AOI221X1 U30 ( .A0(n21), .A1(n11), .B0(n22), .B1(n24), .C0(n6), .Y(n25) );
  INVX1 U31 ( .A(n26), .Y(n6) );
  AOI31X1 U32 ( .A0(n7), .A1(n9), .A2(n19), .B0(n8), .Y(n26) );
  NAND2X1 U33 ( .A(n39), .B(n41), .Y(n28) );
  NAND2X1 U34 ( .A(n38), .B(n40), .Y(n27) );
  XOR2X1 U35 ( .A(I[1]), .B(n1), .Y(n40) );
  NOR3X1 U36 ( .A(n38), .B(n24), .C(n39), .Y(n19) );
  INVX1 U37 ( .A(RATE[0]), .Y(n4) );
  NOR2X1 U38 ( .A(n4), .B(RATE[1]), .Y(n39) );
  XOR2XL U39 ( .A(n1), .B(I[3]), .Y(n20) );
  XOR2X1 U40 ( .A(I[3]), .B(n3), .Y(n41) );
endmodule


module FILTA_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [11:2] carry;

  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X2 U1_11 ( .A(A[11]), .B(B[11]), .C(carry[11]), .Y(SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTA_1 ( FI, DMS, DMSP );
  input [2:0] FI;
  input [11:0] DMS;
  output [11:0] DMSP;
  wire   DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_11_,
         DIFSX_0_, N9, N13, N11, N10, N0, n1, n2, n3, n4, n5, n6, n7, n8,
         SYNOPSYS_UNCONNECTED__0;
  wire   [12:10] add_0_root_sub_0_root_sub_64_carry;
  wire   [11:5] sub_1_root_sub_0_root_sub_64_carry;
  assign N0 = DMS[0];

  XNOR2X1 U3 ( .A(N13), .B(add_0_root_sub_0_root_sub_64_carry[12]), .Y(
        DIFSX_11_) );
  ADDFXL U4 ( .A(N11), .B(FI[2]), .CI(add_0_root_sub_0_root_sub_64_carry[11]), 
        .CO(add_0_root_sub_0_root_sub_64_carry[12]), .S(DIFSX_6_) );
  ADDFX2 U5 ( .A(N10), .B(FI[1]), .CI(add_0_root_sub_0_root_sub_64_carry[10]), 
        .CO(add_0_root_sub_0_root_sub_64_carry[11]), .S(DIFSX_5_) );
  INVX1 U6 ( .A(DMS[7]), .Y(n4) );
  INVX1 U7 ( .A(DMS[8]), .Y(n5) );
  INVX1 U8 ( .A(DMS[5]), .Y(n2) );
  INVX1 U9 ( .A(DMS[6]), .Y(n3) );
  INVX1 U10 ( .A(DMS[9]), .Y(n6) );
  INVX1 U11 ( .A(DMS[10]), .Y(n7) );
  INVX1 U12 ( .A(DMS[11]), .Y(n8) );
  AND2X1 U13 ( .A(N9), .B(FI[0]), .Y(add_0_root_sub_0_root_sub_64_carry[10])
         );
  XOR2X1 U14 ( .A(FI[0]), .B(N9), .Y(DIFSX_4_) );
  AND2X1 U15 ( .A(sub_1_root_sub_0_root_sub_64_carry[11]), .B(n8), .Y(N13) );
  XOR2X1 U16 ( .A(n8), .B(sub_1_root_sub_0_root_sub_64_carry[11]), .Y(N11) );
  AND2X1 U17 ( .A(sub_1_root_sub_0_root_sub_64_carry[10]), .B(n7), .Y(
        sub_1_root_sub_0_root_sub_64_carry[11]) );
  XOR2X1 U18 ( .A(n7), .B(sub_1_root_sub_0_root_sub_64_carry[10]), .Y(N10) );
  AND2X1 U19 ( .A(sub_1_root_sub_0_root_sub_64_carry[9]), .B(n6), .Y(
        sub_1_root_sub_0_root_sub_64_carry[10]) );
  XOR2X1 U20 ( .A(n6), .B(sub_1_root_sub_0_root_sub_64_carry[9]), .Y(N9) );
  AND2X1 U21 ( .A(sub_1_root_sub_0_root_sub_64_carry[8]), .B(n5), .Y(
        sub_1_root_sub_0_root_sub_64_carry[9]) );
  XOR2X1 U22 ( .A(n5), .B(sub_1_root_sub_0_root_sub_64_carry[8]), .Y(DIFSX_3_)
         );
  AND2X1 U23 ( .A(sub_1_root_sub_0_root_sub_64_carry[7]), .B(n4), .Y(
        sub_1_root_sub_0_root_sub_64_carry[8]) );
  XOR2X1 U24 ( .A(n4), .B(sub_1_root_sub_0_root_sub_64_carry[7]), .Y(DIFSX_2_)
         );
  AND2X1 U25 ( .A(sub_1_root_sub_0_root_sub_64_carry[6]), .B(n3), .Y(
        sub_1_root_sub_0_root_sub_64_carry[7]) );
  XOR2X1 U26 ( .A(n3), .B(sub_1_root_sub_0_root_sub_64_carry[6]), .Y(DIFSX_1_)
         );
  AND2X1 U27 ( .A(sub_1_root_sub_0_root_sub_64_carry[5]), .B(n2), .Y(
        sub_1_root_sub_0_root_sub_64_carry[6]) );
  XOR2X1 U28 ( .A(n2), .B(sub_1_root_sub_0_root_sub_64_carry[5]), .Y(DIFSX_0_)
         );
  NOR2X1 U29 ( .A(DMS[4]), .B(DMS[3]), .Y(n1) );
  NOR4BX1 U30 ( .AN(n1), .B(DMS[1]), .C(N0), .D(DMS[2]), .Y(
        sub_1_root_sub_0_root_sub_64_carry[5]) );
  FILTA_1_DW01_add_1 add_80 ( .A({1'b0, DIFSX_11_, DIFSX_11_, DIFSX_11_, 
        DIFSX_11_, DIFSX_11_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, 
        DIFSX_1_, DIFSX_0_}), .B({1'b0, DMS[11:1], N0}), .CI(1'b0), .SUM({
        SYNOPSYS_UNCONNECTED__0, DMSP}) );
endmodule


module DELAY_RESET_STATE0_WIDTH12_1_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [11:0] x;
  output [11:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [11:0] delay0;
  wire   [11:0] delay1;
  wire   [11:0] delay2;
  wire   [11:0] delay3;
  wire   [11:0] delay4;
  wire   [11:0] delay5;
  wire   [11:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[10]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[4]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[2]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[11]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(y[0]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[5]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[11]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[11]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[11]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[0]) );
endmodule


module FILTB_1_DW01_add_1 ( A, B, CI, SUM, CO );
  input [13:0] A;
  input [13:0] B;
  output [13:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [13:2] carry;

  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR3X2 U1_13 ( .A(A[13]), .B(B[13]), .C(carry[13]), .Y(SUM[13]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTB_1 ( FI, DML, DMLP );
  input [2:0] FI;
  input [13:0] DML;
  output [13:0] DMLP;
  wire   DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_13_,
         DIFSX_0_, N15, N13, N12, N11, N0, n1, n2, n3, n4, n5, n6, n7, n8;
  wire   [14:12] add_0_root_sub_0_root_sub_44_carry;
  wire   [13:7] sub_1_root_sub_0_root_sub_44_carry;
  assign N0 = DML[0];

  ADDFX2 U3 ( .A(N13), .B(FI[2]), .CI(add_0_root_sub_0_root_sub_44_carry[13]), 
        .CO(add_0_root_sub_0_root_sub_44_carry[14]), .S(DIFSX_6_) );
  XNOR2X1 U4 ( .A(N15), .B(add_0_root_sub_0_root_sub_44_carry[14]), .Y(
        DIFSX_13_) );
  ADDFX2 U5 ( .A(N12), .B(FI[1]), .CI(add_0_root_sub_0_root_sub_44_carry[12]), 
        .CO(add_0_root_sub_0_root_sub_44_carry[13]), .S(DIFSX_5_) );
  INVX1 U6 ( .A(DML[7]), .Y(n2) );
  INVX1 U7 ( .A(DML[8]), .Y(n3) );
  INVX1 U8 ( .A(DML[9]), .Y(n4) );
  INVX1 U9 ( .A(DML[10]), .Y(n5) );
  INVX1 U10 ( .A(DML[11]), .Y(n6) );
  INVX1 U11 ( .A(DML[12]), .Y(n7) );
  INVX1 U12 ( .A(DML[13]), .Y(n8) );
  AND2X1 U13 ( .A(N11), .B(FI[0]), .Y(add_0_root_sub_0_root_sub_44_carry[12])
         );
  XOR2X1 U14 ( .A(FI[0]), .B(N11), .Y(DIFSX_4_) );
  AND2X1 U15 ( .A(sub_1_root_sub_0_root_sub_44_carry[13]), .B(n8), .Y(N15) );
  XOR2X1 U16 ( .A(n8), .B(sub_1_root_sub_0_root_sub_44_carry[13]), .Y(N13) );
  AND2X1 U17 ( .A(sub_1_root_sub_0_root_sub_44_carry[12]), .B(n7), .Y(
        sub_1_root_sub_0_root_sub_44_carry[13]) );
  XOR2X1 U18 ( .A(n7), .B(sub_1_root_sub_0_root_sub_44_carry[12]), .Y(N12) );
  AND2X1 U19 ( .A(sub_1_root_sub_0_root_sub_44_carry[11]), .B(n6), .Y(
        sub_1_root_sub_0_root_sub_44_carry[12]) );
  XOR2X1 U20 ( .A(n6), .B(sub_1_root_sub_0_root_sub_44_carry[11]), .Y(N11) );
  AND2X1 U21 ( .A(sub_1_root_sub_0_root_sub_44_carry[10]), .B(n5), .Y(
        sub_1_root_sub_0_root_sub_44_carry[11]) );
  XOR2X1 U22 ( .A(n5), .B(sub_1_root_sub_0_root_sub_44_carry[10]), .Y(DIFSX_3_) );
  AND2X1 U23 ( .A(sub_1_root_sub_0_root_sub_44_carry[9]), .B(n4), .Y(
        sub_1_root_sub_0_root_sub_44_carry[10]) );
  XOR2X1 U24 ( .A(n4), .B(sub_1_root_sub_0_root_sub_44_carry[9]), .Y(DIFSX_2_)
         );
  AND2X1 U25 ( .A(sub_1_root_sub_0_root_sub_44_carry[8]), .B(n3), .Y(
        sub_1_root_sub_0_root_sub_44_carry[9]) );
  XOR2X1 U26 ( .A(n3), .B(sub_1_root_sub_0_root_sub_44_carry[8]), .Y(DIFSX_1_)
         );
  AND2X1 U27 ( .A(sub_1_root_sub_0_root_sub_44_carry[7]), .B(n2), .Y(
        sub_1_root_sub_0_root_sub_44_carry[8]) );
  XOR2X1 U28 ( .A(n2), .B(sub_1_root_sub_0_root_sub_44_carry[7]), .Y(DIFSX_0_)
         );
  NOR4X1 U29 ( .A(DML[6]), .B(DML[5]), .C(DML[4]), .D(DML[3]), .Y(n1) );
  NOR4BX1 U30 ( .AN(n1), .B(DML[2]), .C(N0), .D(DML[1]), .Y(
        sub_1_root_sub_0_root_sub_44_carry[7]) );
  FILTB_1_DW01_add_1 add_60 ( .A({DIFSX_13_, DIFSX_13_, DIFSX_13_, DIFSX_13_, 
        DIFSX_13_, DIFSX_13_, DIFSX_13_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .B({DML[13:1], N0}), .CI(
        1'b0), .SUM(DMLP) );
endmodule


module DELAY_RESET_STATE0_WIDTH14_1_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [13:0] x;
  output [13:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [13:0] delay0;
  wire   [13:0] delay1;
  wire   [13:0] delay2;
  wire   [13:0] delay3;
  wire   [13:0] delay4;
  wire   [13:0] delay5;
  wire   [13:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[12]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[10]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[13]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[13]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[13]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module SUBTC_1_DW01_sub_1 ( A, B, CI, DIFF, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] DIFF;
  input CI;
  output CO;
  wire   n1, DIFF_14_, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16;
  wire   [14:3] carry;
  assign DIFF[0] = B[0];
  assign DIFF[14] = DIFF_14_;

  ADDFX2 U2_2 ( .A(A[2]), .B(n14), .CI(n1), .CO(carry[3]), .S(DIFF[2]) );
  ADDFX2 U2_3 ( .A(A[3]), .B(n13), .CI(carry[3]), .CO(carry[4]), .S(DIFF[3])
         );
  ADDFX2 U2_5 ( .A(A[5]), .B(n11), .CI(carry[5]), .CO(carry[6]), .S(DIFF[5])
         );
  ADDFX2 U2_4 ( .A(A[4]), .B(n12), .CI(carry[4]), .CO(carry[5]), .S(DIFF[4])
         );
  ADDFX2 U2_12 ( .A(A[12]), .B(n4), .CI(carry[12]), .CO(carry[13]), .S(
        DIFF[12]) );
  ADDFX2 U2_9 ( .A(A[9]), .B(n7), .CI(carry[9]), .CO(carry[10]), .S(DIFF[9])
         );
  ADDFX2 U2_7 ( .A(A[7]), .B(n9), .CI(carry[7]), .CO(carry[8]), .S(DIFF[7]) );
  ADDFX1 U2_8 ( .A(A[8]), .B(n8), .CI(carry[8]), .CO(carry[9]), .S(DIFF[8]) );
  ADDFX1 U2_6 ( .A(A[6]), .B(n10), .CI(carry[6]), .CO(carry[7]), .S(DIFF[6])
         );
  ADDFX1 U2_10 ( .A(A[10]), .B(n6), .CI(carry[10]), .CO(carry[11]), .S(
        DIFF[10]) );
  ADDFX1 U2_11 ( .A(A[11]), .B(n5), .CI(carry[11]), .CO(carry[12]), .S(
        DIFF[11]) );
  ADDFX2 U2_13 ( .A(A[13]), .B(n3), .CI(carry[13]), .CO(carry[14]), .S(
        DIFF[13]) );
  NOR2X1 U1 ( .A(B[1]), .B(B[0]), .Y(n1) );
  INVX1 U2 ( .A(B[13]), .Y(n3) );
  INVX1 U3 ( .A(carry[14]), .Y(DIFF_14_) );
  XOR2X1 U4 ( .A(n15), .B(n16), .Y(DIFF[1]) );
  INVX1 U5 ( .A(B[7]), .Y(n9) );
  INVX1 U6 ( .A(B[8]), .Y(n8) );
  INVX1 U7 ( .A(B[10]), .Y(n6) );
  INVX1 U8 ( .A(B[11]), .Y(n5) );
  INVX1 U9 ( .A(B[9]), .Y(n7) );
  INVX1 U10 ( .A(B[12]), .Y(n4) );
  INVX1 U11 ( .A(B[4]), .Y(n12) );
  INVX1 U12 ( .A(B[5]), .Y(n11) );
  INVX1 U13 ( .A(B[6]), .Y(n10) );
  INVX1 U14 ( .A(B[0]), .Y(n16) );
  INVX1 U15 ( .A(B[1]), .Y(n15) );
  INVX1 U16 ( .A(B[3]), .Y(n13) );
  INVX1 U17 ( .A(B[2]), .Y(n14) );
endmodule


module SUBTC_1 ( DMSP, DMLP, TDP, Y, AX );
  input [11:0] DMSP;
  input [13:0] DMLP;
  input [12:0] Y;
  input TDP;
  output AX;
  wire   N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55,
         N9, N8, N7, N6, N5, N4, N15, N14, N13, N12, N11, N10, lt_64_A_10_,
         lt_64_A_7_, lt_64_A_6_, lt_64_A_5_, lt_64_A_4_, lt_64_A_3_,
         lt_64_A_1_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n56, n57, n58, n59, n60, n61, SYNOPSYS_UNCONNECTED__0;
  wire   [14:1] DIF;
  wire   [12:2] sub_61_carry;
  assign N9 = DMSP[5];
  assign N8 = DMSP[4];
  assign N7 = DMSP[3];
  assign N6 = DMSP[2];
  assign N5 = DMSP[1];
  assign N4 = DMSP[0];
  assign N15 = DMSP[11];
  assign N14 = DMSP[10];
  assign N13 = DMSP[9];
  assign N12 = DMSP[8];
  assign N11 = DMSP[7];
  assign N10 = DMSP[6];

  INVX1 U3 ( .A(TDP), .Y(n10) );
  AOI221X1 U4 ( .A0(n60), .A1(lt_64_A_10_), .B0(n1), .B1(n27), .C0(n26), .Y(
        n11) );
  INVX1 U5 ( .A(n40), .Y(n1) );
  NOR2X1 U6 ( .A(N19), .B(DIF[1]), .Y(sub_61_carry[2]) );
  OAI211X1 U7 ( .A0(n2), .A1(n36), .B0(n3), .C0(n30), .Y(n8) );
  INVX1 U8 ( .A(n5), .Y(n2) );
  NAND2X1 U9 ( .A(DMLP[8]), .B(n46), .Y(n32) );
  NAND2X1 U10 ( .A(n52), .B(n53), .Y(n26) );
  OR2X2 U11 ( .A(n29), .B(n36), .Y(n3) );
  INVX1 U12 ( .A(DIF[14]), .Y(n61) );
  AND2X2 U13 ( .A(sub_61_carry[11]), .B(n24), .Y(sub_61_carry[12]) );
  AND2X2 U14 ( .A(sub_61_carry[10]), .B(n23), .Y(sub_61_carry[11]) );
  AND2X2 U15 ( .A(sub_61_carry[9]), .B(n22), .Y(sub_61_carry[10]) );
  AND2X2 U16 ( .A(sub_61_carry[8]), .B(n21), .Y(sub_61_carry[9]) );
  AND2X2 U17 ( .A(sub_61_carry[7]), .B(n20), .Y(sub_61_carry[8]) );
  AND2X2 U18 ( .A(sub_61_carry[6]), .B(n19), .Y(sub_61_carry[7]) );
  AND2X2 U19 ( .A(sub_61_carry[5]), .B(n18), .Y(sub_61_carry[6]) );
  AND2X2 U20 ( .A(sub_61_carry[4]), .B(n17), .Y(sub_61_carry[5]) );
  AOI22XL U21 ( .A0(DIF[8]), .A1(n61), .B0(N27), .B1(DIF[14]), .Y(n43) );
  AOI22XL U22 ( .A0(DIF[4]), .A1(n61), .B0(N23), .B1(DIF[14]), .Y(n47) );
  AOI22XL U23 ( .A0(DIF[10]), .A1(n61), .B0(N29), .B1(DIF[14]), .Y(n54) );
  AOI22XL U24 ( .A0(DIF[6]), .A1(n61), .B0(N25), .B1(DIF[14]), .Y(n45) );
  AOI22XL U25 ( .A0(DIF[2]), .A1(n61), .B0(N21), .B1(DIF[14]), .Y(n49) );
  AOI22XL U26 ( .A0(DIF[1]), .A1(n61), .B0(N20), .B1(DIF[14]), .Y(n50) );
  AOI22XL U27 ( .A0(DIF[5]), .A1(n61), .B0(N24), .B1(DIF[14]), .Y(n46) );
  AOI22XL U28 ( .A0(DIF[7]), .A1(n61), .B0(N26), .B1(DIF[14]), .Y(n44) );
  AOI22XL U29 ( .A0(DIF[9]), .A1(n61), .B0(N28), .B1(DIF[14]), .Y(n42) );
  AOI22XL U30 ( .A0(DIF[11]), .A1(n61), .B0(N30), .B1(DIF[14]), .Y(n53) );
  AOI22XL U31 ( .A0(DIF[12]), .A1(n61), .B0(N31), .B1(DIF[14]), .Y(n52) );
  NAND2XL U32 ( .A(sub_61_carry[12]), .B(n25), .Y(n4) );
  OAI32XL U33 ( .A0(n39), .A1(DMLP[11]), .A2(n43), .B0(n42), .B1(DMLP[12]), 
        .Y(n27) );
  NAND2BXL U34 ( .AN(lt_64_A_7_), .B(DMLP[10]), .Y(n28) );
  AOI21XL U35 ( .A0(DMLP[5]), .A1(n49), .B0(n31), .Y(n33) );
  NAND2XL U36 ( .A(n43), .B(DMLP[11]), .Y(n9) );
  AOI22XL U37 ( .A0(N19), .A1(n61), .B0(N19), .B1(DIF[14]), .Y(n55) );
  INVXL U38 ( .A(DMLP[13]), .Y(n60) );
  INVXL U39 ( .A(DMLP[7]), .Y(n56) );
  INVXL U40 ( .A(DMLP[9]), .Y(n58) );
  INVXL U41 ( .A(DMLP[8]), .Y(n57) );
  INVXL U42 ( .A(DMLP[10]), .Y(n59) );
  AOI211XL U43 ( .A0(Y[10]), .A1(Y[9]), .B0(Y[12]), .C0(Y[11]), .Y(n6) );
  NAND4X2 U44 ( .A(n12), .B(n51), .C(n11), .D(n10), .Y(AX) );
  INVX1 U45 ( .A(DIF[1]), .Y(n14) );
  AOI22X1 U46 ( .A0(DIF[13]), .A1(n61), .B0(N32), .B1(DIF[14]), .Y(n51) );
  AOI31X1 U47 ( .A0(n9), .A1(n8), .A2(n7), .B0(n6), .Y(n12) );
  INVX1 U48 ( .A(n47), .Y(lt_64_A_4_) );
  INVX1 U49 ( .A(n45), .Y(lt_64_A_6_) );
  INVX1 U50 ( .A(n54), .Y(lt_64_A_10_) );
  NOR2X1 U51 ( .A(n40), .B(n39), .Y(n7) );
  INVX1 U52 ( .A(n48), .Y(lt_64_A_3_) );
  AOI22X1 U53 ( .A0(DIF[3]), .A1(n61), .B0(N22), .B1(DIF[14]), .Y(n48) );
  INVX1 U54 ( .A(DIF[7]), .Y(n20) );
  INVX1 U55 ( .A(DIF[8]), .Y(n21) );
  INVX1 U56 ( .A(DIF[9]), .Y(n22) );
  INVX1 U57 ( .A(n50), .Y(lt_64_A_1_) );
  INVX1 U58 ( .A(n46), .Y(lt_64_A_5_) );
  INVX1 U59 ( .A(n44), .Y(lt_64_A_7_) );
  XOR2X1 U60 ( .A(DIF[13]), .B(n4), .Y(N32) );
  INVX1 U61 ( .A(DIF[4]), .Y(n17) );
  INVX1 U62 ( .A(DIF[5]), .Y(n18) );
  INVX1 U63 ( .A(DIF[6]), .Y(n19) );
  INVX1 U64 ( .A(DIF[10]), .Y(n23) );
  INVX1 U65 ( .A(DIF[11]), .Y(n24) );
  INVX1 U66 ( .A(DIF[12]), .Y(n25) );
  INVX1 U67 ( .A(DIF[3]), .Y(n16) );
  INVX1 U68 ( .A(DIF[2]), .Y(n15) );
  NOR2X1 U69 ( .A(n37), .B(n38), .Y(n5) );
  INVX1 U70 ( .A(DMLP[4]), .Y(n41) );
  INVX1 U71 ( .A(N19), .Y(n13) );
  XOR2X1 U72 ( .A(n25), .B(sub_61_carry[12]), .Y(N31) );
  XOR2X1 U73 ( .A(n24), .B(sub_61_carry[11]), .Y(N30) );
  XOR2X1 U74 ( .A(n23), .B(sub_61_carry[10]), .Y(N29) );
  XOR2X1 U75 ( .A(n22), .B(sub_61_carry[9]), .Y(N28) );
  XOR2X1 U76 ( .A(n21), .B(sub_61_carry[8]), .Y(N27) );
  XOR2X1 U77 ( .A(n20), .B(sub_61_carry[7]), .Y(N26) );
  XOR2X1 U78 ( .A(n19), .B(sub_61_carry[6]), .Y(N25) );
  XOR2X1 U79 ( .A(n18), .B(sub_61_carry[5]), .Y(N24) );
  XOR2X1 U80 ( .A(n17), .B(sub_61_carry[4]), .Y(N23) );
  AND2X1 U81 ( .A(sub_61_carry[3]), .B(n16), .Y(sub_61_carry[4]) );
  XOR2X1 U82 ( .A(n16), .B(sub_61_carry[3]), .Y(N22) );
  AND2X1 U83 ( .A(sub_61_carry[2]), .B(n15), .Y(sub_61_carry[3]) );
  XOR2X1 U84 ( .A(n15), .B(sub_61_carry[2]), .Y(N21) );
  XOR2X1 U85 ( .A(n14), .B(n13), .Y(N20) );
  NOR2X1 U86 ( .A(n60), .B(lt_64_A_10_), .Y(n40) );
  AND2X1 U87 ( .A(DMLP[12]), .B(n42), .Y(n39) );
  AOI32X1 U88 ( .A0(lt_64_A_6_), .A1(n58), .A2(n28), .B0(n59), .B1(lt_64_A_7_), 
        .Y(n30) );
  OAI21XL U89 ( .A0(lt_64_A_6_), .A1(n58), .B0(n28), .Y(n36) );
  AOI32X1 U90 ( .A0(n32), .A1(n56), .A2(lt_64_A_4_), .B0(lt_64_A_5_), .B1(n57), 
        .Y(n29) );
  NOR2BX1 U91 ( .AN(DMLP[6]), .B(lt_64_A_3_), .Y(n31) );
  OAI32X1 U92 ( .A0(n49), .A1(DMLP[5]), .A2(n31), .B0(DMLP[6]), .B1(n48), .Y(
        n35) );
  OAI221XL U93 ( .A0(lt_64_A_4_), .A1(n56), .B0(n33), .B1(n35), .C0(n32), .Y(
        n38) );
  AOI2BB2X1 U94 ( .B0(DMLP[3]), .B1(n55), .A0N(n41), .A1N(lt_64_A_1_), .Y(n34)
         );
  AOI211X1 U95 ( .A0(lt_64_A_1_), .A1(n41), .B0(n35), .C0(n34), .Y(n37) );
  SUBTC_1_DW01_sub_1 sub_0_root_sub_0_root_sub_59 ( .A({1'b1, 1'b0, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 1'b0, 1'b0}), .B({1'b0, 
        1'b0, DMLP}), .CI(1'b0), .DIFF({SYNOPSYS_UNCONNECTED__0, DIF, N19}) );
endmodule


module FILTC_1_DW01_add_3 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   n1, n3, n4, n5, n7, n8, n9, n10, n13, n14, n15, n16, n17, n18, n19,
         n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n36, n37,
         n38, n39, n44, n45, n47, n54, SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_,
         SUM_6_, SUM_7_, SUM_8_, SUM_9_, B_0_, B_1_, B_2_, B_3_, B_4_, B_5_,
         B_6_, B_7_, B_8_, B_9_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, n90,
         SUM_0_, n92, n93, n94, n95;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign SUM[0] = SUM_0_;

  ADDFX2 U34 ( .A(A_4_), .B(B_4_), .CI(n30), .CO(n29), .S(SUM_4_) );
  ADDFX2 U57 ( .A(A_1_), .B(B_1_), .CI(n45), .CO(n44), .S(SUM_1_) );
  NAND2X2 U67 ( .A(A_6_), .B(B_6_), .Y(n24) );
  NOR2X4 U68 ( .A(A_5_), .B(B_5_), .Y(n27) );
  OAI21X2 U69 ( .A0(n20), .A1(n24), .B0(n21), .Y(n19) );
  NOR2X2 U70 ( .A(n23), .B(n20), .Y(n18) );
  NOR2X2 U71 ( .A(A_6_), .B(B_7_), .Y(n20) );
  NAND2X2 U72 ( .A(A_5_), .B(B_5_), .Y(n28) );
  OAI21X4 U73 ( .A0(n27), .A1(n1), .B0(n28), .Y(n26) );
  AOI21X2 U74 ( .A0(n18), .A1(n26), .B0(n19), .Y(n17) );
  OAI221XL U75 ( .A0(n3), .A1(n31), .B0(n90), .B1(n39), .C0(n36), .Y(n30) );
  INVX1 U76 ( .A(n95), .Y(n90) );
  NOR2BXL U77 ( .AN(n21), .B(n20), .Y(n93) );
  NAND2BX1 U78 ( .AN(n15), .B(n16), .Y(n5) );
  NAND2BX1 U79 ( .AN(n27), .B(n28), .Y(n8) );
  NAND2BXL U80 ( .AN(n23), .B(n24), .Y(n7) );
  OAI21X1 U81 ( .A0(n17), .A1(n15), .B0(n16), .Y(n14) );
  AND2X2 U82 ( .A(n92), .B(n47), .Y(SUM_0_) );
  OR2X2 U83 ( .A(A_0_), .B(B_0_), .Y(n92) );
  XOR2X1 U84 ( .A(n22), .B(n93), .Y(SUM_7_) );
  XOR2XL U85 ( .A(n7), .B(n25), .Y(SUM_6_) );
  NOR2X1 U86 ( .A(A_6_), .B(B_6_), .Y(n23) );
  NOR2XL U87 ( .A(A_2_), .B(B_2_), .Y(n38) );
  NAND2XL U88 ( .A(A_2_), .B(B_2_), .Y(n39) );
  NAND2XL U89 ( .A(A_3_), .B(B_3_), .Y(n36) );
  OR2XL U90 ( .A(A_3_), .B(B_3_), .Y(n95) );
  NAND2XL U91 ( .A(A_6_), .B(B_8_), .Y(n16) );
  INVX1 U92 ( .A(n26), .Y(n25) );
  INVX1 U93 ( .A(n29), .Y(n1) );
  OAI21XL U94 ( .A0(n25), .A1(n23), .B0(n24), .Y(n22) );
  XNOR2X1 U95 ( .A(n8), .B(n29), .Y(SUM_5_) );
  XNOR2X1 U96 ( .A(n14), .B(n4), .Y(SUM_9_) );
  NAND2X1 U97 ( .A(n94), .B(n13), .Y(n4) );
  XOR2X1 U98 ( .A(n17), .B(n5), .Y(SUM_8_) );
  XNOR2X1 U99 ( .A(n10), .B(n44), .Y(SUM_2_) );
  NAND2X1 U100 ( .A(n54), .B(n39), .Y(n10) );
  XNOR2X1 U101 ( .A(n37), .B(n9), .Y(SUM_3_) );
  NAND2X1 U102 ( .A(n95), .B(n36), .Y(n9) );
  OAI21XL U103 ( .A0(n3), .A1(n38), .B0(n39), .Y(n37) );
  INVX1 U104 ( .A(n44), .Y(n3) );
  INVX1 U105 ( .A(n38), .Y(n54) );
  NAND2X1 U106 ( .A(n95), .B(n54), .Y(n31) );
  NOR2X1 U107 ( .A(A_6_), .B(B_8_), .Y(n15) );
  NAND2X1 U108 ( .A(A_6_), .B(B_7_), .Y(n21) );
  NAND2XL U109 ( .A(A_6_), .B(B_9_), .Y(n13) );
  OR2XL U110 ( .A(A_6_), .B(B_9_), .Y(n94) );
  INVX1 U111 ( .A(n47), .Y(n45) );
  NAND2X1 U112 ( .A(A_0_), .B(B_0_), .Y(n47) );
endmodule


module FILTC_1 ( AX, AP, APP );
  input [9:0] AP;
  output [9:0] APP;
  input AX;
  wire   DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_, N0, n1,
         n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14;
  assign N0 = AP[0];

  XOR2X2 U3 ( .A(AX), .B(n8), .Y(DIFSX_5_) );
  NAND2X1 U4 ( .A(AX), .B(n8), .Y(n1) );
  XOR2X1 U5 ( .A(n7), .B(n3), .Y(n8) );
  NOR2XL U6 ( .A(n13), .B(AP[4]), .Y(n4) );
  NOR2XL U7 ( .A(AP[3]), .B(AP[2]), .Y(n5) );
  XOR2XL U8 ( .A(n11), .B(AP[6]), .Y(DIFSX_2_) );
  XOR2XL U9 ( .A(n13), .B(AP[4]), .Y(DIFSX_0_) );
  INVXL U10 ( .A(AP[5]), .Y(n12) );
  XOR2XL U11 ( .A(n10), .B(AP[7]), .Y(DIFSX_3_) );
  XOR2XL U12 ( .A(n9), .B(AP[8]), .Y(DIFSX_4_) );
  OR2XL U13 ( .A(n10), .B(AP[7]), .Y(n9) );
  OR2XL U14 ( .A(n11), .B(AP[6]), .Y(n10) );
  NAND2X1 U15 ( .A(n3), .B(n7), .Y(n2) );
  AND2X4 U16 ( .A(n1), .B(n2), .Y(n14) );
  NOR2XL U17 ( .A(n9), .B(AP[8]), .Y(n3) );
  INVXL U18 ( .A(AP[9]), .Y(n7) );
  NAND2X1 U19 ( .A(n4), .B(n12), .Y(n11) );
  XOR2X1 U20 ( .A(n12), .B(n4), .Y(DIFSX_1_) );
  NAND2X1 U21 ( .A(n6), .B(n5), .Y(n13) );
  NOR2X1 U22 ( .A(AP[1]), .B(N0), .Y(n6) );
  FILTC_1_DW01_add_3 add_88 ( .A({n14, n14, n14, n14, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .B({AP[9:1], N0}), .CI(1'b0), 
        .SUM(APP) );
endmodule


module TRIGA_1 ( TR, APP, APR );
  input [9:0] APP;
  output [9:0] APR;
  input TR;
  wire   n1;

  NOR2BX1 U3 ( .AN(APP[9]), .B(TR), .Y(APR[9]) );
  NOR2BXL U4 ( .AN(APP[6]), .B(TR), .Y(APR[6]) );
  NOR2BXL U5 ( .AN(APP[5]), .B(TR), .Y(APR[5]) );
  INVX1 U6 ( .A(TR), .Y(n1) );
  NOR2BX1 U7 ( .AN(APP[7]), .B(TR), .Y(APR[7]) );
  NAND2BX1 U8 ( .AN(APP[8]), .B(n1), .Y(APR[8]) );
  NOR2BX1 U9 ( .AN(APP[0]), .B(TR), .Y(APR[0]) );
  NOR2BX1 U10 ( .AN(APP[1]), .B(TR), .Y(APR[1]) );
  NOR2BX1 U11 ( .AN(APP[2]), .B(TR), .Y(APR[2]) );
  NOR2BX1 U12 ( .AN(APP[3]), .B(TR), .Y(APR[3]) );
  NOR2BX1 U13 ( .AN(APP[4]), .B(TR), .Y(APR[4]) );
endmodule


module LIMA_1 ( AP, AL );
  input [9:0] AP;
  output [6:0] AL;
  wire   AP_8_, AL_5_, AL_4_, AL_3_, AL_2_, AL_1_, AL_0_, n1;
  assign AL[6] = AP_8_;
  assign AP_8_ = AP[8];
  assign AL[5] = AL_5_;
  assign AL[4] = AL_4_;
  assign AL[3] = AL_3_;
  assign AL[2] = AL_2_;
  assign AL[1] = AL_1_;
  assign AL[0] = AL_0_;

  AND2X2 U3 ( .A(n1), .B(AP[3]), .Y(AL_1_) );
  AND2X2 U4 ( .A(n1), .B(AP[2]), .Y(AL_0_) );
  AND2X2 U5 ( .A(n1), .B(AP[5]), .Y(AL_3_) );
  AND2X2 U6 ( .A(n1), .B(AP[6]), .Y(AL_4_) );
  AND2X2 U7 ( .A(n1), .B(AP[7]), .Y(AL_5_) );
  AND2X1 U8 ( .A(n1), .B(AP[4]), .Y(AL_2_) );
  NAND2BX2 U9 ( .AN(AP[9]), .B(AP_8_), .Y(n1) );
endmodule


module DELAY_RESET_STATE0_WIDTH10_1_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [9:0] x;
  output [9:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [9:0] delay0;
  wire   [9:0] delay1;
  wire   [9:0] delay2;
  wire   [9:0] delay3;
  wire   [9:0] delay4;
  wire   [9:0] delay5;
  wire   [9:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n2) );
  INVX1 U4 ( .A(reset), .Y(n1) );
  INVX1 U5 ( .A(reset), .Y(n3) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[9]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[9]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[2]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[5]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[4]) );
  SDFFRHQX1 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
endmodule


module ADAP_SPED_CTL_1_test_1 ( I, RATE, TDP, Y, TR, reset, CLK, AL, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [4:0] I;
  input [1:0] RATE;
  input [12:0] Y;
  output [6:0] AL;
  input TDP, TR, reset, CLK, scan_enable, scan_in0, scan_in1, scan_in2,
         scan_in3, scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   AX, n1, n2;
  wire   [2:0] FI;
  wire   [11:0] DMS;
  wire   [11:0] DMSP;
  wire   [13:0] DML;
  wire   [13:0] DMLP;
  wire   [9:0] AP;
  wire   [9:0] APP;
  wire   [9:0] APR;
  assign test_so = DMS[11];

  INVX1 U1 ( .A(n2), .Y(n1) );
  INVX1 U2 ( .A(I[1]), .Y(n2) );
  FUNCTF_1 func ( .I({I[4:2], n1, I[0]}), .RATE(RATE), .FI(FI) );
  FILTA_1 filt ( .FI(FI), .DMS(DMS), .DMSP(DMSP) );
  DELAY_RESET_STATE0_WIDTH12_1_test_1 del ( .x(DMSP), .reset(reset), .y(DMS), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(AP[9]), 
        .test_se(test_se) );
  FILTB_1 filt_b ( .FI(FI), .DML(DML), .DMLP(DMLP) );
  DELAY_RESET_STATE0_WIDTH14_1_test_1 del2 ( .x(DMLP), .reset(reset), .y(DML), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), 
        .test_se(test_se) );
  SUBTC_1 sub1 ( .DMSP(DMSP), .DMLP(DMLP), .TDP(TDP), .Y(Y), .AX(AX) );
  FILTC_1 filt_c ( .AX(AX), .AP(AP), .APP(APP) );
  TRIGA_1 trig ( .TR(TR), .APP(APP), .APR(APR) );
  LIMA_1 lim ( .AP(AP), .AL(AL) );
  DELAY_RESET_STATE0_WIDTH10_1_test_1 del3 ( .x(APR), .reset(reset), .y(AP), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(DML[13]), 
        .test_se(test_se) );
endmodule


module TONE_1 ( A2P, TDP );
  input [15:0] A2P;
  output TDP;
  wire   N1, n2, n3, n4, n5;

  OAI21X1 U3 ( .A0(A2P[10]), .A1(A2P[9]), .B0(A2P[12]), .Y(n3) );
  BUFX3 U4 ( .A(N1), .Y(TDP) );
  NAND3BX1 U5 ( .AN(A2P[13]), .B(n3), .C(n2), .Y(n5) );
  INVXL U6 ( .A(A2P[15]), .Y(n4) );
  NAND2X1 U7 ( .A(A2P[11]), .B(A2P[12]), .Y(n2) );
  AOI21X1 U8 ( .A0(A2P[14]), .A1(n5), .B0(n4), .Y(N1) );
endmodule


module TRIGB_1 ( TR, nP, nR );
  input [0:0] nP;
  output [0:0] nR;
  input TR;
  wire   nP_0_, nR_0_;
  assign nP_0_ = nP[0];
  assign nR[0] = nR_0_;

  NOR2BX1 U2 ( .AN(nP_0_), .B(TR), .Y(nR_0_) );
endmodule


module DELAY_WIDTH1_1_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
  SDFFRHQXL delay0_reg_0_ ( .D(x_0_), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0_0_) );
endmodule


module TRANS_1_DW01_add_0 ( A, B, CI, SUM, CO );
  input [20:0] A;
  input [20:0] B;
  output [20:0] SUM;
  input CI;
  output CO;
  wire   carry_9_, carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_,
         carry_2_, carry_20_, carry_1_, carry_19_, carry_18_, carry_17_,
         carry_16_, carry_15_, carry_14_, carry_13_, carry_12_, carry_11_,
         carry_10_;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(carry_1_), .CO(carry_2_), .S(SUM[1])
         );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry_16_), .CO(carry_17_), .S(
        SUM[16]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry_15_), .CO(carry_16_), .S(
        SUM[15]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry_14_), .CO(carry_15_), .S(
        SUM[14]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry_18_), .CO(carry_19_), .S(
        SUM[18]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(carry_9_), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry_12_), .CO(carry_13_), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry_11_), .CO(carry_12_), .S(
        SUM[11]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry_9_), .CO(carry_10_), .S(SUM[9])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry_13_), .CO(carry_14_), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry_10_), .CO(carry_11_), .S(
        SUM[10]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry_17_), .CO(carry_18_), .S(
        SUM[17]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry_19_), .CO(carry_20_), .S(
        SUM[19]) );
  XOR2X1 U1 ( .A(A[20]), .B(carry_20_), .Y(SUM[20]) );
  AND2X1 U2 ( .A(B[0]), .B(A[0]), .Y(carry_1_) );
endmodule


module TRANS_1 ( TD, YL, DQ, TR );
  input [18:0] YL;
  input [15:0] DQ;
  input TD;
  output TR;
  wire   N3, N4, DQTHR_9_, DQTHR_8_, DQTHR_7_, DQTHR_6_, DQTHR_5_, DQTHR_4_,
         DQTHR_3_, DQTHR_2_, DQTHR_1_, DQTHR_19_, DQTHR_18_, DQTHR_17_,
         DQTHR_16_, DQTHR_15_, DQTHR_14_, DQTHR_13_, DQTHR_12_, DQTHR_11_,
         DQTHR_10_, DQTHR_0_, n17, n5, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, SYNOPSYS_UNCONNECTED__0;
  wire   [12:8] THR1;
  wire   [20:0] THR2;
  assign TR = N4;

  AND2X2 U11 ( .A(THR1[9]), .B(n8), .Y(THR2[9]) );
  AND2X2 U12 ( .A(THR1[8]), .B(n17), .Y(THR2[8]) );
  AND2X2 U33 ( .A(TD), .B(N3), .Y(N4) );
  NOR3BX1 U3 ( .AN(n9), .B(n7), .C(n82), .Y(THR2[4]) );
  OAI21XL U4 ( .A0(n58), .A1(n83), .B0(n9), .Y(THR2[13]) );
  OAI21XL U5 ( .A0(n58), .A1(n84), .B0(n17), .Y(THR2[14]) );
  NOR3X1 U6 ( .A(n58), .B(n5), .C(n85), .Y(THR2[15]) );
  NOR3X1 U8 ( .A(n58), .B(n5), .C(n87), .Y(THR2[16]) );
  NOR3BX1 U13 ( .AN(n8), .B(n7), .C(n81), .Y(THR2[3]) );
  NOR3BX1 U14 ( .AN(n17), .B(n7), .C(n80), .Y(THR2[2]) );
  NOR3BX1 U15 ( .AN(n17), .B(n7), .C(n83), .Y(THR2[5]) );
  NOR3BX1 U16 ( .AN(n8), .B(n7), .C(n84), .Y(THR2[6]) );
  NOR3BX1 U17 ( .AN(n9), .B(n7), .C(n85), .Y(THR2[7]) );
  NOR3X1 U18 ( .A(n58), .B(n5), .C(n89), .Y(THR2[17]) );
  NOR3X1 U20 ( .A(n58), .B(n5), .C(n79), .Y(THR2[20]) );
  NOR3BX1 U22 ( .AN(n8), .B(n7), .C(n86), .Y(THR2[0]) );
  NOR3BX1 U23 ( .AN(n8), .B(n7), .C(n88), .Y(THR2[1]) );
  NOR3X1 U24 ( .A(n58), .B(n5), .C(n76), .Y(THR2[18]) );
  INVX1 U25 ( .A(n9), .Y(n5) );
  NOR3X1 U26 ( .A(n58), .B(n5), .C(n77), .Y(THR2[19]) );
  INVXL U28 ( .A(DQ[7]), .Y(n50) );
  NAND2XL U29 ( .A(DQ[14]), .B(n47), .Y(n15) );
  INVXL U30 ( .A(DQ[9]), .Y(n48) );
  INVXL U31 ( .A(YL[17]), .Y(n59) );
  BUFX1 U32 ( .A(YL[18]), .Y(n7) );
  MX2XL U35 ( .A(YL[11]), .B(YL[10]), .S0(YL[15]), .Y(n66) );
  MX2XL U36 ( .A(YL[12]), .B(YL[11]), .S0(YL[15]), .Y(n63) );
  OR2XL U37 ( .A(n65), .B(YL[17]), .Y(n86) );
  OR2XL U38 ( .A(n78), .B(YL[17]), .Y(n88) );
  MX2XL U39 ( .A(YL[13]), .B(YL[12]), .S0(YL[15]), .Y(n67) );
  MX2XL U40 ( .A(YL[14]), .B(YL[13]), .S0(YL[15]), .Y(n64) );
  NAND2XL U41 ( .A(YL[17]), .B(n69), .Y(n76) );
  NAND2XL U42 ( .A(n71), .B(YL[17]), .Y(n77) );
  NAND2XL U43 ( .A(n74), .B(YL[17]), .Y(n79) );
  INVX1 U44 ( .A(DQ[8]), .Y(n49) );
  INVX1 U45 ( .A(DQ[10]), .Y(n57) );
  INVX1 U46 ( .A(DQ[11]), .Y(n56) );
  INVXL U47 ( .A(DQ[6]), .Y(n51) );
  INVX1 U48 ( .A(n15), .Y(n55) );
  INVXL U49 ( .A(DQ[4]), .Y(n53) );
  INVX1 U50 ( .A(DQTHR_13_), .Y(n46) );
  INVXL U51 ( .A(DQ[5]), .Y(n52) );
  INVX1 U52 ( .A(DQTHR_12_), .Y(n45) );
  INVX1 U53 ( .A(DQTHR_14_), .Y(n47) );
  INVX1 U54 ( .A(DQTHR_3_), .Y(n44) );
  INVX1 U55 ( .A(DQTHR_2_), .Y(n43) );
  INVX1 U56 ( .A(DQTHR_0_), .Y(n42) );
  INVXL U57 ( .A(DQ[1]), .Y(n54) );
  MXI2X1 U58 ( .A(n87), .B(n86), .S0(n7), .Y(THR1[8]) );
  NAND2X1 U59 ( .A(n70), .B(n59), .Y(n80) );
  NAND2X1 U60 ( .A(n72), .B(n59), .Y(n81) );
  MXI2X1 U61 ( .A(n70), .B(n69), .S0(n59), .Y(n84) );
  MXI2X1 U62 ( .A(n61), .B(n74), .S0(n59), .Y(n87) );
  INVX1 U63 ( .A(n73), .Y(n61) );
  MX2X1 U64 ( .A(n78), .B(n75), .S0(n59), .Y(n83) );
  MX2X1 U65 ( .A(n65), .B(n73), .S0(n59), .Y(n82) );
  MX2X1 U66 ( .A(n62), .B(n63), .S0(n60), .Y(n70) );
  MX2X1 U67 ( .A(n66), .B(n67), .S0(n60), .Y(n72) );
  NAND2X1 U68 ( .A(n62), .B(n60), .Y(n65) );
  NAND2X1 U69 ( .A(n66), .B(n60), .Y(n78) );
  NAND2BX1 U70 ( .AN(THR1[10]), .B(n9), .Y(THR2[10]) );
  MXI2X1 U71 ( .A(n76), .B(n80), .S0(n7), .Y(THR1[10]) );
  NAND2BX1 U72 ( .AN(THR1[12]), .B(n8), .Y(THR2[12]) );
  MXI2X1 U73 ( .A(n79), .B(n82), .S0(n7), .Y(THR1[12]) );
  NAND2BX1 U74 ( .AN(THR1[11]), .B(n17), .Y(THR2[11]) );
  MXI2X1 U75 ( .A(n77), .B(n81), .S0(n7), .Y(THR1[11]) );
  MXI2X1 U76 ( .A(n89), .B(n88), .S0(n7), .Y(THR1[9]) );
  MXI2X1 U77 ( .A(n72), .B(n71), .S0(n59), .Y(n85) );
  OR2X2 U78 ( .A(n75), .B(n59), .Y(n89) );
  INVX1 U79 ( .A(n7), .Y(n58) );
  MX2XL U80 ( .A(n64), .B(YL[15]), .S0(n60), .Y(n69) );
  NOR2BXL U81 ( .AN(YL[10]), .B(YL[15]), .Y(n62) );
  NAND2BXL U82 ( .AN(YL[14]), .B(YL[15]), .Y(n68) );
  NOR2BX1 U83 ( .AN(YL[15]), .B(n60), .Y(n74) );
  AND2X1 U84 ( .A(n68), .B(YL[16]), .Y(n71) );
  OAI21XL U85 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n9) );
  MXI2XL U86 ( .A(n68), .B(n67), .S0(YL[16]), .Y(n75) );
  OAI21XL U87 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n17) );
  MXI2XL U88 ( .A(n64), .B(n63), .S0(YL[16]), .Y(n73) );
  OAI21XL U89 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n8) );
  OR2X1 U90 ( .A(DQTHR_11_), .B(n56), .Y(n10) );
  AOI32X1 U91 ( .A0(DQTHR_10_), .A1(n57), .A2(n10), .B0(n56), .B1(DQTHR_11_), 
        .Y(n12) );
  OAI21XL U92 ( .A0(DQTHR_10_), .A1(n57), .B0(n10), .Y(n34) );
  NAND2BX1 U93 ( .AN(DQTHR_9_), .B(DQ[9]), .Y(n33) );
  AOI32X1 U94 ( .A0(n33), .A1(n49), .A2(DQTHR_8_), .B0(DQTHR_9_), .B1(n48), 
        .Y(n11) );
  AOI22X1 U95 ( .A0(n12), .A1(n34), .B0(n11), .B1(n12), .Y(n21) );
  NOR2BX1 U96 ( .AN(DQ[13]), .B(DQTHR_13_), .Y(n14) );
  AOI211X1 U97 ( .A0(n45), .A1(DQ[12]), .B0(n14), .C0(n55), .Y(n36) );
  NOR2X1 U98 ( .A(DQTHR_16_), .B(DQTHR_15_), .Y(n13) );
  OAI21XL U99 ( .A0(DQ[14]), .A1(n47), .B0(n13), .Y(n19) );
  OAI32X1 U100 ( .A0(n45), .A1(DQ[12]), .A2(n14), .B0(DQ[13]), .B1(n46), .Y(
        n18) );
  OAI22X1 U101 ( .A0(n19), .A1(n18), .B0(n19), .B1(n15), .Y(n20) );
  OAI2BB1X1 U102 ( .A0N(n21), .A1N(n36), .B0(n20), .Y(n40) );
  OR2X1 U103 ( .A(DQTHR_7_), .B(n50), .Y(n22) );
  AOI32X1 U104 ( .A0(DQTHR_6_), .A1(n51), .A2(n22), .B0(n50), .B1(DQTHR_7_), 
        .Y(n24) );
  OAI21XL U105 ( .A0(DQTHR_6_), .A1(n51), .B0(n22), .Y(n30) );
  NAND2BX1 U106 ( .AN(DQTHR_5_), .B(DQ[5]), .Y(n26) );
  AOI32X1 U107 ( .A0(n26), .A1(n53), .A2(DQTHR_4_), .B0(DQTHR_5_), .B1(n52), 
        .Y(n23) );
  AOI22X1 U108 ( .A0(n24), .A1(n30), .B0(n23), .B1(n24), .Y(n39) );
  AND2X1 U109 ( .A(DQ[3]), .B(n44), .Y(n25) );
  AOI21X1 U110 ( .A0(DQ[2]), .A1(n43), .B0(n25), .Y(n27) );
  OAI32X1 U111 ( .A0(n43), .A1(DQ[2]), .A2(n25), .B0(DQ[3]), .B1(n44), .Y(n29)
         );
  OAI221XL U112 ( .A0(DQTHR_4_), .A1(n53), .B0(n27), .B1(n29), .C0(n26), .Y(
        n32) );
  AOI2BB2X1 U113 ( .B0(DQ[0]), .B1(n42), .A0N(n54), .A1N(DQTHR_1_), .Y(n28) );
  AOI211X1 U114 ( .A0(DQTHR_1_), .A1(n54), .B0(n29), .C0(n28), .Y(n31) );
  NOR3X1 U115 ( .A(n32), .B(n31), .C(n30), .Y(n38) );
  OAI21XL U116 ( .A0(DQTHR_8_), .A1(n49), .B0(n33), .Y(n35) );
  NOR3BX1 U117 ( .AN(n36), .B(n35), .C(n34), .Y(n37) );
  OAI32X1 U118 ( .A0(n40), .A1(n39), .A2(n38), .B0(n37), .B1(n40), .Y(n41) );
  NOR4BX1 U119 ( .AN(n41), .B(DQTHR_19_), .C(DQTHR_18_), .D(DQTHR_17_), .Y(N3)
         );
  INVX1 U1 ( .A(YL[16]), .Y(n60) );
  TRANS_1_DW01_add_0 add_62 ( .A(THR2), .B({1'b0, THR2[20:1]}), .CI(1'b0), 
        .SUM({DQTHR_19_, DQTHR_18_, DQTHR_17_, DQTHR_16_, DQTHR_15_, DQTHR_14_, 
        DQTHR_13_, DQTHR_12_, DQTHR_11_, DQTHR_10_, DQTHR_9_, DQTHR_8_, 
        DQTHR_7_, DQTHR_6_, DQTHR_5_, DQTHR_4_, DQTHR_3_, DQTHR_2_, DQTHR_1_, 
        DQTHR_0_, SYNOPSYS_UNCONNECTED__0}) );
endmodule


module TON_TRAN_DET_1_test_1 ( A2P, reset, YL, DQ, TDP, TR, clk, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_mode, scan_enable, test_si, 
        test_so, test_se );
  input [15:0] A2P;
  input [18:0] YL;
  input [15:0] DQ;
  input reset, clk, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4,
         test_mode, scan_enable, test_si, test_se;
  output TDP, TR, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4,
         test_so;
  wire   n2, w_tdr, w_td;
  assign test_so = w_td;

  BUFX3 U1 ( .A(n2), .Y(TR) );
  TONE_1 ton_tran_det_TONE ( .A2P(A2P), .TDP(TDP) );
  TRIGB_1 ton_tran_det_TRIGB ( .TR(TR), .nP(TDP), .nR(w_tdr) );
  DELAY_WIDTH1_1_test_1 ton_tran_det_DELAY ( .x(w_tdr), .reset(reset), .y(w_td), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(
        1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(
        test_se) );
  TRANS_1 ton_tran_det_TRANS ( .TD(w_td), .YL(YL), .DQ(DQ), .TR(n2) );
endmodule


module CU_1_test_1 ( reset, FSYNC_IN, FSYNC_OUT, NOT_CH_CLK_IN, CH_CLK_OUT, 
        clk, FA_start, FA_done, delay_strobe, scan_enable, test_mode, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, RF_WR_ADDR, RF_RD_ADDR, RF_WR, RF_RD, 
        test_si2, test_si1, test_so1, test_se );
  output [2:0] RF_WR_ADDR;
  output [2:0] RF_RD_ADDR;
  input reset, FSYNC_IN, FSYNC_OUT, NOT_CH_CLK_IN, CH_CLK_OUT, clk, FA_done,
         scan_enable, test_mode, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output FA_start, delay_strobe, scan_out0, scan_out1, scan_out2, scan_out3,
         scan_out4, RF_WR, RF_RD, test_so1;
  wire   delay_strobe_buff_in, delay_strobe_r, RF_WR_buff_in, RF_WR_r,
         RF_RD_buff_in, IN_WAIT_STATE, N18, N19, N20, N21, N22, out_wait_state,
         N32, N34, N37, N38, N39, N40, OUT_WRITE_STATE, N65, N75, N76, N77,
         n25, n26, n27, n28, n29, n36, n39, n41, n43, n45, n46, n47, n48, n49,
         n50, n51, n52, n53, n54, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n1,
         n4, n5, n6, n7, n8, n9, n10, n12, n13, n14, n16, n17, n18, n19, n20,
         n2;
  wire   [4:0] IN_WAIT_CNT;
  wire   [4:0] OUT_WAIT_CNT;
  wire   [4:2] add_173_carry;
  wire   [4:2] add_131_carry;
  assign test_so1 = out_wait_state;

  CLKBUFX20 delay_buf ( .A(delay_strobe_buff_in), .Y(delay_strobe) );
  CLKBUFX20 RF_buf1 ( .A(RF_WR_buff_in), .Y(RF_WR) );
  CLKBUFX20 RF_buf2 ( .A(RF_RD_buff_in), .Y(RF_RD) );
  AND2X2 C352 ( .A(NOT_CH_CLK_IN), .B(FSYNC_IN), .Y(N32) );
  AND2X2 U42 ( .A(n64), .B(n63), .Y(n59) );
  AND4X2 U47 ( .A(OUT_WAIT_CNT[4]), .B(OUT_WAIT_CNT[0]), .C(n66), .D(n12), .Y(
        n76) );
  CLKINVX4 U78 ( .A(CH_CLK_OUT), .Y(n43) );
  OAI31X1 U3 ( .A0(OUT_WAIT_CNT[3]), .A1(OUT_WAIT_CNT[2]), .A2(OUT_WAIT_CNT[1]), .B0(OUT_WAIT_CNT[4]), .Y(N34) );
  MX2X1 U4 ( .A(n51), .B(n50), .S0(OUT_WAIT_CNT[0]), .Y(n6) );
  OAI21XL U5 ( .A0(n1), .A1(test_mode), .B0(n68), .Y(RF_RD_buff_in) );
  INVX1 U6 ( .A(test_mode), .Y(n4) );
  INVX1 U7 ( .A(n63), .Y(n29) );
  NOR2BX1 U8 ( .AN(n56), .B(n50), .Y(n51) );
  INVX1 U9 ( .A(reset), .Y(n5) );
  NOR2X1 U10 ( .A(FSYNC_OUT), .B(RF_RD_ADDR[0]), .Y(N75) );
  OAI21XL U11 ( .A0(n69), .A1(n41), .B0(n70), .Y(N77) );
  NAND4BXL U12 ( .AN(FSYNC_OUT), .B(RF_RD_ADDR[1]), .C(RF_RD_ADDR[0]), .D(n41), 
        .Y(n70) );
  AOI2BB1X1 U13 ( .A0N(FSYNC_OUT), .A1N(RF_RD_ADDR[1]), .B0(N75), .Y(n69) );
  NOR2X1 U14 ( .A(FSYNC_OUT), .B(n71), .Y(N76) );
  XNOR2X1 U15 ( .A(RF_RD_ADDR[0]), .B(RF_RD_ADDR[1]), .Y(n71) );
  NAND2X1 U16 ( .A(IN_WAIT_CNT[4]), .B(n64), .Y(n63) );
  NAND2BX1 U17 ( .AN(IN_WAIT_STATE), .B(NOT_CH_CLK_IN), .Y(n64) );
  OAI2BB1X1 U18 ( .A0N(N22), .A1N(n59), .B0(n63), .Y(n74) );
  INVX1 U19 ( .A(n58), .Y(n28) );
  AOI22X1 U20 ( .A0(n29), .A1(IN_WAIT_CNT[3]), .B0(N21), .B1(n59), .Y(n58) );
  INVX1 U21 ( .A(n60), .Y(n27) );
  AOI22X1 U22 ( .A0(n29), .A1(IN_WAIT_CNT[2]), .B0(N20), .B1(n59), .Y(n60) );
  INVX1 U23 ( .A(n61), .Y(n26) );
  AOI22X1 U24 ( .A0(n29), .A1(IN_WAIT_CNT[1]), .B0(N19), .B1(n59), .Y(n61) );
  INVX1 U25 ( .A(n62), .Y(n25) );
  AOI22X1 U26 ( .A0(n29), .A1(IN_WAIT_CNT[0]), .B0(N18), .B1(n59), .Y(n62) );
  INVX1 U27 ( .A(IN_WAIT_CNT[0]), .Y(N18) );
  OAI32X1 U28 ( .A0(n45), .A1(RF_WR_ADDR[1]), .A2(n39), .B0(n36), .B1(n13), 
        .Y(n72) );
  INVX1 U29 ( .A(n46), .Y(n36) );
  OAI21XL U30 ( .A0(RF_WR_ADDR[0]), .A1(n45), .B0(n47), .Y(n46) );
  NAND2BX1 U31 ( .AN(N32), .B(n45), .Y(n47) );
  OAI32X1 U32 ( .A0(n45), .A1(n39), .A2(n13), .B0(n48), .B1(n14), .Y(n73) );
  NOR2BX1 U33 ( .AN(n45), .B(n46), .Y(n48) );
  NOR2X1 U34 ( .A(OUT_WRITE_STATE), .B(n43), .Y(N65) );
  OAI31X1 U35 ( .A0(n14), .A1(n39), .A2(n13), .B0(n76), .Y(n45) );
  INVX1 U36 ( .A(RF_WR_ADDR[2]), .Y(n14) );
  INVX1 U37 ( .A(RF_WR_ADDR[1]), .Y(n13) );
  ADDHXL U38 ( .A(IN_WAIT_CNT[1]), .B(IN_WAIT_CNT[0]), .CO(add_131_carry[2]), 
        .S(N19) );
  ADDHXL U39 ( .A(IN_WAIT_CNT[2]), .B(add_131_carry[2]), .CO(add_131_carry[3]), 
        .S(N20) );
  ADDHXL U40 ( .A(OUT_WAIT_CNT[1]), .B(OUT_WAIT_CNT[0]), .CO(add_173_carry[2]), 
        .S(N37) );
  ADDHXL U41 ( .A(OUT_WAIT_CNT[2]), .B(add_173_carry[2]), .CO(add_173_carry[3]), .S(N38) );
  NAND2BX1 U43 ( .AN(out_wait_state), .B(FA_done), .Y(n56) );
  NOR2X1 U45 ( .A(OUT_WAIT_CNT[3]), .B(OUT_WAIT_CNT[2]), .Y(n66) );
  ADDHXL U46 ( .A(IN_WAIT_CNT[3]), .B(add_131_carry[3]), .CO(add_131_carry[4]), 
        .S(N21) );
  ADDHXL U48 ( .A(OUT_WAIT_CNT[3]), .B(add_173_carry[3]), .CO(add_173_carry[4]), .S(N39) );
  NAND2X1 U49 ( .A(n57), .B(n5), .Y(n50) );
  OAI2BB1X1 U50 ( .A0N(N34), .A1N(FA_done), .B0(n56), .Y(n57) );
  INVX1 U51 ( .A(n53), .Y(n8) );
  AOI22X1 U52 ( .A0(n50), .A1(OUT_WAIT_CNT[1]), .B0(N37), .B1(n51), .Y(n53) );
  INVX1 U53 ( .A(n52), .Y(n9) );
  AOI22X1 U54 ( .A0(n50), .A1(OUT_WAIT_CNT[2]), .B0(N38), .B1(n51), .Y(n52) );
  INVX1 U55 ( .A(n49), .Y(n10) );
  AOI22X1 U56 ( .A0(n50), .A1(OUT_WAIT_CNT[3]), .B0(N39), .B1(n51), .Y(n49) );
  INVX1 U57 ( .A(n54), .Y(n7) );
  AOI22X1 U58 ( .A0(n50), .A1(OUT_WAIT_CNT[4]), .B0(N40), .B1(n51), .Y(n54) );
  NAND3BX1 U60 ( .AN(OUT_WAIT_CNT[4]), .B(OUT_WAIT_CNT[0]), .C(OUT_WAIT_CNT[3]), .Y(n67) );
  NAND3BX1 U63 ( .AN(IN_WAIT_CNT[4]), .B(IN_WAIT_CNT[3]), .C(IN_WAIT_CNT[2]), 
        .Y(n65) );
  NAND2X1 U64 ( .A(test_mode), .B(clk), .Y(n68) );
  OAI2BB1X1 U65 ( .A0N(RF_WR_r), .A1N(n4), .B0(n68), .Y(RF_WR_buff_in) );
  OAI2BB1X1 U66 ( .A0N(delay_strobe_r), .A1N(n4), .B0(n68), .Y(
        delay_strobe_buff_in) );
  XOR2X1 U67 ( .A(add_131_carry[4]), .B(IN_WAIT_CNT[4]), .Y(N22) );
  XOR2X1 U68 ( .A(add_173_carry[4]), .B(OUT_WAIT_CNT[4]), .Y(N40) );
  SEDFFXL RF_RD_r_reg ( .D(N65), .SI(OUT_WRITE_STATE), .E(n5), .SE(test_se), 
        .CK(clk), .Q(n20), .QN(n1) );
  SDFFRHQXL delay_strobe_r_reg ( .D(n76), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(delay_strobe_r) );
  SDFFRHQXL RF_WR_r_reg ( .D(n77), .SI(n20), .SE(test_se), .CK(clk), .RN(n5), 
        .Q(RF_WR_r) );
  SDFFRHQXL OUT_WRITE_STATE_reg ( .D(CH_CLK_OUT), .SI(OUT_WAIT_CNT[4]), .SE(
        test_se), .CK(clk), .RN(n5), .Q(OUT_WRITE_STATE) );
  SDFFRHQXL FA_start_reg ( .D(n75), .SI(test_si2), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(FA_start) );
  SDFFRHQXL IN_WAIT_STATE_reg ( .D(NOT_CH_CLK_IN), .SI(IN_WAIT_CNT[4]), .SE(
        test_se), .CK(clk), .RN(n5), .Q(IN_WAIT_STATE) );
  SDFFRHQXL out_wait_state_reg ( .D(FA_done), .SI(delay_strobe_r), .SE(test_se), .CK(clk), .RN(n5), .Q(out_wait_state) );
  SDFFRHQXL IN_WAIT_CNT_reg_4_ ( .D(n74), .SI(IN_WAIT_CNT[3]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[4]) );
  SDFFRHQXL IN_WAIT_CNT_reg_1_ ( .D(n26), .SI(N18), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(IN_WAIT_CNT[1]) );
  SDFFRHQXL IN_WAIT_CNT_reg_3_ ( .D(n28), .SI(IN_WAIT_CNT[2]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[3]) );
  SDFFRHQXL IN_WAIT_CNT_reg_2_ ( .D(n27), .SI(IN_WAIT_CNT[1]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[2]) );
  SDFFRHQXL IN_WAIT_CNT_reg_0_ ( .D(n25), .SI(FA_start), .SE(test_se), .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[0]) );
  SDFFRHQXL RF_in_state_reg_1_ ( .D(n72), .SI(n39), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[1]) );
  SDFFRHQXL RF_in_state_reg_2_ ( .D(n73), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[2]) );
  SDFFNRX1 RF_STATE_OUT_reg_0_ ( .D(N75), .SI(test_si1), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[0]), .QN(n19) );
  SDFFNRX1 RF_STATE_OUT_reg_2_ ( .D(N77), .SI(n18), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[2]), .QN(n41) );
  SDFFNRX1 RF_STATE_OUT_reg_1_ ( .D(N76), .SI(n19), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[1]), .QN(n18) );
  MXI2X1 u_cell_29321 ( .A(n16), .B(n47), .S0(RF_WR_ADDR[0]), .Y(n17) );
  INVX1 RF_in_state_reg_0__U5 ( .A(n76), .Y(n16) );
  SDFFXL OUT_WAIT_CNT_reg_0_ ( .D(n6), .SI(IN_WAIT_STATE), .SE(test_se), .CK(
        clk), .Q(OUT_WAIT_CNT[0]) );
  SDFFXL OUT_WAIT_CNT_reg_4_ ( .D(n7), .SI(OUT_WAIT_CNT[3]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[4]) );
  SDFFXL OUT_WAIT_CNT_reg_3_ ( .D(n10), .SI(OUT_WAIT_CNT[2]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[3]) );
  SDFFXL OUT_WAIT_CNT_reg_2_ ( .D(n9), .SI(n12), .SE(test_se), .CK(clk), .Q(
        OUT_WAIT_CNT[2]), .QN(n2) );
  SDFFXL OUT_WAIT_CNT_reg_1_ ( .D(n8), .SI(OUT_WAIT_CNT[0]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[1]), .QN(n12) );
  SDFFRHQXL RF_in_state_reg_0_ ( .D(n17), .SI(RF_WR_r), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[0]) );
  NOR3BX1 U1 ( .AN(IN_WAIT_CNT[1]), .B(N18), .C(n65), .Y(n75) );
  NOR3X1 U2 ( .A(n2), .B(n67), .C(n12), .Y(n77) );
  INVX1 U44 ( .A(RF_WR_ADDR[0]), .Y(n39) );
endmodule


module CLOCK_GEN_1_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  INVX1 U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module CLOCK_GEN_1_test_1 ( reset, clk, scan_enable, scan_in0, scan_in1, 
        scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, scan_out2, 
        scan_out3, scan_out4, sys_clk_buffered, f_sync_in, f_sync_in_buffered, 
        f_sync_out_buffered, ch_clk_in, not_ch_clk_in_buffered, 
        ch_clk_out_buffered, test_mode, test_si, test_so, test_se );
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, f_sync_in, ch_clk_in, test_mode, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4,
         sys_clk_buffered, f_sync_in_buffered, f_sync_out_buffered,
         not_ch_clk_in_buffered, ch_clk_out_buffered, test_so;
  wire   not_ch_clk_int, f_sync_in_int, FSYNC_STATE, N14, N15, N16, N17, N18,
         N19, N20, N21, f_sync_in_buf_in, f_sync_out_buf_in, n13, n14, n18,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55,
         n56, n57, n58, n59, n60, n61, n62, net83868, net83883, net114780, n2,
         n4, n5, n6, n7, n8, n9, n10, n11, n12, n15, n16, n17, n19, n20, n21,
         n22, n23, n24, n25, n26, n36, n63, n64, n66, n67, n68, n69, n3, n1,
         n65;
  wire   [7:0] CLK_GEN_COUNTER;
  wire   [3:0] FSYNC_COUNTER;
  assign test_so = not_ch_clk_int;

  CLKBUFX20 f_sync_in_buf ( .A(f_sync_in_buf_in), .Y(f_sync_in_buffered) );
  CLKBUFX20 f_sync_out_buf ( .A(f_sync_out_buf_in), .Y(f_sync_out_buffered) );
  CLKBUFX20 not_ch_clk_buf ( .A(net83883), .Y(not_ch_clk_in_buffered) );
  CLKBUFX20 ch_clk_out_buf ( .A(net83868), .Y(ch_clk_out_buffered) );
  CLKBUFX20 main_clk_buf ( .A(clk), .Y(sys_clk_buffered) );
  AND4X2 U35 ( .A(n57), .B(CLK_GEN_COUNTER[7]), .C(CLK_GEN_COUNTER[3]), .D(n34), .Y(n29) );
  NAND2X1 U5 ( .A(n7), .B(n6), .Y(net83883) );
  NAND2BX1 U6 ( .AN(test_mode), .B(not_ch_clk_int), .Y(n6) );
  NAND2X1 U7 ( .A(n7), .B(n5), .Y(f_sync_in_buf_in) );
  NAND2BX1 U8 ( .AN(test_mode), .B(f_sync_in_int), .Y(n5) );
  NOR3X1 U9 ( .A(n30), .B(reset), .C(n22), .Y(n2) );
  NAND2BX4 U12 ( .AN(n4), .B(clk), .Y(net114780) );
  OAI21X4 U13 ( .A0(test_mode), .A1(n14), .B0(net114780), .Y(f_sync_out_buf_in) );
  NAND2X1 U14 ( .A(test_mode), .B(clk), .Y(n7) );
  INVX1 U15 ( .A(n52), .Y(n21) );
  NAND2X1 U16 ( .A(n31), .B(n8), .Y(n52) );
  NOR3X1 U17 ( .A(n2), .B(n29), .C(n51), .Y(n37) );
  NOR3X1 U18 ( .A(n51), .B(n21), .C(n26), .Y(n48) );
  INVX1 U19 ( .A(n51), .Y(n23) );
  AOI21X1 U20 ( .A0(n26), .A1(n23), .B0(n21), .Y(n50) );
  AOI21X1 U21 ( .A0(n29), .A1(n22), .B0(n30), .Y(n31) );
  INVX1 U22 ( .A(n46), .Y(n22) );
  NOR2X1 U23 ( .A(reset), .B(n64), .Y(n62) );
  INVX1 U24 ( .A(reset), .Y(n8) );
  NOR3X1 U25 ( .A(FSYNC_STATE), .B(reset), .C(n64), .Y(n30) );
  OAI21XL U26 ( .A0(FSYNC_STATE), .A1(n64), .B0(n8), .Y(n51) );
  OAI32X1 U27 ( .A0(n51), .A1(FSYNC_COUNTER[0]), .A2(n21), .B0(n26), .B1(n52), 
        .Y(n60) );
  NAND2X1 U28 ( .A(n23), .B(n56), .Y(n46) );
  NAND4X1 U29 ( .A(FSYNC_COUNTER[3]), .B(n26), .C(n18), .D(n36), .Y(n56) );
  OAI21XL U30 ( .A0(FSYNC_COUNTER[1]), .A1(n51), .B0(n50), .Y(n49) );
  INVX1 U31 ( .A(f_sync_in), .Y(n64) );
  OAI21XL U32 ( .A0(n29), .A1(n30), .B0(n27), .Y(n28) );
  NAND2X1 U33 ( .A(n31), .B(n32), .Y(n27) );
  NAND4X1 U34 ( .A(CLK_GEN_COUNTER[2]), .B(n22), .C(CLK_GEN_COUNTER[5]), .D(
        n33), .Y(n32) );
  OAI21XL U36 ( .A0(n44), .A1(n14), .B0(n24), .Y(n59) );
  INVX1 U37 ( .A(n30), .Y(n24) );
  NOR3X1 U38 ( .A(n45), .B(n46), .C(n26), .Y(n44) );
  NAND3X1 U39 ( .A(n36), .B(n25), .C(n18), .Y(n45) );
  OAI21XL U40 ( .A0(n54), .A1(n25), .B0(n55), .Y(n61) );
  AOI21X1 U41 ( .A0(n23), .A1(n36), .B0(n49), .Y(n54) );
  NAND4X1 U42 ( .A(FSYNC_COUNTER[2]), .B(FSYNC_COUNTER[1]), .C(n48), .D(n25), 
        .Y(n55) );
  INVX1 U43 ( .A(n35), .Y(n20) );
  AOI22X1 U44 ( .A0(CLK_GEN_COUNTER[6]), .A1(n2), .B0(N20), .B1(n37), .Y(n35)
         );
  INVX1 U45 ( .A(n38), .Y(n19) );
  AOI22X1 U46 ( .A0(CLK_GEN_COUNTER[5]), .A1(n2), .B0(N19), .B1(n37), .Y(n38)
         );
  INVX1 U47 ( .A(n39), .Y(n17) );
  AOI22X1 U48 ( .A0(n2), .A1(CLK_GEN_COUNTER[4]), .B0(N18), .B1(n37), .Y(n39)
         );
  INVX1 U49 ( .A(n40), .Y(n16) );
  AOI22X1 U50 ( .A0(CLK_GEN_COUNTER[3]), .A1(n2), .B0(N17), .B1(n37), .Y(n40)
         );
  INVX1 U51 ( .A(n41), .Y(n15) );
  AOI22X1 U52 ( .A0(CLK_GEN_COUNTER[2]), .A1(n2), .B0(N16), .B1(n37), .Y(n41)
         );
  INVX1 U53 ( .A(n42), .Y(n12) );
  AOI22X1 U54 ( .A0(n2), .A1(CLK_GEN_COUNTER[1]), .B0(N15), .B1(n37), .Y(n42)
         );
  INVX1 U55 ( .A(n43), .Y(n11) );
  AOI22X1 U56 ( .A0(n2), .A1(CLK_GEN_COUNTER[0]), .B0(N14), .B1(n37), .Y(n43)
         );
  INVX1 U57 ( .A(n53), .Y(n10) );
  AOI22X1 U58 ( .A0(CLK_GEN_COUNTER[7]), .A1(n2), .B0(N21), .B1(n37), .Y(n53)
         );
  INVX1 U59 ( .A(n47), .Y(n9) );
  AOI32X1 U60 ( .A0(FSYNC_COUNTER[1]), .A1(n36), .A2(n48), .B0(n49), .B1(
        FSYNC_COUNTER[2]), .Y(n47) );
  NOR2X1 U61 ( .A(CLK_GEN_COUNTER[5]), .B(CLK_GEN_COUNTER[2]), .Y(n57) );
  NOR4BX1 U62 ( .AN(CLK_GEN_COUNTER[6]), .B(CLK_GEN_COUNTER[0]), .C(
        CLK_GEN_COUNTER[1]), .D(CLK_GEN_COUNTER[4]), .Y(n34) );
  INVX1 U66 ( .A(ch_clk_in), .Y(n63) );
  SDFFXL f_sync_out_int_reg ( .D(n59), .SI(f_sync_in_int), .SE(test_se), .CK(
        clk), .Q(n69), .QN(n14) );
  SDFFXL ch_clk_out_int_reg ( .D(n58), .SI(FSYNC_STATE), .SE(test_se), .CK(clk), .Q(n68), .QN(n13) );
  SDFFXL FSYNC_COUNTER_reg_1_ ( .D(n67), .SI(FSYNC_COUNTER[0]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[1]), .QN(n18) );
  MXI2X1 u_cell_29168 ( .A(n66), .B(n50), .S0(FSYNC_COUNTER[1]), .Y(n67) );
  INVX1 FSYNC_COUNTER_reg_1__U4 ( .A(n48), .Y(n66) );
  CLOCK_GEN_1_DW01_inc_0 add_86 ( .A(CLK_GEN_COUNTER), .SUM({N21, N20, N19, 
        N18, N17, N16, N15, N14}) );
  OAI21XL U4 ( .A0(n27), .A1(n13), .B0(n28), .Y(n58) );
  INVX1 U3 ( .A(test_mode), .Y(n4) );
  OAI21X4 U11 ( .A0(n13), .A1(test_mode), .B0(n3), .Y(net83868) );
  NAND2BX4 U10 ( .AN(n4), .B(clk), .Y(n3) );
  SDFFXL f_sync_in_int_reg ( .D(f_sync_in), .SI(n68), .SE(test_se), .CK(clk), 
        .Q(f_sync_in_int) );
  SDFFXL not_ch_clk_int_reg ( .D(n63), .SI(n69), .SE(test_se), .CK(clk), .Q(
        not_ch_clk_int) );
  SDFFXL FSYNC_STATE_reg ( .D(n62), .SI(n25), .SE(test_se), .CK(clk), .Q(
        FSYNC_STATE) );
  SDFFXL FSYNC_COUNTER_reg_0_ ( .D(n60), .SI(CLK_GEN_COUNTER[7]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[0]), .QN(n26) );
  SDFFXL FSYNC_COUNTER_reg_3_ ( .D(n61), .SI(FSYNC_COUNTER[2]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[3]), .QN(n25) );
  SDFFXL FSYNC_COUNTER_reg_2_ ( .D(n9), .SI(FSYNC_COUNTER[1]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[2]), .QN(n36) );
  SDFFXL CLK_GEN_COUNTER_reg_7_ ( .D(n10), .SI(CLK_GEN_COUNTER[6]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[7]), .QN(n1) );
  SDFFXL CLK_GEN_COUNTER_reg_6_ ( .D(n20), .SI(CLK_GEN_COUNTER[5]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[6]) );
  SDFFXL CLK_GEN_COUNTER_reg_5_ ( .D(n19), .SI(CLK_GEN_COUNTER[4]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[5]) );
  SDFFXL CLK_GEN_COUNTER_reg_4_ ( .D(n17), .SI(CLK_GEN_COUNTER[3]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[4]) );
  SDFFXL CLK_GEN_COUNTER_reg_3_ ( .D(n16), .SI(CLK_GEN_COUNTER[2]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[3]), .QN(n65) );
  SDFFXL CLK_GEN_COUNTER_reg_2_ ( .D(n15), .SI(CLK_GEN_COUNTER[1]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[2]) );
  SDFFXL CLK_GEN_COUNTER_reg_1_ ( .D(n12), .SI(CLK_GEN_COUNTER[0]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[1]) );
  SDFFXL CLK_GEN_COUNTER_reg_0_ ( .D(n11), .SI(test_si), .SE(test_se), .CK(clk), .Q(CLK_GEN_COUNTER[0]) );
  AND3X2 U1 ( .A(n34), .B(n1), .C(n65), .Y(n33) );
endmodule


module RF_1_test_1 ( data_in, data_out, re_addr, wr_addr, wr_clk, re_clk, 
        reset, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, 
        scan_out1, scan_out2, scan_out3, scan_out4, scan_enable, test_si2, 
        test_si1, test_so1, test_se );
  input [7:0] data_in;
  output [7:0] data_out;
  input [2:0] re_addr;
  input [2:0] wr_addr;
  input wr_clk, re_clk, reset, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, scan_enable, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so1;
  wire   n1, n2, n4, n5, n6, n7, n8, n9, n10, n11, n13, n14, n15, n16, n17,
         n18, n19, n20, n22, n24, n25, n26, n27, n28, n29, n30, n31, n33, n35,
         n36, n37, n38, n39, n40, n41, n42, n43, n44, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n56, n57, n58, n59, n60, n61, n62, n63, n64, n66,
         n67, n68, n69, n70, n71, n72, n73, n74, n76, n77, n78, n79, n80, n81,
         n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95,
         n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n3, n12, n21, n23, n32, n34, n45, n55, n65,
         n75, n123, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134,
         n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145,
         n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156,
         n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n167,
         n168, n169, n170, n171, n172, n173, n174, n175, n176, n177, n178,
         n179, n180, n181, n182, n183, n184, n185, n186, n187, n188, n189,
         n190, n191, n192, n193, n194;
  wire   [63:0] reg_w;
  wire   [7:0] mux_w;
  assign test_so1 = reg_w[63];

  DLY1X1 U3 ( .A(data_in[2]), .Y(n123) );
  BUFX3 U4 ( .A(data_in[0]), .Y(n65) );
  CLKBUFXL U5 ( .A(data_in[1]), .Y(n75) );
  INVX1 U6 ( .A(reset), .Y(n126) );
  INVX1 U7 ( .A(reset), .Y(n125) );
  NOR3X1 U9 ( .A(re_addr[0]), .B(re_addr[2]), .C(n194), .Y(n91) );
  NOR3X1 U10 ( .A(re_addr[1]), .B(re_addr[2]), .C(re_addr[0]), .Y(n93) );
  NOR3X1 U11 ( .A(n194), .B(re_addr[2]), .C(n193), .Y(n92) );
  NOR3X1 U12 ( .A(re_addr[1]), .B(re_addr[2]), .C(n193), .Y(n94) );
  AND3X2 U13 ( .A(re_addr[1]), .B(n193), .C(re_addr[2]), .Y(n87) );
  AND3X2 U14 ( .A(n193), .B(n194), .C(re_addr[2]), .Y(n89) );
  AND3X2 U15 ( .A(re_addr[2]), .B(re_addr[1]), .C(re_addr[0]), .Y(n88) );
  AND3X2 U16 ( .A(re_addr[2]), .B(n194), .C(re_addr[0]), .Y(n90) );
  AOI22X1 U17 ( .A0(n91), .A1(reg_w[16]), .B0(n92), .B1(reg_w[24]), .Y(n120)
         );
  AOI22X1 U18 ( .A0(n91), .A1(reg_w[17]), .B0(n92), .B1(reg_w[25]), .Y(n116)
         );
  AOI22X1 U19 ( .A0(n91), .A1(reg_w[18]), .B0(n92), .B1(reg_w[26]), .Y(n112)
         );
  AOI22X1 U20 ( .A0(n91), .A1(reg_w[19]), .B0(n92), .B1(reg_w[27]), .Y(n108)
         );
  AOI22X1 U21 ( .A0(n91), .A1(reg_w[20]), .B0(n92), .B1(reg_w[28]), .Y(n104)
         );
  AOI22X1 U22 ( .A0(n91), .A1(reg_w[21]), .B0(n92), .B1(reg_w[29]), .Y(n100)
         );
  AOI22X1 U23 ( .A0(n91), .A1(reg_w[22]), .B0(n92), .B1(reg_w[30]), .Y(n96) );
  AOI22X1 U24 ( .A0(n91), .A1(reg_w[23]), .B0(n92), .B1(reg_w[31]), .Y(n84) );
  INVX1 U25 ( .A(re_addr[1]), .Y(n194) );
  INVX1 U26 ( .A(re_addr[0]), .Y(n193) );
  NAND4X1 U27 ( .A(n119), .B(n120), .C(n121), .D(n122), .Y(mux_w[0]) );
  AOI22X1 U28 ( .A0(n87), .A1(reg_w[48]), .B0(n88), .B1(reg_w[56]), .Y(n122)
         );
  AOI22X1 U29 ( .A0(n89), .A1(reg_w[32]), .B0(n90), .B1(reg_w[40]), .Y(n121)
         );
  AOI22X1 U30 ( .A0(n93), .A1(reg_w[0]), .B0(n94), .B1(reg_w[8]), .Y(n119) );
  NAND4X1 U31 ( .A(n115), .B(n116), .C(n117), .D(n118), .Y(mux_w[1]) );
  AOI22X1 U32 ( .A0(n87), .A1(reg_w[49]), .B0(n88), .B1(reg_w[57]), .Y(n118)
         );
  AOI22X1 U33 ( .A0(n89), .A1(reg_w[33]), .B0(n90), .B1(reg_w[41]), .Y(n117)
         );
  AOI22X1 U34 ( .A0(n93), .A1(reg_w[1]), .B0(n94), .B1(reg_w[9]), .Y(n115) );
  NAND4X1 U35 ( .A(n111), .B(n112), .C(n113), .D(n114), .Y(mux_w[2]) );
  AOI22X1 U36 ( .A0(n87), .A1(reg_w[50]), .B0(n88), .B1(reg_w[58]), .Y(n114)
         );
  AOI22X1 U37 ( .A0(n89), .A1(reg_w[34]), .B0(n90), .B1(reg_w[42]), .Y(n113)
         );
  AOI22X1 U38 ( .A0(n93), .A1(reg_w[2]), .B0(n94), .B1(reg_w[10]), .Y(n111) );
  NAND4X1 U39 ( .A(n107), .B(n108), .C(n109), .D(n110), .Y(mux_w[3]) );
  AOI22X1 U40 ( .A0(n87), .A1(reg_w[51]), .B0(n88), .B1(reg_w[59]), .Y(n110)
         );
  AOI22X1 U41 ( .A0(n89), .A1(reg_w[35]), .B0(n90), .B1(reg_w[43]), .Y(n109)
         );
  AOI22X1 U42 ( .A0(n93), .A1(reg_w[3]), .B0(n94), .B1(reg_w[11]), .Y(n107) );
  NAND4X1 U43 ( .A(n103), .B(n104), .C(n105), .D(n106), .Y(mux_w[4]) );
  AOI22X1 U44 ( .A0(n87), .A1(reg_w[52]), .B0(n88), .B1(reg_w[60]), .Y(n106)
         );
  AOI22X1 U45 ( .A0(n89), .A1(reg_w[36]), .B0(n90), .B1(reg_w[44]), .Y(n105)
         );
  AOI22X1 U46 ( .A0(n93), .A1(reg_w[4]), .B0(n94), .B1(reg_w[12]), .Y(n103) );
  NAND4X1 U47 ( .A(n99), .B(n100), .C(n101), .D(n102), .Y(mux_w[5]) );
  AOI22X1 U48 ( .A0(n87), .A1(reg_w[53]), .B0(n88), .B1(reg_w[61]), .Y(n102)
         );
  AOI22X1 U49 ( .A0(n89), .A1(reg_w[37]), .B0(n90), .B1(reg_w[45]), .Y(n101)
         );
  AOI22X1 U50 ( .A0(n93), .A1(reg_w[5]), .B0(n94), .B1(reg_w[13]), .Y(n99) );
  NAND4X1 U51 ( .A(n95), .B(n96), .C(n97), .D(n98), .Y(mux_w[6]) );
  AOI22X1 U52 ( .A0(n87), .A1(reg_w[54]), .B0(n88), .B1(reg_w[62]), .Y(n98) );
  AOI22X1 U53 ( .A0(n89), .A1(reg_w[38]), .B0(n90), .B1(reg_w[46]), .Y(n97) );
  AOI22X1 U54 ( .A0(n93), .A1(reg_w[6]), .B0(n94), .B1(reg_w[14]), .Y(n95) );
  NAND4X1 U55 ( .A(n83), .B(n84), .C(n85), .D(n86), .Y(mux_w[7]) );
  AOI22X1 U56 ( .A0(n87), .A1(reg_w[55]), .B0(n88), .B1(reg_w[63]), .Y(n86) );
  AOI22X1 U57 ( .A0(n89), .A1(reg_w[39]), .B0(n90), .B1(reg_w[47]), .Y(n85) );
  AOI22X1 U58 ( .A0(n93), .A1(reg_w[7]), .B0(n94), .B1(reg_w[15]), .Y(n83) );
  INVX1 U59 ( .A(n79), .Y(n150) );
  INVX1 U60 ( .A(n69), .Y(n149) );
  INVX1 U61 ( .A(n59), .Y(n148) );
  INVX1 U62 ( .A(n49), .Y(n147) );
  INVX1 U63 ( .A(n39), .Y(n146) );
  INVX1 U64 ( .A(n28), .Y(n145) );
  INVX1 U65 ( .A(n17), .Y(n144) );
  INVX1 U66 ( .A(n6), .Y(n143) );
  INVX1 U67 ( .A(n80), .Y(n158) );
  AOI22X1 U68 ( .A0(n123), .A1(n74), .B0(n3), .B1(reg_w[2]), .Y(n80) );
  INVX1 U69 ( .A(n70), .Y(n157) );
  AOI22X1 U70 ( .A0(n123), .A1(n64), .B0(n12), .B1(reg_w[10]), .Y(n70) );
  INVX1 U71 ( .A(n60), .Y(n156) );
  AOI22X1 U72 ( .A0(n123), .A1(n54), .B0(n21), .B1(reg_w[18]), .Y(n60) );
  INVX1 U73 ( .A(n50), .Y(n155) );
  AOI22X1 U74 ( .A0(n123), .A1(n44), .B0(n23), .B1(reg_w[26]), .Y(n50) );
  INVX1 U75 ( .A(n5), .Y(n151) );
  AOI22X1 U76 ( .A0(n2), .A1(reg_w[58]), .B0(n32), .B1(n123), .Y(n5) );
  INVX1 U77 ( .A(n40), .Y(n154) );
  AOI22X1 U78 ( .A0(n123), .A1(n34), .B0(n35), .B1(reg_w[34]), .Y(n40) );
  INVX1 U79 ( .A(n29), .Y(n153) );
  AOI22X1 U80 ( .A0(n123), .A1(n45), .B0(n24), .B1(reg_w[42]), .Y(n29) );
  INVX1 U81 ( .A(n18), .Y(n152) );
  AOI22X1 U82 ( .A0(n123), .A1(n55), .B0(n13), .B1(reg_w[50]), .Y(n18) );
  INVX1 U83 ( .A(n7), .Y(n159) );
  AOI22XL U84 ( .A0(n2), .A1(reg_w[60]), .B0(n32), .B1(data_in[4]), .Y(n7) );
  INVX1 U85 ( .A(n78), .Y(n166) );
  AOI22XL U86 ( .A0(data_in[4]), .A1(n74), .B0(n3), .B1(reg_w[4]), .Y(n78) );
  INVX1 U87 ( .A(n68), .Y(n165) );
  AOI22XL U88 ( .A0(data_in[4]), .A1(n64), .B0(n12), .B1(reg_w[12]), .Y(n68)
         );
  INVX1 U89 ( .A(n58), .Y(n164) );
  AOI22XL U90 ( .A0(data_in[4]), .A1(n54), .B0(n21), .B1(reg_w[20]), .Y(n58)
         );
  INVX1 U91 ( .A(n48), .Y(n163) );
  AOI22XL U92 ( .A0(data_in[4]), .A1(n44), .B0(n23), .B1(reg_w[28]), .Y(n48)
         );
  INVX1 U93 ( .A(n38), .Y(n162) );
  AOI22XL U94 ( .A0(data_in[4]), .A1(n34), .B0(n35), .B1(reg_w[36]), .Y(n38)
         );
  INVX1 U95 ( .A(n27), .Y(n161) );
  AOI22XL U96 ( .A0(data_in[4]), .A1(n45), .B0(n24), .B1(reg_w[44]), .Y(n27)
         );
  INVX1 U97 ( .A(n16), .Y(n160) );
  AOI22XL U98 ( .A0(data_in[4]), .A1(n55), .B0(n13), .B1(reg_w[52]), .Y(n16)
         );
  INVX1 U99 ( .A(n82), .Y(n142) );
  AOI22X1 U100 ( .A0(n65), .A1(n74), .B0(n3), .B1(reg_w[0]), .Y(n82) );
  INVX1 U101 ( .A(n81), .Y(n134) );
  AOI22X1 U102 ( .A0(n75), .A1(n74), .B0(n3), .B1(reg_w[1]), .Y(n81) );
  INVX1 U103 ( .A(n72), .Y(n141) );
  AOI22X1 U104 ( .A0(n65), .A1(n64), .B0(n12), .B1(reg_w[8]), .Y(n72) );
  INVX1 U105 ( .A(n71), .Y(n133) );
  AOI22X1 U106 ( .A0(n75), .A1(n64), .B0(n12), .B1(reg_w[9]), .Y(n71) );
  INVX1 U107 ( .A(n62), .Y(n140) );
  AOI22X1 U108 ( .A0(n65), .A1(n54), .B0(n21), .B1(reg_w[16]), .Y(n62) );
  INVX1 U109 ( .A(n61), .Y(n132) );
  AOI22X1 U110 ( .A0(n75), .A1(n54), .B0(n21), .B1(reg_w[17]), .Y(n61) );
  INVX1 U111 ( .A(n52), .Y(n139) );
  AOI22X1 U112 ( .A0(n65), .A1(n44), .B0(n23), .B1(reg_w[24]), .Y(n52) );
  INVX1 U113 ( .A(n51), .Y(n131) );
  AOI22X1 U114 ( .A0(n75), .A1(n44), .B0(n23), .B1(reg_w[25]), .Y(n51) );
  INVX1 U115 ( .A(n1), .Y(n135) );
  AOI22X1 U116 ( .A0(n2), .A1(reg_w[56]), .B0(n32), .B1(n65), .Y(n1) );
  INVX1 U117 ( .A(n4), .Y(n127) );
  AOI22X1 U118 ( .A0(n2), .A1(reg_w[57]), .B0(n32), .B1(n75), .Y(n4) );
  INVX1 U119 ( .A(n42), .Y(n138) );
  AOI22X1 U120 ( .A0(n65), .A1(n34), .B0(n35), .B1(reg_w[32]), .Y(n42) );
  INVX1 U121 ( .A(n41), .Y(n130) );
  AOI22X1 U122 ( .A0(n75), .A1(n34), .B0(n35), .B1(reg_w[33]), .Y(n41) );
  INVX1 U123 ( .A(n31), .Y(n137) );
  AOI22X1 U124 ( .A0(n65), .A1(n45), .B0(n24), .B1(reg_w[40]), .Y(n31) );
  INVX1 U125 ( .A(n30), .Y(n129) );
  AOI22X1 U126 ( .A0(n75), .A1(n45), .B0(n24), .B1(reg_w[41]), .Y(n30) );
  INVX1 U127 ( .A(n20), .Y(n136) );
  AOI22X1 U128 ( .A0(n65), .A1(n55), .B0(n13), .B1(reg_w[48]), .Y(n20) );
  INVX1 U129 ( .A(n19), .Y(n128) );
  AOI22X1 U130 ( .A0(n75), .A1(n55), .B0(n13), .B1(reg_w[49]), .Y(n19) );
  INVX1 U131 ( .A(wr_addr[1]), .Y(n192) );
  INVX1 U132 ( .A(wr_addr[0]), .Y(n191) );
  OR3XL U133 ( .A(wr_addr[1]), .B(wr_addr[2]), .C(wr_addr[0]), .Y(n3) );
  INVX1 U134 ( .A(n3), .Y(n74) );
  OR3XL U135 ( .A(wr_addr[1]), .B(wr_addr[2]), .C(n191), .Y(n12) );
  INVX1 U136 ( .A(n12), .Y(n64) );
  OR3XL U137 ( .A(wr_addr[0]), .B(wr_addr[2]), .C(n192), .Y(n21) );
  INVX1 U138 ( .A(n21), .Y(n54) );
  OR3XL U139 ( .A(n191), .B(wr_addr[2]), .C(n192), .Y(n23) );
  INVX1 U140 ( .A(n23), .Y(n44) );
  AND3X2 U141 ( .A(wr_addr[1]), .B(wr_addr[0]), .C(wr_addr[2]), .Y(n32) );
  INVX1 U142 ( .A(n32), .Y(n2) );
  AND3X2 U143 ( .A(n191), .B(n192), .C(wr_addr[2]), .Y(n34) );
  INVX1 U144 ( .A(n34), .Y(n35) );
  AND3X2 U145 ( .A(wr_addr[0]), .B(n192), .C(wr_addr[2]), .Y(n45) );
  INVX1 U146 ( .A(n45), .Y(n24) );
  AND3X2 U147 ( .A(wr_addr[1]), .B(n191), .C(wr_addr[2]), .Y(n55) );
  INVX1 U148 ( .A(n55), .Y(n13) );
  INVX1 U149 ( .A(n77), .Y(n190) );
  AOI22X1 U150 ( .A0(data_in[5]), .A1(n74), .B0(n3), .B1(reg_w[5]), .Y(n77) );
  INVX1 U151 ( .A(n76), .Y(n189) );
  AOI22X1 U152 ( .A0(data_in[6]), .A1(n74), .B0(n3), .B1(reg_w[6]), .Y(n76) );
  INVX1 U153 ( .A(n73), .Y(n188) );
  AOI22X1 U154 ( .A0(data_in[7]), .A1(n74), .B0(n3), .B1(reg_w[7]), .Y(n73) );
  INVX1 U155 ( .A(n67), .Y(n187) );
  AOI22X1 U156 ( .A0(data_in[5]), .A1(n64), .B0(n12), .B1(reg_w[13]), .Y(n67)
         );
  INVX1 U157 ( .A(n66), .Y(n186) );
  AOI22X1 U158 ( .A0(data_in[6]), .A1(n64), .B0(n12), .B1(reg_w[14]), .Y(n66)
         );
  INVX1 U159 ( .A(n63), .Y(n185) );
  AOI22X1 U160 ( .A0(data_in[7]), .A1(n64), .B0(n12), .B1(reg_w[15]), .Y(n63)
         );
  INVX1 U161 ( .A(n57), .Y(n184) );
  AOI22X1 U162 ( .A0(data_in[5]), .A1(n54), .B0(n21), .B1(reg_w[21]), .Y(n57)
         );
  INVX1 U163 ( .A(n56), .Y(n183) );
  AOI22X1 U164 ( .A0(data_in[6]), .A1(n54), .B0(n21), .B1(reg_w[22]), .Y(n56)
         );
  INVX1 U165 ( .A(n53), .Y(n182) );
  AOI22X1 U166 ( .A0(data_in[7]), .A1(n54), .B0(n21), .B1(reg_w[23]), .Y(n53)
         );
  INVX1 U167 ( .A(n47), .Y(n181) );
  AOI22X1 U168 ( .A0(data_in[5]), .A1(n44), .B0(n23), .B1(reg_w[29]), .Y(n47)
         );
  INVX1 U169 ( .A(n46), .Y(n180) );
  AOI22X1 U170 ( .A0(data_in[6]), .A1(n44), .B0(n23), .B1(reg_w[30]), .Y(n46)
         );
  INVX1 U171 ( .A(n43), .Y(n179) );
  AOI22X1 U172 ( .A0(data_in[7]), .A1(n44), .B0(n23), .B1(reg_w[31]), .Y(n43)
         );
  INVX1 U173 ( .A(n8), .Y(n169) );
  AOI22X1 U174 ( .A0(n2), .A1(reg_w[61]), .B0(n32), .B1(data_in[5]), .Y(n8) );
  INVX1 U175 ( .A(n9), .Y(n168) );
  AOI22X1 U176 ( .A0(n2), .A1(reg_w[62]), .B0(n32), .B1(data_in[6]), .Y(n9) );
  INVX1 U177 ( .A(n10), .Y(n167) );
  AOI22X1 U178 ( .A0(n2), .A1(reg_w[63]), .B0(n32), .B1(data_in[7]), .Y(n10)
         );
  INVX1 U179 ( .A(n37), .Y(n178) );
  AOI22X1 U180 ( .A0(data_in[5]), .A1(n34), .B0(n35), .B1(reg_w[37]), .Y(n37)
         );
  INVX1 U181 ( .A(n36), .Y(n177) );
  AOI22X1 U182 ( .A0(data_in[6]), .A1(n34), .B0(n35), .B1(reg_w[38]), .Y(n36)
         );
  INVX1 U183 ( .A(n33), .Y(n176) );
  AOI22X1 U184 ( .A0(data_in[7]), .A1(n34), .B0(n35), .B1(reg_w[39]), .Y(n33)
         );
  INVX1 U185 ( .A(n26), .Y(n175) );
  AOI22X1 U186 ( .A0(data_in[5]), .A1(n45), .B0(n24), .B1(reg_w[45]), .Y(n26)
         );
  INVX1 U187 ( .A(n25), .Y(n174) );
  AOI22X1 U188 ( .A0(data_in[6]), .A1(n45), .B0(n24), .B1(reg_w[46]), .Y(n25)
         );
  INVX1 U189 ( .A(n22), .Y(n173) );
  AOI22X1 U190 ( .A0(data_in[7]), .A1(n45), .B0(n24), .B1(reg_w[47]), .Y(n22)
         );
  INVX1 U191 ( .A(n15), .Y(n172) );
  AOI22X1 U192 ( .A0(data_in[5]), .A1(n55), .B0(n13), .B1(reg_w[53]), .Y(n15)
         );
  INVX1 U193 ( .A(n14), .Y(n171) );
  AOI22X1 U194 ( .A0(data_in[6]), .A1(n55), .B0(n13), .B1(reg_w[54]), .Y(n14)
         );
  INVX1 U195 ( .A(n11), .Y(n170) );
  AOI22X1 U196 ( .A0(data_in[7]), .A1(n55), .B0(n13), .B1(reg_w[55]), .Y(n11)
         );
  AOI22XL U197 ( .A0(n2), .A1(reg_w[59]), .B0(n32), .B1(data_in[3]), .Y(n6) );
  AOI22XL U198 ( .A0(data_in[3]), .A1(n74), .B0(n3), .B1(reg_w[3]), .Y(n79) );
  AOI22XL U199 ( .A0(data_in[3]), .A1(n64), .B0(n12), .B1(reg_w[11]), .Y(n69)
         );
  AOI22XL U200 ( .A0(data_in[3]), .A1(n54), .B0(n21), .B1(reg_w[19]), .Y(n59)
         );
  AOI22XL U201 ( .A0(data_in[3]), .A1(n44), .B0(n23), .B1(reg_w[27]), .Y(n49)
         );
  AOI22XL U202 ( .A0(data_in[3]), .A1(n34), .B0(n35), .B1(reg_w[35]), .Y(n39)
         );
  AOI22XL U203 ( .A0(data_in[3]), .A1(n45), .B0(n24), .B1(reg_w[43]), .Y(n28)
         );
  AOI22XL U204 ( .A0(data_in[3]), .A1(n55), .B0(n13), .B1(reg_w[51]), .Y(n17)
         );
  SDFFRHQXL reg_w_reg_43_ ( .D(n145), .SI(reg_w[42]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[43]) );
  SDFFRHQXL reg_w_reg_27_ ( .D(n147), .SI(reg_w[26]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[27]) );
  SDFFRHQXL reg_w_reg_11_ ( .D(n149), .SI(reg_w[10]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[11]) );
  SDFFRHQXL reg_w_reg_59_ ( .D(n143), .SI(reg_w[58]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[59]) );
  SDFFRHQXL reg_w_reg_51_ ( .D(n144), .SI(reg_w[50]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[51]) );
  SDFFRHQXL reg_w_reg_35_ ( .D(n146), .SI(reg_w[34]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[35]) );
  SDFFRHQXL reg_w_reg_19_ ( .D(n148), .SI(reg_w[18]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[19]) );
  SDFFRHQXL reg_w_reg_3_ ( .D(n150), .SI(reg_w[2]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[3]) );
  SDFFRHQXL reg_w_reg_47_ ( .D(n173), .SI(reg_w[46]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[47]) );
  SDFFRHQXL reg_w_reg_46_ ( .D(n174), .SI(reg_w[45]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[46]) );
  SDFFRHQXL reg_w_reg_45_ ( .D(n175), .SI(reg_w[44]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[45]) );
  SDFFRHQXL reg_w_reg_44_ ( .D(n161), .SI(reg_w[43]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[44]) );
  SDFFRHQXL reg_w_reg_42_ ( .D(n153), .SI(reg_w[41]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[42]) );
  SDFFRHQXL reg_w_reg_41_ ( .D(n129), .SI(reg_w[40]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[41]) );
  SDFFRHQXL reg_w_reg_40_ ( .D(n137), .SI(reg_w[39]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[40]) );
  SDFFRHQXL reg_w_reg_31_ ( .D(n179), .SI(reg_w[30]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[31]) );
  SDFFRHQXL reg_w_reg_30_ ( .D(n180), .SI(reg_w[29]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[30]) );
  SDFFRHQXL reg_w_reg_29_ ( .D(n181), .SI(reg_w[28]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[29]) );
  SDFFRHQXL reg_w_reg_28_ ( .D(n163), .SI(reg_w[27]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[28]) );
  SDFFRHQXL reg_w_reg_26_ ( .D(n155), .SI(reg_w[25]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[26]) );
  SDFFRHQXL reg_w_reg_25_ ( .D(n131), .SI(reg_w[24]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[25]) );
  SDFFRHQXL reg_w_reg_24_ ( .D(n139), .SI(reg_w[23]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[24]) );
  SDFFRHQXL reg_w_reg_15_ ( .D(n185), .SI(reg_w[14]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[15]) );
  SDFFRHQXL reg_w_reg_14_ ( .D(n186), .SI(reg_w[13]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[14]) );
  SDFFRHQXL reg_w_reg_13_ ( .D(n187), .SI(reg_w[12]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[13]) );
  SDFFRHQXL reg_w_reg_12_ ( .D(n165), .SI(reg_w[11]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[12]) );
  SDFFRHQXL reg_w_reg_10_ ( .D(n157), .SI(reg_w[9]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[10]) );
  SDFFRHQXL reg_w_reg_9_ ( .D(n133), .SI(reg_w[8]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[9]) );
  SDFFRHQXL reg_w_reg_8_ ( .D(n141), .SI(reg_w[7]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[8]) );
  SDFFRHQXL reg_w_reg_63_ ( .D(n167), .SI(reg_w[62]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[63]) );
  SDFFRHQXL reg_w_reg_62_ ( .D(n168), .SI(reg_w[61]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[62]) );
  SDFFRHQXL reg_w_reg_61_ ( .D(n169), .SI(reg_w[60]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[61]) );
  SDFFRHQXL reg_w_reg_60_ ( .D(n159), .SI(reg_w[59]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[60]) );
  SDFFRHQXL reg_w_reg_58_ ( .D(n151), .SI(reg_w[57]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[58]) );
  SDFFRHQXL reg_w_reg_57_ ( .D(n127), .SI(reg_w[56]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[57]) );
  SDFFRHQXL reg_w_reg_56_ ( .D(n135), .SI(reg_w[55]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[56]) );
  SDFFRHQXL reg_w_reg_55_ ( .D(n170), .SI(reg_w[54]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[55]) );
  SDFFRHQXL reg_w_reg_54_ ( .D(n171), .SI(reg_w[53]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[54]) );
  SDFFRHQXL reg_w_reg_53_ ( .D(n172), .SI(reg_w[52]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[53]) );
  SDFFRHQXL reg_w_reg_52_ ( .D(n160), .SI(reg_w[51]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[52]) );
  SDFFRHQXL reg_w_reg_50_ ( .D(n152), .SI(reg_w[49]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[50]) );
  SDFFRHQXL reg_w_reg_49_ ( .D(n128), .SI(reg_w[48]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[49]) );
  SDFFRHQXL reg_w_reg_48_ ( .D(n136), .SI(reg_w[47]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[48]) );
  SDFFRHQXL reg_w_reg_39_ ( .D(n176), .SI(reg_w[38]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[39]) );
  SDFFRHQXL reg_w_reg_38_ ( .D(n177), .SI(reg_w[37]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[38]) );
  SDFFRHQXL reg_w_reg_37_ ( .D(n178), .SI(reg_w[36]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[37]) );
  SDFFRHQXL reg_w_reg_36_ ( .D(n162), .SI(reg_w[35]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[36]) );
  SDFFRHQXL reg_w_reg_34_ ( .D(n154), .SI(reg_w[33]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[34]) );
  SDFFRHQXL reg_w_reg_33_ ( .D(n130), .SI(reg_w[32]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[33]) );
  SDFFRHQXL reg_w_reg_32_ ( .D(n138), .SI(reg_w[31]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[32]) );
  SDFFRHQXL reg_w_reg_23_ ( .D(n182), .SI(reg_w[22]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[23]) );
  SDFFRHQXL reg_w_reg_22_ ( .D(n183), .SI(reg_w[21]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[22]) );
  SDFFRHQXL reg_w_reg_21_ ( .D(n184), .SI(reg_w[20]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[21]) );
  SDFFRHQXL reg_w_reg_20_ ( .D(n164), .SI(reg_w[19]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[20]) );
  SDFFRHQXL reg_w_reg_18_ ( .D(n156), .SI(reg_w[17]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[18]) );
  SDFFRHQXL reg_w_reg_17_ ( .D(n132), .SI(reg_w[16]), .SE(test_se), .CK(wr_clk), .RN(n125), .Q(reg_w[17]) );
  SDFFRHQXL reg_w_reg_16_ ( .D(n140), .SI(reg_w[15]), .SE(test_se), .CK(wr_clk), .RN(n126), .Q(reg_w[16]) );
  SDFFRHQXL reg_w_reg_7_ ( .D(n188), .SI(reg_w[6]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[7]) );
  SDFFRHQXL reg_w_reg_6_ ( .D(n189), .SI(reg_w[5]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[6]) );
  SDFFRHQXL reg_w_reg_5_ ( .D(n190), .SI(reg_w[4]), .SE(test_se), .CK(wr_clk), 
        .RN(n125), .Q(reg_w[5]) );
  SDFFRHQXL reg_w_reg_4_ ( .D(n166), .SI(reg_w[3]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[4]) );
  SDFFRHQXL reg_w_reg_2_ ( .D(n158), .SI(reg_w[1]), .SE(test_se), .CK(wr_clk), 
        .RN(n126), .Q(reg_w[2]) );
  SDFFRHQXL reg_w_reg_1_ ( .D(n134), .SI(reg_w[0]), .SE(test_se), .CK(wr_clk), 
        .RN(n125), .Q(reg_w[1]) );
  SDFFRHQXL reg_w_reg_0_ ( .D(n142), .SI(data_out[6]), .SE(test_se), .CK(
        wr_clk), .RN(n125), .Q(reg_w[0]) );
  SDFFRHQXL data_out_reg_7_ ( .D(mux_w[7]), .SI(test_si2), .SE(test_se), .CK(
        re_clk), .RN(n126), .Q(data_out[7]) );
  SDFFRHQXL data_out_reg_6_ ( .D(mux_w[6]), .SI(data_out[5]), .SE(test_se), 
        .CK(re_clk), .RN(n126), .Q(data_out[6]) );
  SDFFRHQXL data_out_reg_5_ ( .D(mux_w[5]), .SI(data_out[4]), .SE(test_se), 
        .CK(re_clk), .RN(n125), .Q(data_out[5]) );
  SDFFRHQXL data_out_reg_4_ ( .D(mux_w[4]), .SI(data_out[3]), .SE(test_se), 
        .CK(re_clk), .RN(n126), .Q(data_out[4]) );
  SDFFRHQXL data_out_reg_3_ ( .D(mux_w[3]), .SI(data_out[2]), .SE(test_se), 
        .CK(re_clk), .RN(n125), .Q(data_out[3]) );
  SDFFRHQXL data_out_reg_2_ ( .D(mux_w[2]), .SI(data_out[1]), .SE(test_se), 
        .CK(re_clk), .RN(n125), .Q(data_out[2]) );
  SDFFRHQXL data_out_reg_1_ ( .D(mux_w[1]), .SI(data_out[0]), .SE(test_se), 
        .CK(re_clk), .RN(n125), .Q(data_out[1]) );
  SDFFRHQXL data_out_reg_0_ ( .D(mux_w[0]), .SI(test_si1), .SE(test_se), .CK(
        re_clk), .RN(n126), .Q(data_out[0]) );
endmodule


module enc_test_1 ( enc_s, reset, rate, clk, law, enc_i, enc_s_clk, enc_s_fs, 
        enc_i_clk, enc_i_fs, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_enable, test_mode, scan_out0, scan_out1, scan_out2, scan_out3, 
        scan_out4, test_si4, test_si3, test_si2, test_si1, test_so3, test_so2, 
        test_so1, test_se );
  input [7:0] enc_s;
  input [1:0] rate;
  output [7:0] enc_i;
  input reset, clk, law, enc_s_clk, enc_s_fs, scan_in0, scan_in1, scan_in2,
         scan_in3, scan_in4, scan_enable, test_mode, test_si4, test_si3,
         test_si2, test_si1, test_se;
  output enc_i_clk, enc_i_fs, scan_out0, scan_out1, scan_out2, scan_out3,
         scan_out4, test_so3, test_so2, test_so1;
  wire   enc_clk_buffout, enc_fs_buffout, dly_clk, sys_clk, td_w, tr_w,
         fa_done, wr_clk, rd_clk, inv_ch_clk_in, fa_start, enc_fs_buffin, n1,
         n2, n3, n4, n5, n6, n7, n8, n9, n10, n11;
  wire   [7:0] enc_s_w;
  wire   [4:0] enc_i_w;
  wire   [15:0] d_w;
  wire   [15:0] dq_w;
  wire   [14:0] se_w;
  wire   [12:0] y_w;
  wire   [18:0] yl_w;
  wire   [6:0] al_w;
  wire   [15:0] a2p_w;
  wire   [2:0] wr_add;
  wire   [2:0] rd_add;
  assign enc_i_clk = enc_clk_buffout;
  assign enc_i_fs = enc_fs_buffout;
  assign test_so2 = enc_s_w[0];
  assign test_so1 = rd_add[2];

  BUFX16 U1 ( .A(enc_i_w[1]), .Y(n2) );
  BUFX3 U2 ( .A(tr_w), .Y(n1) );
  BUFX3 U3 ( .A(rate[1]), .Y(n5) );
  BUFX3 U4 ( .A(rate[0]), .Y(n4) );
  BUFX3 U5 ( .A(test_mode), .Y(n3) );
  IN_REG_1_test_1 iIn_reg ( .data_in(enc_s), .load(inv_ch_clk_in), .reset(
        reset), .data_out(enc_s_w), .scan_enable(1'b0), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si2(test_si3), .test_si1(test_si2), .test_se(test_se) );
  IN_PCM enc_in_pcm ( .S(enc_s_w), .SE(se_w), .LAW(law), .D(d_w) );
  ADAP_QUAN iadap_quan ( .D(d_w), .Y(y_w), .I(enc_i_w), .RATE({n5, n4}) );
  I_ADAP_QUAN_1 iI_adap_quan ( .D(dq_w), .Y(y_w), .I({enc_i_w[4:2], n2, 
        enc_i_w[0]}), .RATE({n5, n4}) );
  ADAP_PRED_REC_SIG_1_test_1 iadap_pred_rec ( .DQ(dq_w), .RATE({n5, n4}), 
        .clk(sys_clk), .dly_strb(dly_clk), .reset(reset), .TR(n1), 
        .start_trig(fa_start), .SE(se_w), .A2(a2p_w), .done(fa_done), 
        .test_mode(n3), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si2(test_si4), 
        .test_si1(yl_w[18]), .test_so2(n11), .test_so1(test_so3), .test_se(
        test_se) );
  QUAN_SCAL_FAC_ADAP_1_test_1 iQuan_Scal_fac ( .CLK(dly_clk), .IC({
        enc_i_w[4:2], n2, enc_i_w[0]}), .RATE({n5, n4}), .AL(al_w), .YL(yl_w), 
        .reset(reset), .Y(y_w), .scan_enable(1'b0), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si(enc_s_w[7]), .test_se(test_se) );
  ADAP_SPED_CTL_1_test_1 iadap_sped_ctl ( .I({enc_i_w[4:2], n2, enc_i_w[0]}), 
        .RATE({n5, n4}), .TDP(td_w), .Y(y_w), .TR(n1), .reset(reset), .CLK(
        dly_clk), .AL(al_w), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(n11), .test_so(n10), .test_se(test_se) );
  TON_TRAN_DET_1_test_1 iton_tran_det ( .A2P(a2p_w), .reset(reset), .YL(yl_w), 
        .DQ(dq_w), .TDP(td_w), .TR(tr_w), .clk(dly_clk), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_mode(n3), .scan_enable(1'b0), .test_si(n7), .test_so(n6), 
        .test_se(test_se) );
  CU_1_test_1 ienc_CU ( .reset(reset), .FSYNC_IN(enc_fs_buffin), .FSYNC_OUT(
        enc_fs_buffout), .NOT_CH_CLK_IN(inv_ch_clk_in), .CH_CLK_OUT(
        enc_clk_buffout), .clk(sys_clk), .FA_start(fa_start), .FA_done(fa_done), .delay_strobe(dly_clk), .scan_enable(1'b0), .test_mode(n3), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .RF_WR_ADDR(wr_add), .RF_RD_ADDR(rd_add), .RF_WR(wr_clk), .RF_RD(
        rd_clk), .test_si2(n9), .test_si1(test_si1), .test_so1(n8), .test_se(
        test_se) );
  CLOCK_GEN_1_test_1 iclock_gen ( .reset(reset), .clk(clk), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .sys_clk_buffered(sys_clk), .f_sync_in(enc_s_fs), 
        .f_sync_in_buffered(enc_fs_buffin), .f_sync_out_buffered(
        enc_fs_buffout), .ch_clk_in(enc_s_clk), .not_ch_clk_in_buffered(
        inv_ch_clk_in), .ch_clk_out_buffered(enc_clk_buffout), .test_mode(n3), 
        .test_si(n10), .test_so(n9), .test_se(test_se) );
  RF_1_test_1 irf ( .data_in({1'b0, 1'b0, 1'b0, enc_i_w[4:2], n2, enc_i_w[0]}), 
        .data_out(enc_i), .re_addr(rd_add), .wr_addr(wr_add), .wr_clk(wr_clk), 
        .re_clk(rd_clk), .reset(reset), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .scan_enable(1'b0), 
        .test_si2(n6), .test_si1(n8), .test_so1(n7), .test_se(test_se) );
endmodule


module IN_REG_0_test_1 ( data_in, load, reset, data_out, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [7:0] data_in;
  output [7:0] data_out;
  input load, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n12, n13, n1;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL data_out_reg_7_ ( .D(data_in[7]), .SI(data_out[6]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[7]) );
  SDFFRHQXL data_out_reg_6_ ( .D(data_in[6]), .SI(data_out[5]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[6]) );
  SDFFRHQXL data_out_reg_5_ ( .D(data_in[5]), .SI(data_out[4]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[5]) );
  SDFFRHQXL data_out_reg_4_ ( .D(data_in[4]), .SI(data_out[3]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(n12) );
  SDFFRHQXL data_out_reg_1_ ( .D(data_in[1]), .SI(data_out[0]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(n13) );
  SDFFRHQX2 data_out_reg_2_ ( .D(data_in[2]), .SI(data_out[1]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[2]) );
  SDFFRHQX1 data_out_reg_3_ ( .D(data_in[3]), .SI(data_out[2]), .SE(test_se), 
        .CK(load), .RN(n1), .Q(data_out[3]) );
  SDFFRHQX1 data_out_reg_0_ ( .D(data_in[0]), .SI(test_si), .SE(test_se), .CK(
        load), .RN(n1), .Q(data_out[0]) );
  BUFX3 U1 ( .A(n13), .Y(data_out[1]) );
  BUFX3 U6 ( .A(n12), .Y(data_out[4]) );
endmodule


module RECONST_0 ( I, RATE, DQLN, DQS );
  input [4:0] I;
  input [1:0] RATE;
  output [11:0] DQLN;
  output DQS;
  wire   n2, n3, n4, n5, n6, n7, n9, n10, n11, n12, n13, n14, n15, n16, n17,
         n18, n21, n22, n23, n24, n28, n29, n30, n31, n32, n33, n34, n35, n36,
         n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163, n164, n1, DQLN_4_;
  assign DQLN[4] = DQLN_4_;

  OAI2BB1X1 U3 ( .A0N(n144), .A1N(n153), .B0(n143), .Y(DQLN[8]) );
  NAND2X1 U4 ( .A(I[4]), .B(n58), .Y(n121) );
  NAND3X1 U5 ( .A(n113), .B(n156), .C(n55), .Y(n52) );
  OR2X2 U6 ( .A(n17), .B(n52), .Y(n119) );
  NAND2X1 U7 ( .A(I[0]), .B(n153), .Y(n91) );
  OR2X2 U8 ( .A(n55), .B(n121), .Y(n40) );
  AOI2BB1X1 U9 ( .A0N(n139), .A1N(n126), .B0(n28), .Y(n30) );
  OAI32X1 U10 ( .A0(n63), .A1(n112), .A2(n117), .B0(n147), .B1(n39), .Y(n43)
         );
  AOI2BB1X1 U11 ( .A0N(n106), .A1N(n111), .B0(n107), .Y(n108) );
  NOR2X1 U12 ( .A(n63), .B(n112), .Y(n86) );
  OR3XL U13 ( .A(n12), .B(n122), .C(n148), .Y(n3) );
  AND2X2 U14 ( .A(n114), .B(n49), .Y(n120) );
  OR2X2 U17 ( .A(n117), .B(n119), .Y(n111) );
  OAI32X1 U18 ( .A0(n33), .A1(n102), .A2(n63), .B0(n163), .B1(n91), .Y(
        DQLN[10]) );
  NAND2X1 U20 ( .A(n90), .B(n121), .Y(n149) );
  OAI21XL U21 ( .A0(n33), .A1(n69), .B0(n98), .Y(n135) );
  AOI211X1 U22 ( .A0(n2), .A1(n38), .B0(n43), .C0(n42), .Y(n44) );
  INVX1 U23 ( .A(n156), .Y(n2) );
  OR3XL U24 ( .A(n90), .B(n126), .C(n119), .Y(n95) );
  NAND2X1 U25 ( .A(I[0]), .B(n64), .Y(n156) );
  NAND2X1 U26 ( .A(I[2]), .B(n64), .Y(n41) );
  NAND2X1 U27 ( .A(I[4]), .B(n133), .Y(n139) );
  AOI32X1 U28 ( .A0(n134), .A1(n153), .A2(n100), .B0(n81), .B1(n7), .Y(n4) );
  NAND2X1 U29 ( .A(I[1]), .B(n154), .Y(n113) );
  OR2X2 U30 ( .A(n69), .B(n147), .Y(n163) );
  NAND4X1 U32 ( .A(n4), .B(n48), .C(n60), .D(n59), .Y(DQLN[3]) );
  NAND2X1 U33 ( .A(I[3]), .B(n154), .Y(n71) );
  NAND2BX1 U35 ( .AN(n34), .B(n9), .Y(n114) );
  INVX1 U36 ( .A(I[3]), .Y(n17) );
  INVX1 U37 ( .A(n112), .Y(n154) );
  INVX1 U38 ( .A(n46), .Y(n81) );
  NAND2BX1 U39 ( .AN(n38), .B(n153), .Y(n55) );
  INVX1 U40 ( .A(I[0]), .Y(n34) );
  NAND2BX1 U41 ( .AN(n158), .B(n91), .Y(n90) );
  INVX1 U42 ( .A(I[1]), .Y(n16) );
  INVX1 U43 ( .A(n122), .Y(n133) );
  INVX1 U44 ( .A(n72), .Y(n50) );
  INVX1 U45 ( .A(n69), .Y(n99) );
  INVX1 U46 ( .A(I[2]), .Y(n38) );
  OAI2BB1X1 U47 ( .A0N(I[1]), .A1N(n81), .B0(n71), .Y(n11) );
  INVX1 U48 ( .A(n148), .Y(n153) );
  INVX1 U49 ( .A(I[4]), .Y(n158) );
  NAND2BX1 U50 ( .AN(n17), .B(n153), .Y(n157) );
  NAND2BXL U51 ( .AN(n16), .B(n153), .Y(n126) );
  NAND3X1 U53 ( .A(n58), .B(I[2]), .C(n91), .Y(n101) );
  NOR2BXL U54 ( .AN(n149), .B(n55), .Y(n56) );
  INVX1 U55 ( .A(n13), .Y(n132) );
  AND2X1 U57 ( .A(n64), .B(I[1]), .Y(n6) );
  INVX1 U58 ( .A(n49), .Y(n134) );
  INVX1 U59 ( .A(n89), .Y(n96) );
  AOI2BB2X1 U60 ( .B0(n132), .B1(n91), .A0N(n70), .A1N(n90), .Y(n35) );
  INVXL U61 ( .A(n117), .Y(n58) );
  NAND2BXL U62 ( .AN(n117), .B(n82), .Y(n70) );
  NAND2XL U63 ( .A(n50), .B(n154), .Y(n54) );
  NAND2XL U64 ( .A(n97), .B(n154), .Y(n105) );
  NOR2XL U65 ( .A(n148), .B(n147), .Y(n150) );
  NAND4X1 U67 ( .A(n3), .B(n22), .C(n4), .D(n21), .Y(DQLN[0]) );
  OAI22XL U68 ( .A0(n157), .A1(n90), .B0(n119), .B1(n54), .Y(n85) );
  OAI22XL U69 ( .A0(n119), .A1(n106), .B0(n54), .B1(n49), .Y(n127) );
  NAND2XL U70 ( .A(n84), .B(n65), .Y(n31) );
  AOI21XL U71 ( .A0(n105), .A1(n104), .B0(DQS), .Y(n107) );
  AOI21XL U72 ( .A0(n70), .A1(n69), .B0(n106), .Y(n74) );
  NOR2XL U73 ( .A(n72), .B(n121), .Y(n15) );
  NOR2XL U74 ( .A(n72), .B(n90), .Y(n23) );
  AOI21XL U75 ( .A0(n99), .A1(n91), .B0(n128), .Y(n12) );
  NOR2XL U76 ( .A(n147), .B(n91), .Y(n57) );
  NAND2XL U77 ( .A(n159), .B(n82), .Y(n24) );
  NOR2XL U78 ( .A(n122), .B(n121), .Y(n123) );
  NAND3BXL U79 ( .AN(n91), .B(n99), .C(n133), .Y(n94) );
  NAND2XL U80 ( .A(n86), .B(n84), .Y(n48) );
  AND3X1 U82 ( .A(n134), .B(n82), .C(n91), .Y(n37) );
  INVXL U83 ( .A(n91), .Y(n145) );
  AND3X1 U84 ( .A(n142), .B(n141), .C(n140), .Y(n143) );
  NAND3XL U85 ( .A(n139), .B(n138), .C(n137), .Y(n144) );
  AOI21XL U86 ( .A0(n134), .A1(n133), .B0(n132), .Y(n138) );
  NAND3X1 U87 ( .A(n5), .B(n109), .C(n108), .Y(DQLN[6]) );
  AND4X2 U88 ( .A(n96), .B(n95), .C(n94), .D(n93), .Y(n5) );
  OAI22XL U89 ( .A0(n52), .A1(n121), .B0(DQS), .B1(n63), .Y(n68) );
  NOR2XL U91 ( .A(n16), .B(n119), .Y(n14) );
  NAND2BXL U92 ( .AN(n51), .B(n82), .Y(n104) );
  NOR2XL U93 ( .A(n72), .B(n155), .Y(n73) );
  NAND2BXL U94 ( .AN(n51), .B(n50), .Y(n61) );
  AOI21XL U95 ( .A0(n133), .A1(n82), .B0(n81), .Y(n83) );
  NAND2BXL U96 ( .AN(n17), .B(n91), .Y(n33) );
  NOR2XL U97 ( .A(n136), .B(n135), .Y(n137) );
  NAND3XL U100 ( .A(n64), .B(n63), .C(n62), .Y(n141) );
  NAND2BXL U103 ( .AN(n140), .B(n7), .Y(n93) );
  NAND3BXL U104 ( .AN(n146), .B(n9), .C(I[3]), .Y(n152) );
  NAND2XL U105 ( .A(n150), .B(n149), .Y(n151) );
  AOI21XL U106 ( .A0(n145), .A1(I[2]), .B0(n159), .Y(n146) );
  OAI31XL U107 ( .A0(n148), .A1(n147), .A2(DQS), .B0(n66), .Y(n67) );
  NAND2XL U108 ( .A(I[2]), .B(I[1]), .Y(n63) );
  NAND2XL U109 ( .A(I[0]), .B(I[1]), .Y(n51) );
  NAND2XL U110 ( .A(n154), .B(n92), .Y(n140) );
  OR2XL U111 ( .A(I[2]), .B(I[1]), .Y(n62) );
  NOR2X1 U112 ( .A(n154), .B(n153), .Y(n164) );
  INVX1 U113 ( .A(n52), .Y(n82) );
  INVX1 U114 ( .A(n10), .Y(n64) );
  NAND2BX1 U115 ( .AN(RATE[0]), .B(RATE[1]), .Y(n10) );
  NAND2X1 U116 ( .A(n153), .B(n53), .Y(n60) );
  AOI211X1 U117 ( .A0(n58), .A1(n85), .B0(n57), .C0(n56), .Y(n59) );
  OR2X2 U118 ( .A(RATE[0]), .B(RATE[1]), .Y(n148) );
  NAND2X1 U119 ( .A(RATE[1]), .B(RATE[0]), .Y(n46) );
  NAND2BX1 U120 ( .AN(RATE[1]), .B(RATE[0]), .Y(n112) );
  OAI211X1 U121 ( .A0(n114), .A1(n70), .B0(n111), .C0(n118), .Y(n136) );
  NAND2X1 U122 ( .A(n39), .B(n126), .Y(n117) );
  OAI31X1 U124 ( .A0(n15), .A1(n132), .A2(n14), .B0(n145), .Y(n22) );
  NAND4X1 U125 ( .A(n32), .B(n110), .C(n31), .D(n30), .Y(DQLN[1]) );
  OAI31X1 U126 ( .A0(n23), .A1(n136), .A2(n68), .B0(n153), .Y(n32) );
  NAND2BX1 U127 ( .AN(n72), .B(n82), .Y(n147) );
  OAI221XL U128 ( .A0(n120), .A1(n52), .B0(DQS), .B1(n61), .C0(n115), .Y(n53)
         );
  NAND2X1 U129 ( .A(n128), .B(n159), .Y(n118) );
  INVX1 U130 ( .A(n114), .Y(n84) );
  INVX1 U131 ( .A(n90), .Y(n128) );
  NAND2BX1 U132 ( .AN(n119), .B(n9), .Y(n13) );
  NAND2BX1 U133 ( .AN(n72), .B(n84), .Y(n116) );
  OAI21XL U134 ( .A0(n120), .A1(n119), .B0(n118), .Y(n124) );
  OAI21XL U135 ( .A0(n117), .A1(n116), .B0(n115), .Y(n125) );
  OAI2BB1X1 U136 ( .A0N(n24), .A1N(n116), .B0(n64), .Y(n110) );
  NAND2BX1 U137 ( .AN(n117), .B(n9), .Y(n69) );
  INVX1 U138 ( .A(n61), .Y(n97) );
  OAI21XL U139 ( .A0(n164), .A1(n163), .B0(n162), .Y(DQLN[11]) );
  INVX1 U141 ( .A(n157), .Y(n65) );
  INVX1 U142 ( .A(n126), .Y(n29) );
  INVX1 U143 ( .A(n33), .Y(n100) );
  NAND3BX1 U144 ( .AN(n6), .B(n106), .C(n157), .Y(n72) );
  NAND4X1 U145 ( .A(n47), .B(n46), .C(n45), .D(n44), .Y(DQLN[2]) );
  NOR2X1 U146 ( .A(DQLN[10]), .B(n127), .Y(n45) );
  OAI21XL U147 ( .A0(n37), .A1(n78), .B0(n153), .Y(n47) );
  MXI2X1 U148 ( .A(n81), .B(n67), .S0(n7), .Y(n77) );
  NAND2BX1 U151 ( .AN(n16), .B(n9), .Y(n49) );
  OAI2BB1X1 U152 ( .A0N(n153), .A1N(n88), .B0(n87), .Y(DQLN[5]) );
  AOI211X1 U153 ( .A0(n86), .A1(n9), .B0(n89), .C0(n85), .Y(n87) );
  NAND2X1 U154 ( .A(n80), .B(n116), .Y(n88) );
  NOR2X1 U155 ( .A(n79), .B(n78), .Y(n80) );
  NAND2BX1 U156 ( .AN(n36), .B(n35), .Y(n78) );
  OAI22X1 U157 ( .A0(n63), .A1(n114), .B0(n34), .B1(n139), .Y(n36) );
  INVX1 U159 ( .A(n79), .Y(n115) );
  OAI2BB1X1 U160 ( .A0N(n6), .A1N(n84), .B0(n83), .Y(n89) );
  INVX1 U161 ( .A(n63), .Y(n159) );
  NAND2X1 U162 ( .A(n81), .B(n7), .Y(n142) );
  OAI21XL U163 ( .A0(n154), .A1(n64), .B0(n62), .Y(n18) );
  OAI21XL U164 ( .A0(n161), .A1(n160), .B0(n159), .Y(n162) );
  OAI21XL U165 ( .A0(n158), .A1(n157), .B0(n156), .Y(n160) );
  INVX1 U166 ( .A(n155), .Y(n161) );
  NAND3X1 U167 ( .A(I[4]), .B(I[2]), .C(n65), .Y(n66) );
  MXI2X1 U168 ( .A(n41), .B(n40), .S0(I[0]), .Y(n42) );
  OAI22X1 U169 ( .A0(n158), .A1(n104), .B0(DQS), .B1(n101), .Y(n79) );
  NAND3BX1 U170 ( .AN(n131), .B(n130), .C(n129), .Y(DQLN[7]) );
  AOI31X1 U171 ( .A0(n128), .A1(I[3]), .A2(n29), .B0(n127), .Y(n129) );
  OAI31X1 U172 ( .A0(n125), .A1(n124), .A2(n123), .B0(n153), .Y(n130) );
  OAI221XL U173 ( .A0(n114), .A1(n113), .B0(n112), .B1(n111), .C0(n110), .Y(
        n131) );
  NAND2X1 U174 ( .A(n97), .B(I[4]), .Y(n98) );
  NAND2BX1 U175 ( .AN(n71), .B(I[0]), .Y(n155) );
  NAND3BX1 U176 ( .AN(DQLN[10]), .B(n152), .C(n151), .Y(DQLN[9]) );
  XOR2X1 U177 ( .A(I[2]), .B(I[3]), .Y(n92) );
  XOR2XL U1 ( .A(I[0]), .B(I[1]), .Y(n7) );
  NAND2X1 U2 ( .A(I[2]), .B(n154), .Y(n106) );
  OAI33X1 U15 ( .A0(n34), .A1(n106), .A2(n52), .B0(n72), .B1(n117), .B2(n113), 
        .Y(n28) );
  NAND2X1 U16 ( .A(I[4]), .B(n153), .Y(n102) );
  NAND2XL U19 ( .A(I[0]), .B(n154), .Y(n39) );
  AOI33X1 U31 ( .A0(n72), .A1(DQS), .A2(n52), .B0(n156), .B1(n71), .B2(n18), 
        .Y(n1) );
  INVX1 U34 ( .A(n1), .Y(n21) );
  AOI211X1 U52 ( .A0(n153), .A1(n68), .B0(n74), .C0(n73), .Y(n76) );
  AOI2BB2X1 U56 ( .B0(n153), .B1(n135), .A0N(n102), .A1N(n101), .Y(n109) );
  AOI221X1 U66 ( .A0(I[2]), .A1(n64), .B0(I[4]), .B1(n153), .C0(n11), .Y(n9)
         );
  NAND4X1 U81 ( .A(n105), .B(n141), .C(n77), .D(n76), .Y(DQLN_4_) );
  NAND2X1 U90 ( .A(I[2]), .B(n50), .Y(n122) );
  INVX1 U98 ( .A(n9), .Y(DQS) );
endmodule


module ADDA_0_DW01_add_11 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n2, n3, n4, n5, n7, n8, n9, n10, n12, n13, n14, n15, n16, n17, n18,
         n20, n21, n22, n23, n25, n27, n29, n30, n32, n34, n35, n36, n37, n38,
         n39, n40, n41, n42, n43, n44, n45, n46, n47, n49, n51, n52, n54, n56,
         n57, n58, n60, n62, n63, n64, n65, n67, n69, SUM_1_, SUM_2_, SUM_3_,
         SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_, SUM_9_, SUM_10_, SUM_11_,
         B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_,
         A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_, A_10_,
         A_11_, n124, n125, n126, n127, n128, SUM_0_, n130, n131, n132, n133;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign SUM[0] = SUM_0_;

  XOR2X4 U1 ( .A(n13), .B(n12), .Y(SUM_11_) );
  NOR2X4 U9 ( .A(B_10_), .B(A_10_), .Y(n16) );
  XNOR2X4 U11 ( .A(n23), .B(n2), .Y(SUM_9_) );
  AOI21X4 U12 ( .A0(n23), .A1(n69), .B0(n20), .Y(n18) );
  NOR2X4 U17 ( .A(B_9_), .B(A_9_), .Y(n21) );
  NAND2X4 U18 ( .A(B_9_), .B(A_9_), .Y(n22) );
  XOR2X4 U19 ( .A(n30), .B(n3), .Y(SUM_8_) );
  XNOR2X4 U29 ( .A(n35), .B(n4), .Y(SUM_7_) );
  NAND2X4 U33 ( .A(n124), .B(n34), .Y(n4) );
  AOI21X4 U39 ( .A0(n37), .A1(n45), .B0(n38), .Y(n36) );
  NOR2X4 U40 ( .A(n39), .B(n42), .Y(n37) );
  OAI21X4 U41 ( .A0(n39), .A1(n43), .B0(n40), .Y(n38) );
  NOR2X4 U44 ( .A(B_6_), .B(A_6_), .Y(n39) );
  NOR2X4 U50 ( .A(B_5_), .B(A_5_), .Y(n42) );
  NAND2X4 U51 ( .A(A_5_), .B(B_5_), .Y(n43) );
  OAI21X4 U54 ( .A0(n46), .A1(n58), .B0(n47), .Y(n45) );
  AOI21X4 U56 ( .A0(n125), .A1(n54), .B0(n49), .Y(n47) );
  AOI21X4 U73 ( .A0(n63), .A1(n131), .B0(n60), .Y(n58) );
  XNOR2X2 U94 ( .A(n41), .B(n5), .Y(SUM_6_) );
  NAND2BX1 U95 ( .AN(n64), .B(n65), .Y(n10) );
  NOR2BX1 U96 ( .AN(n43), .B(n42), .Y(n128) );
  AOI21X1 U97 ( .A0(n32), .A1(n127), .B0(n27), .Y(n25) );
  CLKINVX2 U98 ( .A(n34), .Y(n32) );
  INVX1 U99 ( .A(n29), .Y(n27) );
  AOI21XL U100 ( .A0(n57), .A1(n132), .B0(n54), .Y(n52) );
  AND2X2 U101 ( .A(n126), .B(n67), .Y(SUM_0_) );
  NOR2BX4 U102 ( .AN(n17), .B(n16), .Y(n133) );
  NOR2X1 U103 ( .A(n16), .B(n21), .Y(n14) );
  AOI21X4 U104 ( .A0(n35), .A1(n124), .B0(n32), .Y(n30) );
  INVX8 U105 ( .A(n36), .Y(n35) );
  OAI21X1 U106 ( .A0(n16), .A1(n22), .B0(n17), .Y(n15) );
  NAND2X1 U107 ( .A(B_3_), .B(A_3_), .Y(n56) );
  INVX1 U108 ( .A(n56), .Y(n54) );
  NAND2X2 U109 ( .A(B_7_), .B(A_7_), .Y(n34) );
  OR2X4 U110 ( .A(B_7_), .B(A_7_), .Y(n124) );
  NAND2X2 U111 ( .A(B_4_), .B(A_4_), .Y(n51) );
  NAND2X1 U112 ( .A(B_8_), .B(A_8_), .Y(n29) );
  INVX1 U113 ( .A(n22), .Y(n20) );
  NAND2X2 U114 ( .A(n69), .B(n22), .Y(n2) );
  OR2X4 U115 ( .A(B_4_), .B(A_4_), .Y(n125) );
  OR2X2 U116 ( .A(B_0_), .B(A_0_), .Y(n126) );
  OR2X4 U117 ( .A(B_8_), .B(A_8_), .Y(n127) );
  INVX2 U118 ( .A(n62), .Y(n60) );
  OAI21X2 U119 ( .A0(n64), .A1(n67), .B0(n65), .Y(n63) );
  AND2X1 U120 ( .A(n127), .B(n124), .Y(n130) );
  NAND2X1 U121 ( .A(B_2_), .B(A_2_), .Y(n62) );
  NAND2X2 U122 ( .A(n127), .B(n29), .Y(n3) );
  NAND2BX1 U123 ( .AN(n39), .B(n40), .Y(n5) );
  NAND2XL U124 ( .A(n131), .B(n62), .Y(n9) );
  XNOR2X1 U125 ( .A(n44), .B(n128), .Y(SUM_5_) );
  NAND2XL U126 ( .A(n132), .B(n56), .Y(n8) );
  XOR2XL U127 ( .A(n10), .B(n67), .Y(SUM_1_) );
  NAND2X2 U128 ( .A(B_10_), .B(A_10_), .Y(n17) );
  INVXL U129 ( .A(n45), .Y(n44) );
  INVXL U130 ( .A(n58), .Y(n57) );
  OAI21XL U131 ( .A0(n44), .A1(n42), .B0(n43), .Y(n41) );
  XOR2X1 U132 ( .A(n52), .B(n7), .Y(SUM_4_) );
  NAND2XL U133 ( .A(n125), .B(n51), .Y(n7) );
  INVX1 U134 ( .A(n51), .Y(n49) );
  XNOR2XL U135 ( .A(n9), .B(n63), .Y(SUM_2_) );
  XNOR2X1 U136 ( .A(n57), .B(n8), .Y(SUM_3_) );
  OAI2BB1X4 U137 ( .A0N(n130), .A1N(n35), .B0(n25), .Y(n23) );
  NAND2X1 U138 ( .A(B_0_), .B(A_0_), .Y(n67) );
  NOR2X1 U139 ( .A(B_1_), .B(A_1_), .Y(n64) );
  NAND2X1 U140 ( .A(B_1_), .B(A_1_), .Y(n65) );
  NAND2X2 U141 ( .A(B_6_), .B(A_6_), .Y(n40) );
  OR2X2 U142 ( .A(B_2_), .B(A_2_), .Y(n131) );
  OR2X2 U143 ( .A(B_3_), .B(A_3_), .Y(n132) );
  XNOR2X4 U144 ( .A(n18), .B(n133), .Y(SUM_10_) );
  INVX1 U145 ( .A(A_11_), .Y(n12) );
  AOI21X2 U146 ( .A0(n23), .A1(n14), .B0(n15), .Y(n13) );
  NAND2X2 U147 ( .A(n125), .B(n132), .Y(n46) );
  CLKINVX4 U148 ( .A(n21), .Y(n69) );
endmodule


module ADDA_0 ( DQLN, Y, DQL );
  input [11:0] DQLN;
  input [12:0] Y;
  output [11:0] DQL;
  wire   SYNOPSYS_UNCONNECTED__0;

  ADDA_0_DW01_add_11 add_44 ( .A({1'b0, DQLN}), .B({1'b0, 1'b0, Y[12:2]}), 
        .CI(1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, DQL}) );
endmodule


module ANTILOG_0 ( DQL, DQS, DQ );
  input [11:0] DQL;
  output [15:0] DQ;
  input DQS;
  wire   DQS, DQ_14_, DQ_13_, DQ_12_, DQ_11_, DQ_10_, DQ_8_, DQ_7_, DQ_6_,
         DQ_5_, DQ_4_, DQ_3_, DQ_2_, n73, DQ_0_, N2, n1, n2, n3, n4, DQ_1_,
         DQ_9_, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
         n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72;
  assign DQ[15] = DQS;
  assign DQ[14] = DQ_14_;
  assign DQ[13] = DQ_13_;
  assign DQ[12] = DQ_12_;
  assign DQ[11] = DQ_11_;
  assign DQ[10] = DQ_10_;
  assign DQ[8] = DQ_8_;
  assign DQ[7] = DQ_7_;
  assign DQ[6] = DQ_6_;
  assign DQ[5] = DQ_5_;
  assign DQ[4] = DQ_4_;
  assign DQ[3] = DQ_3_;
  assign DQ[2] = DQ_2_;
  assign DQ[0] = DQ_0_;
  assign N2 = DQL[7];
  assign DQ[1] = DQ_1_;
  assign DQ[9] = DQ_9_;

  OAI31X1 U3 ( .A0(n7), .A1(n66), .A2(n37), .B0(n15), .Y(n45) );
  OAI2BB1X2 U4 ( .A0N(n46), .A1N(n45), .B0(n44), .Y(DQ_4_) );
  BUFX8 U5 ( .A(n73), .Y(DQ_1_) );
  OAI22X2 U6 ( .A0(n65), .A1(n28), .B0(n49), .B1(n31), .Y(n73) );
  MXI2X2 U7 ( .A(DQL[5]), .B(DQL[3]), .S0(n8), .Y(n25) );
  DLY1X1 U8 ( .A(DQL[6]), .Y(n1) );
  OR2XL U9 ( .A(n65), .B(n66), .Y(n4) );
  MXI2X4 U10 ( .A(n23), .B(n50), .S0(n46), .Y(n65) );
  NAND3XL U11 ( .A(n18), .B(n7), .C(n61), .Y(n15) );
  NAND2BX2 U12 ( .AN(n52), .B(n51), .Y(DQ_5_) );
  NAND2X2 U13 ( .A(n21), .B(n14), .Y(n72) );
  INVX2 U14 ( .A(n11), .Y(n21) );
  OR2X4 U15 ( .A(n48), .B(n66), .Y(n71) );
  NAND2XL U16 ( .A(n62), .B(n3), .Y(n44) );
  AND2X4 U17 ( .A(n14), .B(n16), .Y(n8) );
  NOR2BX1 U18 ( .AN(n68), .B(n71), .Y(DQ_11_) );
  NAND2X4 U19 ( .A(n47), .B(n48), .Y(n31) );
  MXI2X1 U20 ( .A(n34), .B(n22), .S0(n11), .Y(n3) );
  NAND2X1 U21 ( .A(n62), .B(n68), .Y(n58) );
  INVX2 U22 ( .A(n31), .Y(n62) );
  OAI21XL U23 ( .A0(n72), .A1(DQL[0]), .B0(n36), .Y(n2) );
  INVX1 U24 ( .A(n2), .Y(n59) );
  OR2XL U25 ( .A(n31), .B(n69), .Y(n63) );
  OR2X2 U26 ( .A(n48), .B(n28), .Y(n53) );
  NAND2XL U27 ( .A(n11), .B(n39), .Y(n60) );
  MXI2X2 U28 ( .A(n38), .B(n55), .S0(n46), .Y(n67) );
  NOR2BX4 U29 ( .AN(n27), .B(n26), .Y(n55) );
  OAI2BB1X4 U30 ( .A0N(n59), .A1N(n64), .B0(n58), .Y(DQ_7_) );
  OAI2BB1X4 U31 ( .A0N(n59), .A1N(n62), .B0(n43), .Y(DQ_3_) );
  MXI2X1 U32 ( .A(n25), .B(n24), .S0(n11), .Y(n27) );
  MXI2X2 U33 ( .A(n22), .B(n25), .S0(n11), .Y(n50) );
  OAI2BB1X4 U34 ( .A0N(n45), .A1N(n48), .B0(n19), .Y(DQ_0_) );
  OAI211X1 U35 ( .A0(DQL[2]), .A1(n7), .B0(n72), .C0(n30), .Y(n54) );
  NAND2X2 U36 ( .A(n14), .B(n16), .Y(n39) );
  MXI2X1 U37 ( .A(DQL[4]), .B(DQL[2]), .S0(n8), .Y(n22) );
  NAND2X1 U38 ( .A(n42), .B(n3), .Y(n19) );
  CLKINVX3 U39 ( .A(n4), .Y(DQ_9_) );
  NAND2BX2 U40 ( .AN(n57), .B(n56), .Y(DQ_6_) );
  OR2X4 U41 ( .A(n33), .B(n32), .Y(DQ_2_) );
  OAI2BB1X4 U42 ( .A0N(n64), .A1N(n3), .B0(n63), .Y(DQ_8_) );
  NAND2XL U43 ( .A(n42), .B(n68), .Y(n43) );
  INVX1 U44 ( .A(n70), .Y(n23) );
  NOR2X1 U45 ( .A(n67), .B(n28), .Y(n33) );
  NOR2X2 U46 ( .A(n67), .B(n66), .Y(DQ_10_) );
  NAND2BX1 U47 ( .AN(n72), .B(DQL[4]), .Y(n40) );
  AND2X2 U48 ( .A(DQL[8]), .B(n11), .Y(n9) );
  NAND3X1 U49 ( .A(DQL[10]), .B(DQL[9]), .C(n9), .Y(n12) );
  BUFX4 U50 ( .A(n60), .Y(n7) );
  INVX2 U51 ( .A(n71), .Y(n64) );
  OAI22XL U52 ( .A0(n71), .A1(n54), .B0(n72), .B1(n53), .Y(n57) );
  NOR2XL U53 ( .A(n71), .B(n69), .Y(DQ_12_) );
  INVXL U54 ( .A(DQL[6]), .Y(n20) );
  NAND2XL U55 ( .A(n62), .B(n50), .Y(n51) );
  NOR2XL U56 ( .A(n31), .B(n54), .Y(n32) );
  NOR2X1 U57 ( .A(n7), .B(n1), .Y(n26) );
  OAI22XL U58 ( .A0(n71), .A1(n49), .B0(n70), .B1(n53), .Y(n52) );
  NAND2XL U59 ( .A(n61), .B(n7), .Y(n69) );
  OR2X4 U60 ( .A(DQL[11]), .B(n13), .Y(n28) );
  NOR2XL U61 ( .A(DQL[4]), .B(n39), .Y(n24) );
  INVX1 U62 ( .A(n53), .Y(n42) );
  NOR2XL U63 ( .A(n72), .B(n71), .Y(DQ_14_) );
  INVXL U64 ( .A(n72), .Y(n38) );
  INVX1 U65 ( .A(n28), .Y(n18) );
  NAND2X1 U66 ( .A(DQL[8]), .B(n11), .Y(n16) );
  NAND3X1 U67 ( .A(n7), .B(n41), .C(n40), .Y(n68) );
  NAND2XL U68 ( .A(n10), .B(n39), .Y(n49) );
  MX2X1 U69 ( .A(DQL[0]), .B(DQL[1]), .S0(n11), .Y(n10) );
  INVX1 U70 ( .A(DQL[0]), .Y(n37) );
  MXI2X1 U71 ( .A(DQL[3]), .B(DQL[1]), .S0(n8), .Y(n34) );
  AOI22XL U72 ( .A0(n11), .A1(DQL[5]), .B0(n1), .B1(n39), .Y(n41) );
  MXI2X1 U73 ( .A(n35), .B(n34), .S0(n11), .Y(n36) );
  AOI2BB2XL U74 ( .B0(n20), .B1(n11), .A0N(DQL[5]), .A1N(n72), .Y(n61) );
  NOR2XL U75 ( .A(DQL[1]), .B(n11), .Y(n29) );
  BUFX20 U76 ( .A(N2), .Y(n11) );
  NAND2X4 U77 ( .A(DQL[9]), .B(n9), .Y(n17) );
  NOR2XL U78 ( .A(n71), .B(n70), .Y(DQ_13_) );
  NAND2XL U79 ( .A(n55), .B(n62), .Y(n56) );
  AOI21XL U80 ( .A0(n8), .A1(n37), .B0(n29), .Y(n30) );
  NOR2XL U81 ( .A(DQL[2]), .B(n8), .Y(n35) );
  OAI2BB1X1 U82 ( .A0N(n21), .A1N(n20), .B0(n8), .Y(n70) );
  NAND2BX4 U83 ( .AN(DQL[8]), .B(n21), .Y(n14) );
  NAND2BX4 U84 ( .AN(DQL[10]), .B(n17), .Y(n13) );
  NAND3BX4 U85 ( .AN(DQL[11]), .B(n12), .C(n13), .Y(n66) );
  OAI21X4 U86 ( .A0(DQL[9]), .A1(n9), .B0(n17), .Y(n48) );
  CLKINVX3 U87 ( .A(n48), .Y(n46) );
  CLKINVX3 U88 ( .A(n66), .Y(n47) );
endmodule


module I_ADAP_QUAN_0 ( D, Y, I, RATE );
  output [15:0] D;
  input [12:0] Y;
  input [4:0] I;
  input [1:0] RATE;
  wire   DQS;
  wire   [11:0] RECONST_OUT;
  wire   [11:0] ADDA_OUT;

  RECONST_0 I_ADAP_QUAN_RECONST ( .I(I), .RATE(RATE), .DQLN(RECONST_OUT), 
        .DQS(DQS) );
  ADDA_0 I_ADAP_QUAN_ADDA ( .DQLN(RECONST_OUT), .Y(Y), .DQL(ADDA_OUT) );
  ANTILOG_0 I_ADAP_QUAN_ANTILOG ( .DQL(ADDA_OUT), .DQS(DQS), .DQ(D) );
endmodule


module ADDC_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX1 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module ADDC_0 ( DQ, SEZ, PK0, SIGPK );
  input [15:0] DQ;
  input [14:0] SEZ;
  output PK0, SIGPK;
  wire   N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17,
         DQI_15_, N19, n1, n2, n3, n4, n5, n6, n7, n8, n9, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71;
  wire   [14:0] DQSEZ;
  wire   [14:2] sub_54_carry;
  assign N3 = DQ[0];
  assign SIGPK = N19;

  AND4X2 U5 ( .A(n71), .B(n70), .C(n69), .D(n68), .Y(N19) );
  AND2X2 U21 ( .A(n1), .B(DQ[15]), .Y(DQI_15_) );
  INVX1 U2 ( .A(n59), .Y(n52) );
  NOR2BX1 U4 ( .AN(sub_54_carry[7]), .B(DQ[7]), .Y(sub_54_carry[8]) );
  CLKINVXL U6 ( .A(DQ[8]), .Y(n4) );
  AOI22XL U7 ( .A0(DQ[9]), .A1(n2), .B0(N12), .B1(DQ[15]), .Y(n67) );
  INVX1 U8 ( .A(DQ[1]), .Y(n12) );
  INVX1 U9 ( .A(n58), .Y(n20) );
  INVX1 U10 ( .A(DQ[11]), .Y(n16) );
  NAND2X1 U11 ( .A(sub_54_carry[14]), .B(n13), .Y(n1) );
  INVXL U12 ( .A(DQ[12]), .Y(n15) );
  INVXL U13 ( .A(DQ[13]), .Y(n14) );
  INVXL U14 ( .A(DQ[2]), .Y(n11) );
  INVXL U15 ( .A(DQ[3]), .Y(n9) );
  INVXL U16 ( .A(DQ[4]), .Y(n8) );
  INVXL U17 ( .A(DQ[10]), .Y(n17) );
  INVXL U18 ( .A(DQ[9]), .Y(n3) );
  INVXL U19 ( .A(DQ[5]), .Y(n7) );
  INVXL U20 ( .A(DQ[7]), .Y(n5) );
  INVXL U22 ( .A(DQ[6]), .Y(n6) );
  AOI22XL U23 ( .A0(DQ[14]), .A1(n2), .B0(N17), .B1(DQ[15]), .Y(n58) );
  AOI22XL U24 ( .A0(DQ[11]), .A1(n2), .B0(N14), .B1(DQ[15]), .Y(n55) );
  INVX1 U25 ( .A(n57), .Y(n21) );
  INVX1 U26 ( .A(n53), .Y(n19) );
  AOI22XL U27 ( .A0(DQ[1]), .A1(n2), .B0(N4), .B1(DQ[15]), .Y(n59) );
  INVXL U28 ( .A(N3), .Y(n18) );
  INVX1 U29 ( .A(DQ[14]), .Y(n13) );
  INVX1 U30 ( .A(DQ[15]), .Y(n2) );
  NOR4X1 U31 ( .A(DQSEZ[6]), .B(DQSEZ[5]), .C(DQSEZ[4]), .D(DQSEZ[3]), .Y(n69)
         );
  NOR4X1 U32 ( .A(DQSEZ[12]), .B(DQSEZ[11]), .C(DQSEZ[10]), .D(DQSEZ[0]), .Y(
        n71) );
  NOR4X1 U33 ( .A(DQSEZ[2]), .B(DQSEZ[1]), .C(DQSEZ[14]), .D(DQSEZ[13]), .Y(
        n70) );
  NOR4X1 U34 ( .A(PK0), .B(DQSEZ[9]), .C(DQSEZ[8]), .D(DQSEZ[7]), .Y(n68) );
  INVX1 U35 ( .A(n60), .Y(n51) );
  INVX1 U36 ( .A(n56), .Y(n22) );
  AOI22X1 U37 ( .A0(DQ[12]), .A1(n2), .B0(N15), .B1(DQ[15]), .Y(n56) );
  AOI22XL U38 ( .A0(DQ[13]), .A1(n2), .B0(N16), .B1(DQ[15]), .Y(n57) );
  INVX1 U39 ( .A(n63), .Y(n48) );
  AOI22XL U40 ( .A0(DQ[5]), .A1(n2), .B0(N8), .B1(DQ[15]), .Y(n63) );
  INVX1 U41 ( .A(n55), .Y(n23) );
  INVX1 U42 ( .A(n54), .Y(n24) );
  AOI22XL U43 ( .A0(DQ[10]), .A1(n2), .B0(N13), .B1(DQ[15]), .Y(n54) );
  INVX1 U44 ( .A(n65), .Y(n27) );
  AOI22XL U45 ( .A0(DQ[7]), .A1(n2), .B0(N10), .B1(DQ[15]), .Y(n65) );
  INVX1 U46 ( .A(n66), .Y(n26) );
  AOI22XL U47 ( .A0(DQ[8]), .A1(n2), .B0(N11), .B1(DQ[15]), .Y(n66) );
  INVX1 U48 ( .A(n67), .Y(n25) );
  INVX1 U49 ( .A(n64), .Y(n47) );
  AOI22XL U50 ( .A0(DQ[6]), .A1(n2), .B0(N9), .B1(DQ[15]), .Y(n64) );
  INVX1 U51 ( .A(n62), .Y(n49) );
  AOI22XL U52 ( .A0(DQ[4]), .A1(n2), .B0(N7), .B1(DQ[15]), .Y(n62) );
  INVX1 U53 ( .A(n61), .Y(n50) );
  AOI22XL U54 ( .A0(DQ[3]), .A1(n2), .B0(N6), .B1(DQ[15]), .Y(n61) );
  AOI22XL U55 ( .A0(N3), .A1(n2), .B0(N3), .B1(DQ[15]), .Y(n53) );
  AOI22XL U56 ( .A0(DQ[2]), .A1(n2), .B0(N5), .B1(DQ[15]), .Y(n60) );
  XOR2X1 U57 ( .A(n13), .B(sub_54_carry[14]), .Y(N17) );
  AND2X1 U58 ( .A(sub_54_carry[13]), .B(n14), .Y(sub_54_carry[14]) );
  XOR2X1 U59 ( .A(n14), .B(sub_54_carry[13]), .Y(N16) );
  AND2X1 U60 ( .A(sub_54_carry[12]), .B(n15), .Y(sub_54_carry[13]) );
  XOR2X1 U61 ( .A(n15), .B(sub_54_carry[12]), .Y(N15) );
  AND2X1 U62 ( .A(sub_54_carry[11]), .B(n16), .Y(sub_54_carry[12]) );
  XOR2X1 U63 ( .A(n16), .B(sub_54_carry[11]), .Y(N14) );
  AND2X1 U64 ( .A(sub_54_carry[10]), .B(n17), .Y(sub_54_carry[11]) );
  XOR2X1 U65 ( .A(n17), .B(sub_54_carry[10]), .Y(N13) );
  AND2X1 U66 ( .A(sub_54_carry[9]), .B(n3), .Y(sub_54_carry[10]) );
  XOR2X1 U67 ( .A(n3), .B(sub_54_carry[9]), .Y(N12) );
  AND2X1 U68 ( .A(sub_54_carry[8]), .B(n4), .Y(sub_54_carry[9]) );
  XOR2X1 U69 ( .A(n4), .B(sub_54_carry[8]), .Y(N11) );
  XOR2X1 U70 ( .A(n5), .B(sub_54_carry[7]), .Y(N10) );
  AND2X1 U71 ( .A(sub_54_carry[6]), .B(n6), .Y(sub_54_carry[7]) );
  XOR2X1 U72 ( .A(n6), .B(sub_54_carry[6]), .Y(N9) );
  AND2X1 U73 ( .A(sub_54_carry[5]), .B(n7), .Y(sub_54_carry[6]) );
  XOR2X1 U74 ( .A(n7), .B(sub_54_carry[5]), .Y(N8) );
  AND2X1 U75 ( .A(sub_54_carry[4]), .B(n8), .Y(sub_54_carry[5]) );
  XOR2X1 U76 ( .A(n8), .B(sub_54_carry[4]), .Y(N7) );
  AND2X1 U77 ( .A(sub_54_carry[3]), .B(n9), .Y(sub_54_carry[4]) );
  XOR2X1 U78 ( .A(n9), .B(sub_54_carry[3]), .Y(N6) );
  AND2X1 U79 ( .A(sub_54_carry[2]), .B(n11), .Y(sub_54_carry[3]) );
  XOR2X1 U80 ( .A(n11), .B(sub_54_carry[2]), .Y(N5) );
  AND2X1 U81 ( .A(n18), .B(n12), .Y(sub_54_carry[2]) );
  XOR2X1 U82 ( .A(n12), .B(n18), .Y(N4) );
  ADDC_0_DW01_add_0 add_57 ( .A({DQI_15_, n20, n21, n22, n23, n24, n25, n26, 
        n27, n47, n48, n49, n50, n51, n52, n19}), .B({SEZ[14], SEZ}), .CI(1'b0), .SUM({PK0, DQSEZ}) );
endmodule


module DELAY_RESET_STATE0_WIDTH1_1_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay0_reg_0_ ( .D(x_0_), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
endmodule


module DELAY_RESET_STATE0_WIDTH1_0_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay0_reg_0_ ( .D(x_0_), .SI(x_0_), .SE(test_se), .CK(clk), .RN(
        n1), .Q(delay0_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
endmodule


module ADDB_0_DW01_add_6 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n2, n3, n6, n7, n9, n11, n12, n14, n15, n18, n19, n20, n21, n22, n23,
         n24, n25, n26, n27, n28, n29, n31, n33, n34, n35, n36, n37, n38, n41,
         n42, n43, n44, n46, n48, n49, n50, n51, n52, n53, n54, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n69, n71, n72, n73, n74, n75,
         n76, n79, n80, n81, n82, n84, n86, n87, n89, n91, n92, n93, n95, n97,
         n98, n99, n100, n102, SUM_2_, SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_,
         SUM_9_, SUM_10_, SUM_11_, SUM_12_, SUM_13_, SUM_14_, SUM_15_, B_0_,
         B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_, B_11_,
         B_12_, B_13_, B_14_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_,
         A_8_, A_9_, A_10_, A_11_, A_12_, A_13_, A_14_, A_15_, n173, n174,
         SUM_0_, SUM_1_, SUM_3_, n178, n179, n180, n181, n182, n183, n184,
         n185, n186, n187, n188, n189, n190, n191, n192, n193;
  assign SUM[2] = SUM_2_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign SUM[15] = SUM_15_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign B_13_ = B[13];
  assign B_14_ = B[14];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];
  assign SUM[0] = SUM_0_;
  assign SUM[1] = SUM_1_;
  assign SUM[3] = SUM_3_;

  OAI21X4 U7 ( .A0(n22), .A1(n20), .B0(n21), .Y(n19) );
  AOI21X4 U13 ( .A0(n23), .A1(n42), .B0(n24), .Y(n22) );
  NAND2X4 U39 ( .A(A_11_), .B(B_11_), .Y(n36) );
  OAI21X4 U42 ( .A0(n60), .A1(n43), .B0(n44), .Y(n42) );
  NOR2X4 U53 ( .A(n52), .B(n57), .Y(n50) );
  AOI21X4 U69 ( .A0(n61), .A1(n80), .B0(n62), .Y(n60) );
  OAI21X4 U87 ( .A0(n79), .A1(n73), .B0(n74), .Y(n72) );
  NAND2X4 U95 ( .A(A_5_), .B(B_5_), .Y(n74) );
  AOI21X4 U117 ( .A0(n98), .A1(n189), .B0(n95), .Y(n93) );
  INVX1 U138 ( .A(n60), .Y(n59) );
  XOR2X2 U139 ( .A(n59), .B(n183), .Y(SUM_8_) );
  NAND2X2 U140 ( .A(A_8_), .B(B_8_), .Y(n58) );
  NOR2X2 U141 ( .A(A_9_), .B(B_9_), .Y(n52) );
  NAND2X2 U142 ( .A(n50), .B(n188), .Y(n43) );
  OAI21X2 U143 ( .A0(n52), .A1(n58), .B0(n53), .Y(n51) );
  AOI21X2 U144 ( .A0(n51), .A1(n188), .B0(n46), .Y(n44) );
  INVX1 U145 ( .A(n48), .Y(n46) );
  NOR2BX1 U146 ( .AN(n58), .B(n57), .Y(n183) );
  OAI21X2 U147 ( .A0(n29), .A1(n25), .B0(n26), .Y(n24) );
  NOR2X2 U148 ( .A(n28), .B(n25), .Y(n23) );
  NAND2BX1 U149 ( .AN(n63), .B(n64), .Y(n9) );
  AOI21X1 U150 ( .A0(n59), .A1(n50), .B0(n51), .Y(n49) );
  NAND2BX1 U151 ( .AN(n99), .B(n100), .Y(n15) );
  NAND2BX1 U152 ( .AN(n25), .B(n26), .Y(n3) );
  NAND2BX1 U153 ( .AN(n20), .B(n21), .Y(n2) );
  NOR2BXL U154 ( .AN(n36), .B(n35), .Y(n182) );
  XNOR2X2 U155 ( .A(n65), .B(n9), .Y(SUM_7_) );
  OAI21XL U156 ( .A0(n60), .A1(n57), .B0(n58), .Y(n173) );
  INVX1 U157 ( .A(n173), .Y(n54) );
  XOR2X1 U158 ( .A(n54), .B(n7), .Y(SUM_9_) );
  INVX1 U159 ( .A(n35), .Y(n37) );
  NAND2X1 U160 ( .A(n75), .B(n187), .Y(n66) );
  CLKINVX3 U161 ( .A(n73), .Y(n75) );
  NOR2X2 U162 ( .A(A_14_), .B(B_14_), .Y(n20) );
  NOR2X2 U163 ( .A(A_7_), .B(B_7_), .Y(n63) );
  NOR2X4 U164 ( .A(A_5_), .B(B_5_), .Y(n73) );
  XNOR2X2 U165 ( .A(n14), .B(n98), .Y(SUM_2_) );
  NAND2XL U166 ( .A(n189), .B(n97), .Y(n14) );
  INVX1 U167 ( .A(n97), .Y(n95) );
  NOR2X2 U168 ( .A(A_8_), .B(B_8_), .Y(n57) );
  NOR2X2 U169 ( .A(n66), .B(n63), .Y(n61) );
  NAND2X2 U170 ( .A(A_3_), .B(B_3_), .Y(n91) );
  AOI21X1 U171 ( .A0(n186), .A1(n89), .B0(n84), .Y(n82) );
  NAND2X1 U172 ( .A(n186), .B(n185), .Y(n81) );
  NAND2X1 U173 ( .A(A_4_), .B(B_4_), .Y(n86) );
  OR2X2 U174 ( .A(A_3_), .B(B_3_), .Y(n185) );
  INVX1 U175 ( .A(n91), .Y(n89) );
  OR2X2 U176 ( .A(A_4_), .B(B_4_), .Y(n186) );
  CLKINVX3 U177 ( .A(n93), .Y(n92) );
  NAND2BX1 U178 ( .AN(A_15_), .B(n193), .Y(n192) );
  XOR2X1 U179 ( .A(n49), .B(n6), .Y(SUM_10_) );
  AOI21X2 U180 ( .A0(n187), .A1(n76), .B0(n69), .Y(n67) );
  NAND2X1 U181 ( .A(n191), .B(n37), .Y(n28) );
  AOI21X2 U182 ( .A0(n191), .A1(n38), .B0(n31), .Y(n29) );
  INVX1 U183 ( .A(n36), .Y(n38) );
  INVX1 U184 ( .A(n33), .Y(n31) );
  XOR2X1 U185 ( .A(n34), .B(n178), .Y(SUM_12_) );
  INVX2 U186 ( .A(n174), .Y(SUM_1_) );
  NAND2X1 U187 ( .A(A_14_), .B(B_14_), .Y(n21) );
  XNOR2X1 U188 ( .A(n15), .B(n102), .Y(n174) );
  OAI21X2 U189 ( .A0(n67), .A1(n63), .B0(n64), .Y(n62) );
  NOR2X2 U190 ( .A(A_11_), .B(B_11_), .Y(n35) );
  NAND2X2 U191 ( .A(A_12_), .B(B_12_), .Y(n33) );
  NOR2X2 U192 ( .A(A_1_), .B(B_1_), .Y(n99) );
  NAND2X2 U193 ( .A(A_2_), .B(B_2_), .Y(n97) );
  OAI21X2 U194 ( .A0(n99), .A1(n102), .B0(n100), .Y(n98) );
  NAND2BX2 U195 ( .AN(A_2_), .B(n190), .Y(n189) );
  XNOR2X1 U196 ( .A(n41), .B(n182), .Y(SUM_11_) );
  CLKINVX3 U197 ( .A(n74), .Y(n76) );
  INVX1 U198 ( .A(n71), .Y(n69) );
  NAND2X1 U199 ( .A(A_7_), .B(B_7_), .Y(n64) );
  NOR2X2 U200 ( .A(A_13_), .B(B_13_), .Y(n25) );
  NAND2X1 U201 ( .A(A_13_), .B(B_13_), .Y(n26) );
  XOR2X2 U202 ( .A(n87), .B(n12), .Y(SUM_4_) );
  XOR2X2 U203 ( .A(n79), .B(n11), .Y(SUM_5_) );
  AND2X2 U204 ( .A(n192), .B(n18), .Y(n184) );
  NAND2X1 U205 ( .A(A_15_), .B(B_14_), .Y(n18) );
  AND2X2 U206 ( .A(n179), .B(n102), .Y(SUM_0_) );
  OAI21X2 U207 ( .A0(n79), .A1(n66), .B0(n67), .Y(n65) );
  AOI21X1 U208 ( .A0(n92), .A1(n185), .B0(n89), .Y(n87) );
  INVX4 U209 ( .A(n80), .Y(n79) );
  OAI21X2 U210 ( .A0(n81), .A1(n93), .B0(n82), .Y(n80) );
  NAND2X1 U211 ( .A(A_9_), .B(B_9_), .Y(n53) );
  XOR2X2 U212 ( .A(n180), .B(n92), .Y(SUM_3_) );
  NAND2BX1 U213 ( .AN(n52), .B(n53), .Y(n7) );
  NAND2XL U214 ( .A(n186), .B(n86), .Y(n12) );
  NAND2XL U215 ( .A(n188), .B(n48), .Y(n6) );
  AND2X1 U216 ( .A(n191), .B(n33), .Y(n178) );
  OR2XL U217 ( .A(A_0_), .B(B_0_), .Y(n179) );
  INVX1 U218 ( .A(B_2_), .Y(n190) );
  INVX1 U219 ( .A(B_14_), .Y(n193) );
  INVXL U220 ( .A(n42), .Y(n41) );
  AND2X1 U221 ( .A(n185), .B(n91), .Y(n180) );
  XNOR2X1 U222 ( .A(n27), .B(n3), .Y(SUM_13_) );
  OAI21XL U223 ( .A0(n41), .A1(n28), .B0(n29), .Y(n27) );
  XOR2X4 U224 ( .A(n72), .B(n181), .Y(SUM_6_) );
  AND2X1 U225 ( .A(n187), .B(n71), .Y(n181) );
  OAI21XL U226 ( .A0(n41), .A1(n35), .B0(n36), .Y(n34) );
  INVX1 U227 ( .A(n86), .Y(n84) );
  NAND2XL U228 ( .A(n75), .B(n74), .Y(n11) );
  XOR2X1 U229 ( .A(n22), .B(n2), .Y(SUM_14_) );
  NAND2XL U230 ( .A(A_0_), .B(B_0_), .Y(n102) );
  XOR2X4 U231 ( .A(n19), .B(n184), .Y(SUM_15_) );
  OR2X4 U232 ( .A(A_6_), .B(B_6_), .Y(n187) );
  OR2X4 U233 ( .A(A_10_), .B(B_10_), .Y(n188) );
  NAND2X2 U234 ( .A(A_1_), .B(B_1_), .Y(n100) );
  NAND2X2 U235 ( .A(A_10_), .B(B_10_), .Y(n48) );
  OR2X4 U236 ( .A(A_12_), .B(B_12_), .Y(n191) );
  NAND2X2 U237 ( .A(A_6_), .B(B_6_), .Y(n71) );
endmodule


module ADDB_0 ( DQ, SE, SR );
  input [15:0] DQ;
  input [14:0] SE;
  output [15:0] SR;
  wire   N3, DQI_15_, n1, n2, n3, n4, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61;
  assign N3 = DQ[0];

  INVX2 U2 ( .A(DQ[2]), .Y(n43) );
  NOR2X2 U4 ( .A(DQ[3]), .B(DQ[2]), .Y(n41) );
  INVX2 U5 ( .A(n40), .Y(n45) );
  INVX1 U6 ( .A(n20), .Y(n21) );
  XOR2X1 U7 ( .A(DQ[9]), .B(n27), .Y(n53) );
  XOR2X2 U8 ( .A(DQ[14]), .B(n8), .Y(n48) );
  AOI31X1 U9 ( .A0(n30), .A1(n26), .A2(n10), .B0(n13), .Y(n27) );
  INVX2 U10 ( .A(n33), .Y(n30) );
  AOI21X2 U11 ( .A0(n45), .A1(n43), .B0(n13), .Y(n44) );
  NOR2X2 U12 ( .A(n9), .B(n13), .Y(n8) );
  NAND3XL U13 ( .A(n24), .B(n17), .C(n18), .Y(n19) );
  AND2X4 U14 ( .A(n40), .B(DQ[15]), .Y(n46) );
  OR2X2 U15 ( .A(n19), .B(DQ[12]), .Y(n20) );
  OAI31X1 U16 ( .A0(n33), .A1(n32), .A2(DQ[6]), .B0(DQ[15]), .Y(n1) );
  INVX1 U17 ( .A(n1), .Y(n31) );
  OAI21XL U18 ( .A0(n2), .A1(DQ[14]), .B0(DQ[15]), .Y(n3) );
  INVX1 U19 ( .A(n9), .Y(n2) );
  INVX1 U20 ( .A(n3), .Y(DQI_15_) );
  OR2X4 U21 ( .A(DQ[8]), .B(DQ[7]), .Y(n25) );
  XOR2X1 U22 ( .A(n46), .B(DQ[2]), .Y(n60) );
  XOR2X2 U23 ( .A(DQ[3]), .B(n44), .Y(n59) );
  XOR2X1 U24 ( .A(DQ[8]), .B(n29), .Y(n54) );
  AOI31XL U25 ( .A0(n30), .A1(n28), .A2(n10), .B0(n13), .Y(n29) );
  XOR2X1 U26 ( .A(DQ[7]), .B(n31), .Y(n55) );
  BUFX3 U27 ( .A(DQ[1]), .Y(n4) );
  NAND4BX2 U28 ( .AN(n25), .B(n30), .C(n10), .D(n15), .Y(n16) );
  XOR2X2 U29 ( .A(DQ[13]), .B(n22), .Y(n49) );
  NOR3X4 U30 ( .A(DQ[2]), .B(DQ[6]), .C(DQ[5]), .Y(n10) );
  INVX8 U31 ( .A(DQ[9]), .Y(n15) );
  XOR2X2 U32 ( .A(DQ[5]), .B(n38), .Y(n57) );
  INVXL U33 ( .A(n25), .Y(n26) );
  INVX4 U34 ( .A(DQ[3]), .Y(n14) );
  INVX1 U35 ( .A(DQ[10]), .Y(n17) );
  INVX1 U36 ( .A(DQ[11]), .Y(n18) );
  AND2X2 U37 ( .A(n20), .B(DQ[15]), .Y(n22) );
  AND2X2 U39 ( .A(n19), .B(DQ[15]), .Y(n23) );
  NOR2BX4 U40 ( .AN(N3), .B(n13), .Y(n47) );
  AND2X2 U41 ( .A(n24), .B(n17), .Y(n7) );
  OAI21X2 U42 ( .A0(n33), .A1(n32), .B0(DQ[15]), .Y(n34) );
  OR2X2 U43 ( .A(DQ[2]), .B(DQ[5]), .Y(n32) );
  XOR2X2 U44 ( .A(n4), .B(n47), .Y(n61) );
  XOR2X2 U45 ( .A(DQ[4]), .B(n42), .Y(n58) );
  AOI21X2 U46 ( .A0(n41), .A1(n45), .B0(n13), .Y(n42) );
  OR2X2 U47 ( .A(n7), .B(n13), .Y(n11) );
  NOR2BX4 U48 ( .AN(n21), .B(DQ[13]), .Y(n9) );
  INVX1 U49 ( .A(DQ[15]), .Y(n13) );
  INVXL U50 ( .A(DQ[6]), .Y(n35) );
  NAND2BX2 U51 ( .AN(N3), .B(n39), .Y(n40) );
  INVXL U52 ( .A(DQ[7]), .Y(n28) );
  NOR2XL U53 ( .A(n4), .B(DQ[2]), .Y(n36) );
  XNOR2X4 U54 ( .A(DQ[11]), .B(n11), .Y(n51) );
  XNOR2X1 U55 ( .A(DQ[10]), .B(n12), .Y(n52) );
  OR2XL U56 ( .A(n24), .B(n13), .Y(n12) );
  NOR3XL U57 ( .A(N3), .B(DQ[4]), .C(DQ[3]), .Y(n37) );
  XOR2X2 U58 ( .A(n35), .B(n34), .Y(n56) );
  NAND4BBX4 U59 ( .AN(DQ[4]), .BN(N3), .C(n14), .D(n39), .Y(n33) );
  INVX8 U60 ( .A(DQ[1]), .Y(n39) );
  CLKINVX3 U61 ( .A(n16), .Y(n24) );
  XOR2X4 U62 ( .A(n23), .B(DQ[12]), .Y(n50) );
  AOI21X2 U63 ( .A0(n37), .A1(n36), .B0(n13), .Y(n38) );
  ADDB_0_DW01_add_6 add_83 ( .A({DQI_15_, n48, n49, n50, n51, n52, n53, n54, 
        n55, n56, n57, n58, n59, n60, n61, N3}), .B({SE[14], SE}), .CI(1'b0), 
        .SUM(SR) );
endmodule


module FLOATB_0 ( SR, SR0 );
  input [15:0] SR;
  output [10:0] SR0;
  wire   SR_15_, SR0_8_, SR0_7_, SR0_5_, SR0_4_, SR0_3_, SR0_2_, SR0_1_,
         SR0_0_, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18,
         N19, N20, N77, N78, N79, N80, N81, N82, SR0_9_, SR0_6_, n3, n4,
         SR0_10_, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n74, n75, n76, n77, n78, n79, n80,
         n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139;
  wire   [14:2] sub_53_carry;
  assign SR_15_ = SR[15];
  assign SR0[8] = SR0_8_;
  assign SR0[7] = SR0_7_;
  assign SR0[5] = SR0_5_;
  assign SR0[4] = SR0_4_;
  assign SR0[3] = SR0_3_;
  assign SR0[2] = SR0_2_;
  assign SR0[1] = SR0_1_;
  assign SR0[0] = SR0_0_;
  assign N6 = SR[0];
  assign SR0[9] = SR0_9_;
  assign SR0[6] = SR0_6_;
  assign SR0[10] = SR0_10_;

  AND2X2 U34 ( .A(n121), .B(n114), .Y(n139) );
  AND2X2 U35 ( .A(n136), .B(n113), .Y(n121) );
  CLKINVXL U3 ( .A(SR[1]), .Y(n7) );
  NOR2XL U4 ( .A(N6), .B(SR[1]), .Y(sub_53_carry[2]) );
  INVX1 U5 ( .A(SR[4]), .Y(n10) );
  MX4XL U6 ( .A(n90), .B(n89), .C(n91), .D(n100), .S0(SR0_8_), .S1(SR0_7_), 
        .Y(n92) );
  MX4XL U7 ( .A(n99), .B(n98), .C(n97), .D(n96), .S0(SR0_9_), .S1(SR0_8_), .Y(
        N81) );
  NOR2BX1 U8 ( .AN(sub_53_carry[7]), .B(SR[7]), .Y(sub_53_carry[8]) );
  MX4XL U9 ( .A(n105), .B(n104), .C(n103), .D(n102), .S0(SR0_9_), .S1(SR0_8_), 
        .Y(N82) );
  NOR2BX1 U10 ( .AN(sub_53_carry[9]), .B(SR[9]), .Y(sub_53_carry[10]) );
  OAI221X4 U11 ( .A0(n127), .A1(n133), .B0(n126), .B1(n130), .C0(n125), .Y(
        SR0_6_) );
  INVX1 U12 ( .A(SR[10]), .Y(n16) );
  AOI22XL U13 ( .A0(N9), .A1(n4), .B0(SR[3]), .B1(n3), .Y(n118) );
  NAND2X1 U14 ( .A(n122), .B(n116), .Y(SR0_9_) );
  INVXL U15 ( .A(SR[6]), .Y(n12) );
  AOI22XL U16 ( .A0(N19), .A1(n4), .B0(SR[13]), .B1(n3), .Y(n106) );
  INVXL U17 ( .A(SR[13]), .Y(n19) );
  INVXL U18 ( .A(SR[11]), .Y(n17) );
  INVXL U19 ( .A(SR[8]), .Y(n14) );
  AOI22XL U20 ( .A0(N17), .A1(SR0_10_), .B0(SR[11]), .B1(n3), .Y(n114) );
  AOI22XL U21 ( .A0(SR0_10_), .A1(N16), .B0(SR[10]), .B1(n3), .Y(n115) );
  AOI22XL U22 ( .A0(N14), .A1(n4), .B0(SR[8]), .B1(n3), .Y(n111) );
  AOI22XL U23 ( .A0(N12), .A1(n4), .B0(SR[6]), .B1(n3), .Y(n110) );
  AOI22XL U24 ( .A0(N7), .A1(n4), .B0(SR[1]), .B1(n3), .Y(n119) );
  INVXL U25 ( .A(N6), .Y(n6) );
  INVXL U26 ( .A(SR_15_), .Y(n3) );
  AOI22XL U27 ( .A0(N6), .A1(SR0_10_), .B0(N6), .B1(n3), .Y(n126) );
  INVX1 U28 ( .A(SR0_7_), .Y(n22) );
  MXI2X1 U29 ( .A(n77), .B(n80), .S0(SR0_7_), .Y(n97) );
  MXI2X1 U30 ( .A(n86), .B(n90), .S0(SR0_7_), .Y(n103) );
  MXI2X1 U31 ( .A(n81), .B(n79), .S0(SR0_7_), .Y(n98) );
  MXI2X1 U32 ( .A(n91), .B(n89), .S0(SR0_7_), .Y(n104) );
  MXI2X1 U33 ( .A(n84), .B(n85), .S0(SR0_7_), .Y(n105) );
  MXI2X1 U36 ( .A(n86), .B(n85), .S0(n22), .Y(n87) );
  NOR2X1 U37 ( .A(n22), .B(n76), .Y(n99) );
  MXI2X1 U38 ( .A(n77), .B(n76), .S0(n22), .Y(n78) );
  NOR2X1 U39 ( .A(n84), .B(n22), .Y(n88) );
  NAND3BX1 U40 ( .AN(n137), .B(n136), .C(n135), .Y(SR0_7_) );
  AOI2BB2X1 U41 ( .B0(n134), .B1(n133), .A0N(n132), .A1N(n131), .Y(n135) );
  AOI21X1 U42 ( .A0(n130), .A1(n129), .B0(n128), .Y(n131) );
  NOR2BX1 U43 ( .AN(N77), .B(n120), .Y(SR0_0_) );
  MXI2X1 U44 ( .A(n39), .B(n38), .S0(SR0_9_), .Y(N77) );
  MXI2X1 U45 ( .A(n97), .B(n98), .S0(SR0_8_), .Y(n38) );
  NAND2X1 U46 ( .A(n99), .B(SR0_8_), .Y(n39) );
  NOR2BX1 U47 ( .AN(N78), .B(n120), .Y(SR0_1_) );
  MXI2X1 U48 ( .A(n75), .B(n74), .S0(SR0_9_), .Y(N78) );
  NAND2X1 U49 ( .A(SR0_8_), .B(n105), .Y(n75) );
  MXI2X1 U50 ( .A(n103), .B(n104), .S0(SR0_8_), .Y(n74) );
  NOR2BX1 U51 ( .AN(N79), .B(n120), .Y(SR0_2_) );
  MXI2X1 U52 ( .A(n83), .B(n82), .S0(SR0_9_), .Y(N79) );
  MX4X1 U53 ( .A(n81), .B(n94), .C(n80), .D(n79), .S0(SR0_8_), .S1(n22), .Y(
        n82) );
  NAND2X1 U54 ( .A(SR0_8_), .B(n78), .Y(n83) );
  NOR2BX1 U55 ( .AN(N80), .B(n120), .Y(SR0_3_) );
  MXI2X1 U56 ( .A(n93), .B(n92), .S0(SR0_9_), .Y(N80) );
  MXI2X1 U57 ( .A(n88), .B(n87), .S0(SR0_8_), .Y(n93) );
  OAI21XL U58 ( .A0(n21), .A1(SR0_9_), .B0(n139), .Y(SR0_8_) );
  INVX1 U59 ( .A(n138), .Y(n21) );
  INVX1 U60 ( .A(n3), .Y(n4) );
  INVX1 U61 ( .A(n3), .Y(SR0_10_) );
  OAI221XL U62 ( .A0(n134), .A1(SR0_9_), .B0(n129), .B1(n138), .C0(n123), .Y(
        n137) );
  AOI21X1 U63 ( .A0(n139), .A1(n132), .B0(n32), .Y(n123) );
  NAND2X1 U64 ( .A(n134), .B(n117), .Y(n133) );
  NAND2X1 U65 ( .A(n129), .B(n119), .Y(n130) );
  NAND2X1 U66 ( .A(n127), .B(n118), .Y(n138) );
  NAND2X1 U67 ( .A(n139), .B(n115), .Y(n132) );
  MXI2X1 U68 ( .A(n37), .B(n31), .S0(SR0_6_), .Y(n76) );
  MXI2X1 U69 ( .A(n31), .B(n30), .S0(SR0_6_), .Y(n85) );
  MXI2X1 U70 ( .A(n30), .B(n29), .S0(SR0_6_), .Y(n77) );
  MXI2X1 U71 ( .A(n29), .B(n28), .S0(SR0_6_), .Y(n86) );
  NAND2X1 U72 ( .A(SR0_6_), .B(n37), .Y(n84) );
  NOR2X1 U73 ( .A(n138), .B(n30), .Y(n129) );
  NOR2X1 U74 ( .A(n33), .B(n32), .Y(n136) );
  NOR2X1 U75 ( .A(SR0_9_), .B(n26), .Y(n134) );
  MXI2X1 U76 ( .A(n28), .B(n27), .S0(SR0_6_), .Y(n80) );
  MXI2X1 U77 ( .A(n27), .B(n26), .S0(SR0_6_), .Y(n90) );
  MXI2X1 U78 ( .A(n26), .B(n25), .S0(SR0_6_), .Y(n81) );
  MXI2X1 U79 ( .A(n25), .B(n24), .S0(SR0_6_), .Y(n91) );
  MXI2X1 U80 ( .A(n24), .B(n23), .S0(SR0_6_), .Y(n79) );
  MXI2X1 U81 ( .A(n23), .B(n36), .S0(SR0_6_), .Y(n89) );
  MXI2X1 U82 ( .A(n36), .B(n35), .S0(SR0_6_), .Y(n94) );
  MXI2X1 U83 ( .A(n35), .B(n34), .S0(SR0_6_), .Y(n100) );
  NOR2X1 U84 ( .A(n128), .B(n24), .Y(n122) );
  OR2X2 U85 ( .A(n132), .B(n23), .Y(n128) );
  OR2X2 U86 ( .A(n120), .B(N82), .Y(SR0_5_) );
  MXI2X1 U87 ( .A(n101), .B(n100), .S0(n22), .Y(n102) );
  MXI2X1 U88 ( .A(n33), .B(n32), .S0(SR0_6_), .Y(n101) );
  NOR2X1 U89 ( .A(n133), .B(n28), .Y(n127) );
  NOR2BX1 U90 ( .AN(N81), .B(n120), .Y(SR0_4_) );
  MXI2X1 U91 ( .A(n95), .B(n94), .S0(n22), .Y(n96) );
  MXI2X1 U92 ( .A(n34), .B(n33), .S0(SR0_6_), .Y(n95) );
  NOR2X1 U93 ( .A(n130), .B(n37), .Y(n120) );
  INVX1 U94 ( .A(n118), .Y(n29) );
  INVX1 U95 ( .A(n116), .Y(n25) );
  INVX1 U96 ( .A(n119), .Y(n31) );
  INVX1 U97 ( .A(n115), .Y(n36) );
  INVX1 U98 ( .A(n117), .Y(n27) );
  INVX1 U99 ( .A(n114), .Y(n35) );
  INVX1 U100 ( .A(n113), .Y(n34) );
  AOI22X1 U101 ( .A0(N18), .A1(SR0_10_), .B0(SR[12]), .B1(n3), .Y(n113) );
  INVX1 U102 ( .A(n107), .Y(n32) );
  AOI22X1 U103 ( .A0(N20), .A1(n4), .B0(SR[14]), .B1(n3), .Y(n107) );
  INVX1 U104 ( .A(SR[14]), .Y(n20) );
  INVX1 U105 ( .A(n106), .Y(n33) );
  AOI21X1 U106 ( .A0(n136), .A1(n124), .B0(n137), .Y(n125) );
  OAI21XL U107 ( .A0(n122), .A1(n128), .B0(n121), .Y(n124) );
  INVX1 U108 ( .A(SR[3]), .Y(n9) );
  INVXL U109 ( .A(SR[2]), .Y(n8) );
  INVXL U110 ( .A(SR[7]), .Y(n13) );
  INVXL U111 ( .A(SR[9]), .Y(n15) );
  INVXL U112 ( .A(SR[5]), .Y(n11) );
  INVX1 U113 ( .A(n112), .Y(n23) );
  AOI22XL U114 ( .A0(N15), .A1(n4), .B0(SR[9]), .B1(n3), .Y(n112) );
  INVX1 U115 ( .A(SR[12]), .Y(n18) );
  AOI22XL U116 ( .A0(N13), .A1(n4), .B0(SR[7]), .B1(n3), .Y(n116) );
  AOI22XL U117 ( .A0(N11), .A1(n4), .B0(SR[5]), .B1(n3), .Y(n117) );
  INVX1 U118 ( .A(n110), .Y(n26) );
  INVX1 U119 ( .A(n108), .Y(n30) );
  AOI22XL U120 ( .A0(N8), .A1(n4), .B0(SR[2]), .B1(n3), .Y(n108) );
  INVX1 U121 ( .A(n109), .Y(n28) );
  AOI22XL U122 ( .A0(N10), .A1(n4), .B0(SR[4]), .B1(n3), .Y(n109) );
  INVX1 U123 ( .A(n111), .Y(n24) );
  INVX1 U124 ( .A(n126), .Y(n37) );
  XOR2X1 U125 ( .A(n20), .B(sub_53_carry[14]), .Y(N20) );
  AND2X1 U126 ( .A(sub_53_carry[13]), .B(n19), .Y(sub_53_carry[14]) );
  XOR2X1 U127 ( .A(n19), .B(sub_53_carry[13]), .Y(N19) );
  AND2X1 U128 ( .A(sub_53_carry[12]), .B(n18), .Y(sub_53_carry[13]) );
  XOR2X1 U129 ( .A(n18), .B(sub_53_carry[12]), .Y(N18) );
  AND2X1 U130 ( .A(sub_53_carry[11]), .B(n17), .Y(sub_53_carry[12]) );
  XOR2X1 U131 ( .A(n17), .B(sub_53_carry[11]), .Y(N17) );
  AND2X1 U132 ( .A(sub_53_carry[10]), .B(n16), .Y(sub_53_carry[11]) );
  XOR2X1 U133 ( .A(n16), .B(sub_53_carry[10]), .Y(N16) );
  XOR2X1 U134 ( .A(n15), .B(sub_53_carry[9]), .Y(N15) );
  AND2X1 U135 ( .A(sub_53_carry[8]), .B(n14), .Y(sub_53_carry[9]) );
  XOR2X1 U136 ( .A(n14), .B(sub_53_carry[8]), .Y(N14) );
  XOR2X1 U137 ( .A(n13), .B(sub_53_carry[7]), .Y(N13) );
  AND2X1 U138 ( .A(sub_53_carry[6]), .B(n12), .Y(sub_53_carry[7]) );
  XOR2X1 U139 ( .A(n12), .B(sub_53_carry[6]), .Y(N12) );
  AND2X1 U140 ( .A(sub_53_carry[5]), .B(n11), .Y(sub_53_carry[6]) );
  XOR2X1 U141 ( .A(n11), .B(sub_53_carry[5]), .Y(N11) );
  AND2X1 U142 ( .A(sub_53_carry[4]), .B(n10), .Y(sub_53_carry[5]) );
  XOR2X1 U143 ( .A(n10), .B(sub_53_carry[4]), .Y(N10) );
  AND2X1 U144 ( .A(sub_53_carry[3]), .B(n9), .Y(sub_53_carry[4]) );
  XOR2X1 U145 ( .A(n9), .B(sub_53_carry[3]), .Y(N9) );
  AND2X1 U146 ( .A(sub_53_carry[2]), .B(n8), .Y(sub_53_carry[3]) );
  XOR2X1 U147 ( .A(n8), .B(sub_53_carry[2]), .Y(N8) );
  XOR2X1 U148 ( .A(n7), .B(n6), .Y(N7) );
endmodule


module DELAY_020_11_13_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(n9), .Q(delay0[6]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(delay0[5]), .QN(n12) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[0]) );
endmodule


module FLOATA_0 ( DQ, DQ0 );
  input [15:0] DQ;
  output [10:0] DQ0;
  wire   DQ_15_, DQ0_9_, DQ0_7_, DQ0_5_, DQ0_4_, DQ0_3_, DQ0_2_, DQ0_1_,
         DQ0_0_, N60, N61, N62, N63, N64, N65, n1, DQ0_6_, DQ0_8_, n4, n5, n6,
         n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n21, n22, n23, n24, n25, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67,
         n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81;
  assign DQ0[10] = DQ_15_;
  assign DQ_15_ = DQ[15];
  assign DQ0[9] = DQ0_9_;
  assign DQ0[7] = DQ0_7_;
  assign DQ0[5] = DQ0_5_;
  assign DQ0[4] = DQ0_4_;
  assign DQ0[3] = DQ0_3_;
  assign DQ0[2] = DQ0_2_;
  assign DQ0[1] = DQ0_1_;
  assign DQ0[0] = DQ0_0_;
  assign DQ0[6] = DQ0_6_;
  assign DQ0[8] = DQ0_8_;

  OAI221X1 U3 ( .A0(n9), .A1(n70), .B0(n71), .B1(n76), .C0(n8), .Y(DQ0_6_) );
  OAI2BB1X1 U4 ( .A0N(n80), .A1N(n1), .B0(n81), .Y(DQ0_8_) );
  INVX1 U5 ( .A(DQ0_9_), .Y(n1) );
  MXI2XL U6 ( .A(DQ[12]), .B(DQ[13]), .S0(DQ0_6_), .Y(n52) );
  NOR2XL U7 ( .A(DQ[11]), .B(n65), .Y(n81) );
  NOR2XL U8 ( .A(DQ[6]), .B(DQ0_9_), .Y(n77) );
  MXI2XL U9 ( .A(DQ[8]), .B(DQ[9]), .S0(DQ0_6_), .Y(n17) );
  MXI2XL U10 ( .A(DQ[9]), .B(DQ[10]), .S0(DQ0_6_), .Y(n46) );
  MXI2XL U11 ( .A(DQ[6]), .B(DQ[7]), .S0(DQ0_6_), .Y(n19) );
  MXI2XL U12 ( .A(DQ[7]), .B(DQ[8]), .S0(DQ0_6_), .Y(n48) );
  MXI2XL U13 ( .A(DQ[10]), .B(DQ[11]), .S0(DQ0_6_), .Y(n51) );
  MXI2XL U14 ( .A(DQ[11]), .B(DQ[12]), .S0(DQ0_6_), .Y(n57) );
  MXI2XL U15 ( .A(DQ[4]), .B(DQ[5]), .S0(DQ0_6_), .Y(n18) );
  MXI2XL U16 ( .A(DQ[5]), .B(DQ[6]), .S0(DQ0_6_), .Y(n47) );
  MXI2XL U17 ( .A(DQ[3]), .B(DQ[4]), .S0(DQ0_6_), .Y(n24) );
  NOR2XL U18 ( .A(DQ[9]), .B(n72), .Y(n73) );
  NOR2XL U19 ( .A(DQ[4]), .B(n76), .Y(n71) );
  NOR2BXL U20 ( .AN(n73), .B(DQ[8]), .Y(n63) );
  INVX1 U21 ( .A(DQ0_7_), .Y(n4) );
  NOR2BX1 U22 ( .AN(N61), .B(n64), .Y(DQ0_1_) );
  MXI2X1 U23 ( .A(n13), .B(n12), .S0(DQ0_9_), .Y(N61) );
  MXI2X1 U24 ( .A(n60), .B(n61), .S0(DQ0_8_), .Y(n12) );
  NAND2X1 U25 ( .A(DQ0_8_), .B(n62), .Y(n13) );
  NOR2BX1 U26 ( .AN(N63), .B(n64), .Y(DQ0_3_) );
  MXI2X1 U27 ( .A(n50), .B(n49), .S0(DQ0_9_), .Y(N63) );
  MX4X1 U28 ( .A(n48), .B(n57), .C(n47), .D(n46), .S0(DQ0_8_), .S1(n4), .Y(n49) );
  MXI2X1 U29 ( .A(n45), .B(n25), .S0(DQ0_8_), .Y(n50) );
  OAI21XL U30 ( .A0(n64), .A1(n6), .B0(n63), .Y(n66) );
  MXI2X1 U31 ( .A(n15), .B(n18), .S0(DQ0_7_), .Y(n54) );
  MXI2X1 U32 ( .A(n24), .B(n47), .S0(DQ0_7_), .Y(n60) );
  MXI2X1 U33 ( .A(n19), .B(n17), .S0(DQ0_7_), .Y(n55) );
  MXI2X1 U34 ( .A(n48), .B(n46), .S0(DQ0_7_), .Y(n61) );
  MXI2X1 U35 ( .A(n22), .B(n23), .S0(DQ0_7_), .Y(n62) );
  MXI2X1 U36 ( .A(n24), .B(n23), .S0(n4), .Y(n25) );
  MXI2X1 U37 ( .A(n15), .B(n14), .S0(n4), .Y(n16) );
  NOR2X1 U38 ( .A(n4), .B(n14), .Y(n56) );
  INVX1 U39 ( .A(n68), .Y(n7) );
  NOR2BX1 U40 ( .AN(N60), .B(n64), .Y(DQ0_0_) );
  MXI2X1 U41 ( .A(n11), .B(n10), .S0(DQ0_9_), .Y(N60) );
  NAND2X1 U42 ( .A(n56), .B(DQ0_8_), .Y(n11) );
  MXI2X1 U43 ( .A(n54), .B(n55), .S0(DQ0_8_), .Y(n10) );
  NOR2X1 U44 ( .A(n22), .B(n4), .Y(n45) );
  NOR2BX1 U45 ( .AN(N62), .B(n64), .Y(DQ0_2_) );
  MXI2X1 U46 ( .A(n21), .B(n20), .S0(DQ0_9_), .Y(N62) );
  MX4X1 U47 ( .A(n19), .B(n51), .C(n18), .D(n17), .S0(DQ0_8_), .S1(n4), .Y(n20) );
  NAND2X1 U48 ( .A(DQ0_8_), .B(n16), .Y(n21) );
  NAND2BX1 U49 ( .AN(DQ[12]), .B(n79), .Y(n65) );
  INVX1 U50 ( .A(n79), .Y(n9) );
  AOI21X1 U51 ( .A0(n73), .A1(n66), .B0(n65), .Y(n70) );
  INVX1 U52 ( .A(n74), .Y(n6) );
  NOR2BX1 U53 ( .AN(N64), .B(n64), .Y(DQ0_4_) );
  MX4X1 U54 ( .A(n56), .B(n55), .C(n54), .D(n53), .S0(DQ0_9_), .S1(DQ0_8_), 
        .Y(N64) );
  MXI2X1 U55 ( .A(n52), .B(n51), .S0(n4), .Y(n53) );
  NAND3X1 U56 ( .A(n8), .B(n79), .C(n78), .Y(DQ0_7_) );
  AOI22X1 U57 ( .A0(n77), .A1(n76), .B0(n5), .B1(n75), .Y(n78) );
  INVX1 U58 ( .A(n72), .Y(n5) );
  OAI21XL U59 ( .A0(n74), .A1(n7), .B0(n73), .Y(n75) );
  NOR2XL U60 ( .A(DQ[13]), .B(DQ[14]), .Y(n79) );
  NOR2XL U61 ( .A(DQ[1]), .B(n7), .Y(n74) );
  NAND2BX1 U62 ( .AN(DQ[10]), .B(n81), .Y(n72) );
  NAND2BX1 U63 ( .AN(DQ[5]), .B(n77), .Y(n76) );
  NAND2BX1 U64 ( .AN(DQ[3]), .B(n71), .Y(n80) );
  OR2X2 U65 ( .A(N65), .B(n64), .Y(DQ0_5_) );
  MX4X1 U66 ( .A(n62), .B(n61), .C(n60), .D(n59), .S0(DQ0_9_), .S1(DQ0_8_), 
        .Y(N65) );
  MXI2X1 U67 ( .A(n58), .B(n57), .S0(n4), .Y(n59) );
  MXI2XL U68 ( .A(DQ[13]), .B(DQ[14]), .S0(DQ0_6_), .Y(n58) );
  NAND2BX1 U69 ( .AN(DQ[7]), .B(n63), .Y(DQ0_9_) );
  INVX1 U70 ( .A(n69), .Y(n8) );
  OAI221XL U71 ( .A0(n77), .A1(DQ0_9_), .B0(n68), .B1(n80), .C0(n67), .Y(n69)
         );
  AOI21X1 U72 ( .A0(n81), .A1(n72), .B0(DQ[14]), .Y(n67) );
  MXI2XL U73 ( .A(DQ[0]), .B(DQ[1]), .S0(DQ0_6_), .Y(n14) );
  NAND2XL U74 ( .A(DQ0_6_), .B(DQ[0]), .Y(n22) );
  NOR2XL U75 ( .A(DQ[0]), .B(n6), .Y(n64) );
  MXI2XL U76 ( .A(DQ[1]), .B(DQ[2]), .S0(DQ0_6_), .Y(n23) );
  MXI2XL U77 ( .A(DQ[2]), .B(DQ[3]), .S0(DQ0_6_), .Y(n15) );
  NOR2XL U78 ( .A(DQ[2]), .B(n80), .Y(n68) );
endmodule


module DELAY_020_11_5_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(n9), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module XORA_5 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_5_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_5_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_5_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_5_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_5 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(N43), .Y(n3) );
  INVX1 U54 ( .A(N148), .Y(n5) );
  INVX1 U55 ( .A(n111), .Y(n42) );
  AOI22X1 U56 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U57 ( .A(N29), .Y(n4) );
  INVX1 U58 ( .A(N28), .Y(n6) );
  INVX1 U59 ( .A(n102), .Y(n43) );
  AOI22X1 U60 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U61 ( .A(n112), .Y(n32) );
  AOI22X1 U62 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U63 ( .A(n113), .Y(n31) );
  AOI22X1 U64 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U65 ( .A(n114), .Y(n30) );
  AOI22X1 U66 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U67 ( .A(n115), .Y(n29) );
  AOI22X1 U68 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U69 ( .A(n116), .Y(n28) );
  AOI22X1 U70 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U71 ( .A(n117), .Y(n27) );
  AOI22X1 U72 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U73 ( .A(n103), .Y(n39) );
  AOI22X1 U74 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U75 ( .A(n104), .Y(n38) );
  AOI22X1 U76 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U77 ( .A(n105), .Y(n37) );
  AOI22X1 U78 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U79 ( .A(n106), .Y(n36) );
  AOI22X1 U80 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U81 ( .A(n107), .Y(n35) );
  AOI22X1 U82 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U83 ( .A(n108), .Y(n34) );
  AOI22X1 U84 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U85 ( .A(n109), .Y(n33) );
  AOI22X1 U86 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U87 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U88 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_5_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_5_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_5_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_5_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_5 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1, n2;

  BUFX3 U2 ( .A(n1), .Y(n2) );
  BUFX3 U3 ( .A(TR), .Y(n1) );
  NOR2BX1 U4 ( .AN(nP[10]), .B(n1), .Y(nR[10]) );
  NOR2BX1 U5 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U6 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U7 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U8 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U9 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U10 ( .AN(nP[8]), .B(n2), .Y(nR[8]) );
  NOR2BX1 U11 ( .AN(nP[9]), .B(n2), .Y(nR[9]) );
  NOR2BX1 U12 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U13 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U14 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U15 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U16 ( .AN(nP[5]), .B(n2), .Y(nR[5]) );
  NOR2BX1 U17 ( .AN(nP[6]), .B(n2), .Y(nR[6]) );
  NOR2BX1 U18 ( .AN(nP[7]), .B(n2), .Y(nR[7]) );
  NOR2BX1 U19 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_5_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_5_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_5_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_5 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_5 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_5 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_5_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_4_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n10), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module XORA_4 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_4_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_4_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_4_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_4_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_4 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(n111), .Y(n42) );
  AOI22X1 U54 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U55 ( .A(n102), .Y(n43) );
  AOI22X1 U56 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U57 ( .A(N43), .Y(n3) );
  INVX1 U58 ( .A(N148), .Y(n5) );
  INVX1 U59 ( .A(N29), .Y(n4) );
  INVX1 U60 ( .A(N28), .Y(n6) );
  INVX1 U61 ( .A(n113), .Y(n31) );
  AOI22X1 U62 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U63 ( .A(n114), .Y(n30) );
  AOI22X1 U64 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U65 ( .A(n115), .Y(n29) );
  AOI22X1 U66 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U67 ( .A(n116), .Y(n28) );
  AOI22X1 U68 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U69 ( .A(n117), .Y(n27) );
  AOI22X1 U70 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U71 ( .A(n104), .Y(n38) );
  AOI22X1 U72 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U73 ( .A(n105), .Y(n37) );
  AOI22X1 U74 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U75 ( .A(n106), .Y(n36) );
  AOI22X1 U76 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U77 ( .A(n107), .Y(n35) );
  AOI22X1 U78 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U79 ( .A(n108), .Y(n34) );
  AOI22X1 U80 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U81 ( .A(n109), .Y(n33) );
  AOI22X1 U82 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U83 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U84 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U85 ( .A(n112), .Y(n32) );
  AOI22X1 U86 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U87 ( .A(n103), .Y(n39) );
  AOI22X1 U88 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_4_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_4_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_4_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_4_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_4 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  BUFX3 U2 ( .A(TR), .Y(n1) );
  NOR2BX1 U3 ( .AN(nP[10]), .B(n1), .Y(nR[10]) );
  NOR2BX1 U4 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U5 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U6 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U7 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U8 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U9 ( .AN(nP[8]), .B(n1), .Y(nR[8]) );
  NOR2BX1 U10 ( .AN(nP[9]), .B(n1), .Y(nR[9]) );
  NOR2BX1 U11 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U12 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U13 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U14 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U15 ( .AN(nP[5]), .B(n1), .Y(nR[5]) );
  NOR2BX1 U16 ( .AN(nP[6]), .B(n1), .Y(nR[6]) );
  NOR2BX1 U17 ( .AN(nP[7]), .B(n1), .Y(nR[7]) );
  NOR2BX1 U18 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_4_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_4_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_4_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_4 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_4 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_4 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_4_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_3_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[0]) );
endmodule


module XORA_3 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_3_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_3_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_3_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_3_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_3 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(N43), .Y(n3) );
  INVX1 U54 ( .A(N148), .Y(n5) );
  INVX1 U55 ( .A(n111), .Y(n42) );
  AOI22X1 U56 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U57 ( .A(N29), .Y(n4) );
  INVX1 U58 ( .A(N28), .Y(n6) );
  INVX1 U59 ( .A(n102), .Y(n43) );
  AOI22X1 U60 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U61 ( .A(n112), .Y(n32) );
  AOI22X1 U62 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U63 ( .A(n113), .Y(n31) );
  AOI22X1 U64 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U65 ( .A(n114), .Y(n30) );
  AOI22X1 U66 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U67 ( .A(n115), .Y(n29) );
  AOI22X1 U68 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U69 ( .A(n116), .Y(n28) );
  AOI22X1 U70 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U71 ( .A(n117), .Y(n27) );
  AOI22X1 U72 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U73 ( .A(n103), .Y(n39) );
  AOI22X1 U74 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U75 ( .A(n104), .Y(n38) );
  AOI22X1 U76 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U77 ( .A(n105), .Y(n37) );
  AOI22X1 U78 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U79 ( .A(n106), .Y(n36) );
  AOI22X1 U80 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U81 ( .A(n107), .Y(n35) );
  AOI22X1 U82 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U83 ( .A(n108), .Y(n34) );
  AOI22X1 U84 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U85 ( .A(n109), .Y(n33) );
  AOI22X1 U86 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U87 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U88 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_3_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_3_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_3_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_3_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_3 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  BUFX3 U2 ( .A(TR), .Y(n1) );
  NOR2BX1 U3 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U4 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U5 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U6 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U7 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U8 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U9 ( .AN(nP[8]), .B(n1), .Y(nR[8]) );
  NOR2BX1 U10 ( .AN(nP[9]), .B(n1), .Y(nR[9]) );
  NOR2BX1 U11 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U12 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U13 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U14 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U15 ( .AN(nP[5]), .B(n1), .Y(nR[5]) );
  NOR2BX1 U16 ( .AN(nP[6]), .B(n1), .Y(nR[6]) );
  NOR2BX1 U17 ( .AN(nP[7]), .B(n1), .Y(nR[7]) );
  NOR2BX1 U18 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_3_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_3_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_3_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_3 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_3 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_3 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_3_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_2_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si2, test_si1, test_so1, test_se
 );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so1;
  wire   n9, n10, n11, n4, n5, n7, n8, n12, n13, n14;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n10), .Q(y[5]), .QN(n14) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n13), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si1), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n13) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay1[5]), .QN(n12) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n8) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n7) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay4[5]), .QN(test_so1) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay5[5]), .QN(n5) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay6[5]), .QN(n4) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(test_si2), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module XORA_2 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_2_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_2_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_2_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_2_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_2 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(n111), .Y(n42) );
  AOI22X1 U54 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U55 ( .A(n102), .Y(n43) );
  AOI22X1 U56 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U57 ( .A(N43), .Y(n3) );
  INVX1 U58 ( .A(N148), .Y(n5) );
  INVX1 U59 ( .A(N29), .Y(n4) );
  INVX1 U60 ( .A(N28), .Y(n6) );
  INVX1 U61 ( .A(n113), .Y(n31) );
  AOI22X1 U62 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U63 ( .A(n114), .Y(n30) );
  AOI22X1 U64 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U65 ( .A(n115), .Y(n29) );
  AOI22X1 U66 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U67 ( .A(n116), .Y(n28) );
  AOI22X1 U68 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U69 ( .A(n117), .Y(n27) );
  AOI22X1 U70 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U71 ( .A(n104), .Y(n38) );
  AOI22X1 U72 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U73 ( .A(n105), .Y(n37) );
  AOI22X1 U74 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U75 ( .A(n106), .Y(n36) );
  AOI22X1 U76 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U77 ( .A(n107), .Y(n35) );
  AOI22X1 U78 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U79 ( .A(n108), .Y(n34) );
  AOI22X1 U80 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U81 ( .A(n109), .Y(n33) );
  AOI22X1 U82 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U83 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U84 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U85 ( .A(n112), .Y(n32) );
  AOI22X1 U86 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U87 ( .A(n103), .Y(n39) );
  AOI22X1 U88 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_2_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_2_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_2_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_2_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_2 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U3 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U4 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U5 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U6 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U7 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_2_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_2_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si2, 
        test_si1, test_so2, test_so1, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so2,
         test_so1;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so2 = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_2_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si2(test_si2), .test_si1(
        test_si1), .test_so1(test_so1), .test_se(test_se) );
  XORA_2 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_2 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_2 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_2_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_1_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[0]) );
endmodule


module XORA_1 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_1_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_1_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_1_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_1_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_1 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(N43), .Y(n3) );
  INVX1 U54 ( .A(N148), .Y(n5) );
  INVX1 U55 ( .A(n111), .Y(n42) );
  AOI22X1 U56 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U57 ( .A(N29), .Y(n4) );
  INVX1 U58 ( .A(N28), .Y(n6) );
  INVX1 U59 ( .A(n102), .Y(n43) );
  AOI22X1 U60 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U61 ( .A(n112), .Y(n32) );
  AOI22X1 U62 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U63 ( .A(n113), .Y(n31) );
  AOI22X1 U64 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U65 ( .A(n114), .Y(n30) );
  AOI22X1 U66 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U67 ( .A(n115), .Y(n29) );
  AOI22X1 U68 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U69 ( .A(n116), .Y(n28) );
  AOI22X1 U70 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U71 ( .A(n117), .Y(n27) );
  AOI22X1 U72 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U73 ( .A(n103), .Y(n39) );
  AOI22X1 U74 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U75 ( .A(n104), .Y(n38) );
  AOI22X1 U76 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U77 ( .A(n105), .Y(n37) );
  AOI22X1 U78 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U79 ( .A(n106), .Y(n36) );
  AOI22X1 U80 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U81 ( .A(n107), .Y(n35) );
  AOI22X1 U82 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U83 ( .A(n108), .Y(n34) );
  AOI22X1 U84 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U85 ( .A(n109), .Y(n33) );
  AOI22X1 U86 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U87 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U88 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_1_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_1_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_1_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_1_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_1 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;


  NOR2BX1 U2 ( .AN(nP[10]), .B(TR), .Y(nR[10]) );
  NOR2BX1 U3 ( .AN(nP[11]), .B(TR), .Y(nR[11]) );
  NOR2BX1 U4 ( .AN(nP[12]), .B(TR), .Y(nR[12]) );
  NOR2BX1 U5 ( .AN(nP[13]), .B(TR), .Y(nR[13]) );
  NOR2BX1 U6 ( .AN(nP[14]), .B(TR), .Y(nR[14]) );
  NOR2BX1 U7 ( .AN(nP[15]), .B(TR), .Y(nR[15]) );
  NOR2BX1 U8 ( .AN(nP[8]), .B(TR), .Y(nR[8]) );
  NOR2BX1 U9 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(TR), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(TR), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(TR), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[4]), .B(TR), .Y(nR[4]) );
  NOR2BX1 U14 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U17 ( .AN(nP[0]), .B(TR), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_1_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(reset), .Y(n4) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_1_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_1_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_1 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_1 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_1 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_1_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_0_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n3, n4, n5, n6, n7, n8, n12, n13;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n9) );
  INVX1 U4 ( .A(reset), .Y(n10) );
  INVX1 U5 ( .A(reset), .Y(n11) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(y[5]), .QN(n13) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n12), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(delay0[5]), .QN(n12) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay6[0]) );
endmodule


module XORA_0 ( DQn, DQ, Un );
  input [10:0] DQn;
  input [15:0] DQ;
  output Un;
  wire   DQn_10_, DQ_15_;
  assign DQn_10_ = DQn[10];
  assign DQ_15_ = DQ[15];

  XOR2XL U1 ( .A(DQn_10_), .B(DQ_15_), .Y(Un) );
endmodule


module UPB_0_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_0_DW01_add_2 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_0_DW01_add_5 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPB_0_DW01_add_4 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:9] carry;
  assign SUM[6] = A[6];
  assign SUM[5] = A[5];
  assign SUM[4] = A[4];
  assign SUM[3] = A[3];
  assign SUM[2] = A[2];
  assign SUM[1] = A[1];
  assign SUM[0] = A[0];

  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(n1), .CO(carry[9]), .S(SUM[8]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[7]), .B(A[7]), .Y(n1) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module UPB_0 ( UN, RATE, BN, DQ, BNP );
  input [1:0] RATE;
  input [15:0] BN;
  input [15:0] DQ;
  output [15:0] BNP;
  input UN;
  wire   N43, N44, N45, N46, N47, N48, N49, N50, N60, N61, N62, N63, N64, N65,
         N74, N99, N100, N101, N102, N103, N104, N105, N106, N107, N108, N109,
         N110, N111, N112, N113, N114, N148, N149, N150, N151, N152, N153,
         N154, N155, N156, N165, N166, N167, N168, N169, N170, N171, N181,
         N205, N206, N207, N208, N209, N210, N211, N212, N213, N214, N215,
         N216, N217, N218, N219, N220, N222, N98, N97, N96, N95, N94, N93, N92,
         N91, N90, N89, N88, N87, N86, N85, N84, N83, N204, N203, N202, N201,
         N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190,
         N189, N33, N32, N31, N30, N29, N28, sub_94_carry_2_, sub_94_carry_3_,
         sub_94_carry_4_, sub_94_carry_5_, sub_94_carry_6_, sub_94_carry_7_,
         sub_75_carry_2_, sub_75_carry_3_, sub_75_carry_4_, sub_75_carry_5_,
         sub_75_carry_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, BNP_15_, BNP_14_,
         BNP_13_, BNP_12_, BNP_11_, BNP_10_, BNP_9_, BNP_8_, BNP_7_, BNP_6_,
         BNP_5_, BNP_4_, BNP_3_, BNP_2_, BNP_1_, BNP_0_, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n90, n91,
         n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115,
         n116, n117, n118;
  wire   [8:2] sub_94_2_carry;
  wire   [7:2] sub_75_2_carry;
  assign N43 = BN[9];
  assign N148 = BN[8];
  assign N33 = BN[15];
  assign N32 = BN[14];
  assign N31 = BN[13];
  assign N30 = BN[12];
  assign N29 = BN[11];
  assign N28 = BN[10];
  assign BNP[15] = BNP_15_;
  assign BNP[14] = BNP_14_;
  assign BNP[13] = BNP_13_;
  assign BNP[12] = BNP_12_;
  assign BNP[11] = BNP_11_;
  assign BNP[10] = BNP_10_;
  assign BNP[9] = BNP_9_;
  assign BNP[8] = BNP_8_;
  assign BNP[7] = BNP_7_;
  assign BNP[6] = BNP_6_;
  assign BNP[5] = BNP_5_;
  assign BNP[4] = BNP_4_;
  assign BNP[3] = BNP_3_;
  assign BNP[2] = BNP_2_;
  assign BNP[1] = BNP_1_;
  assign BNP[0] = BNP_0_;

  NOR2X1 U3 ( .A(N43), .B(N28), .Y(sub_75_carry_2_) );
  NOR2X1 U4 ( .A(N148), .B(N43), .Y(sub_94_carry_2_) );
  NOR2X1 U5 ( .A(N43), .B(N28), .Y(sub_75_2_carry[2]) );
  NOR2X1 U6 ( .A(N148), .B(N43), .Y(sub_94_2_carry[2]) );
  NOR4XL U7 ( .A(DQ[9]), .B(DQ[8]), .C(DQ[7]), .D(DQ[6]), .Y(n95) );
  NOR4XL U8 ( .A(DQ[1]), .B(DQ[14]), .C(DQ[13]), .D(DQ[12]), .Y(n97) );
  NAND4X1 U9 ( .A(n98), .B(n97), .C(n96), .D(n95), .Y(n99) );
  INVX1 U10 ( .A(n118), .Y(n40) );
  INVX1 U11 ( .A(n110), .Y(n41) );
  OR2X2 U12 ( .A(RATE[1]), .B(RATE[0]), .Y(n1) );
  INVX1 U13 ( .A(n1), .Y(n93) );
  INVX1 U14 ( .A(n101), .Y(n26) );
  INVX1 U15 ( .A(n49), .Y(BNP_10_) );
  AOI22X1 U16 ( .A0(N215), .A1(n1), .B0(N109), .B1(n93), .Y(n49) );
  INVX1 U17 ( .A(n50), .Y(BNP_11_) );
  AOI22X1 U18 ( .A0(N216), .A1(n1), .B0(N110), .B1(n93), .Y(n50) );
  INVX1 U19 ( .A(n51), .Y(BNP_12_) );
  AOI22X1 U20 ( .A0(N217), .A1(n1), .B0(N111), .B1(n93), .Y(n51) );
  INVX1 U21 ( .A(n52), .Y(BNP_13_) );
  AOI22X1 U22 ( .A0(N218), .A1(n1), .B0(N112), .B1(n93), .Y(n52) );
  INVX1 U23 ( .A(n53), .Y(BNP_14_) );
  AOI22X1 U24 ( .A0(N219), .A1(n1), .B0(N113), .B1(n93), .Y(n53) );
  INVX1 U25 ( .A(n54), .Y(BNP_15_) );
  AOI22X1 U26 ( .A0(N220), .A1(n1), .B0(N114), .B1(n93), .Y(n54) );
  INVX1 U27 ( .A(n92), .Y(BNP_8_) );
  AOI22X1 U28 ( .A0(N213), .A1(n1), .B0(N107), .B1(n93), .Y(n92) );
  INVX1 U29 ( .A(n94), .Y(BNP_9_) );
  AOI22X1 U30 ( .A0(N214), .A1(n1), .B0(N108), .B1(n93), .Y(n94) );
  NAND2BX1 U31 ( .AN(sub_75_2_carry[7]), .B(n2), .Y(n118) );
  NAND2BX1 U32 ( .AN(sub_94_2_carry[8]), .B(n2), .Y(n110) );
  NAND2X1 U33 ( .A(n101), .B(n100), .Y(N222) );
  NAND2X1 U34 ( .A(n99), .B(n100), .Y(n101) );
  INVX1 U35 ( .A(n55), .Y(BNP_1_) );
  AOI22X1 U36 ( .A0(N206), .A1(n1), .B0(N100), .B1(n93), .Y(n55) );
  INVX1 U37 ( .A(n56), .Y(BNP_2_) );
  AOI22X1 U38 ( .A0(N207), .A1(n1), .B0(N101), .B1(n93), .Y(n56) );
  INVX1 U39 ( .A(n57), .Y(BNP_3_) );
  AOI22X1 U40 ( .A0(N208), .A1(n1), .B0(N102), .B1(n93), .Y(n57) );
  INVX1 U41 ( .A(n58), .Y(BNP_4_) );
  AOI22X1 U42 ( .A0(N209), .A1(n1), .B0(N103), .B1(n93), .Y(n58) );
  INVX1 U43 ( .A(n59), .Y(BNP_5_) );
  AOI22X1 U44 ( .A0(N210), .A1(n1), .B0(N104), .B1(n93), .Y(n59) );
  INVX1 U45 ( .A(n90), .Y(BNP_6_) );
  AOI22X1 U46 ( .A0(N211), .A1(n1), .B0(N105), .B1(n93), .Y(n90) );
  INVX1 U47 ( .A(n91), .Y(BNP_7_) );
  AOI22X1 U48 ( .A0(N212), .A1(n1), .B0(N106), .B1(n93), .Y(n91) );
  INVX1 U49 ( .A(N33), .Y(n2) );
  NAND2BX1 U50 ( .AN(UN), .B(n99), .Y(n100) );
  INVX1 U51 ( .A(n48), .Y(BNP_0_) );
  AOI22X1 U52 ( .A0(N205), .A1(n1), .B0(N99), .B1(n93), .Y(n48) );
  INVX1 U53 ( .A(n111), .Y(n42) );
  AOI22X1 U54 ( .A0(N43), .A1(n2), .B0(N43), .B1(N33), .Y(n111) );
  INVX1 U55 ( .A(n102), .Y(n43) );
  AOI22X1 U56 ( .A0(N148), .A1(n2), .B0(N148), .B1(N33), .Y(n102) );
  INVX1 U57 ( .A(N43), .Y(n3) );
  INVX1 U58 ( .A(N148), .Y(n5) );
  INVX1 U59 ( .A(N29), .Y(n4) );
  INVX1 U60 ( .A(N28), .Y(n6) );
  INVX1 U61 ( .A(n113), .Y(n31) );
  AOI22X1 U62 ( .A0(N61), .A1(n2), .B0(N45), .B1(N33), .Y(n113) );
  INVX1 U63 ( .A(n114), .Y(n30) );
  AOI22X1 U64 ( .A0(N62), .A1(n2), .B0(N46), .B1(N33), .Y(n114) );
  INVX1 U65 ( .A(n115), .Y(n29) );
  AOI22X1 U66 ( .A0(N63), .A1(n2), .B0(N47), .B1(N33), .Y(n115) );
  INVX1 U67 ( .A(n116), .Y(n28) );
  AOI22X1 U68 ( .A0(N64), .A1(n2), .B0(N48), .B1(N33), .Y(n116) );
  INVX1 U69 ( .A(n117), .Y(n27) );
  AOI22X1 U70 ( .A0(N65), .A1(n2), .B0(N49), .B1(N33), .Y(n117) );
  INVX1 U71 ( .A(n104), .Y(n38) );
  AOI22X1 U72 ( .A0(N166), .A1(n2), .B0(N150), .B1(N33), .Y(n104) );
  INVX1 U73 ( .A(n105), .Y(n37) );
  AOI22X1 U74 ( .A0(N167), .A1(n2), .B0(N151), .B1(N33), .Y(n105) );
  INVX1 U75 ( .A(n106), .Y(n36) );
  AOI22X1 U76 ( .A0(N168), .A1(n2), .B0(N152), .B1(N33), .Y(n106) );
  INVX1 U77 ( .A(n107), .Y(n35) );
  AOI22X1 U78 ( .A0(N169), .A1(n2), .B0(N153), .B1(N33), .Y(n107) );
  INVX1 U79 ( .A(n108), .Y(n34) );
  AOI22X1 U80 ( .A0(N170), .A1(n2), .B0(N154), .B1(N33), .Y(n108) );
  INVX1 U81 ( .A(n109), .Y(n33) );
  AOI22X1 U82 ( .A0(N171), .A1(n2), .B0(N155), .B1(N33), .Y(n109) );
  OAI2BB1X1 U83 ( .A0N(N50), .A1N(N33), .B0(n118), .Y(N74) );
  OAI2BB1X1 U84 ( .A0N(N156), .A1N(N33), .B0(n110), .Y(N181) );
  INVX1 U85 ( .A(n112), .Y(n32) );
  AOI22X1 U86 ( .A0(N60), .A1(n2), .B0(N44), .B1(N33), .Y(n112) );
  INVX1 U87 ( .A(n103), .Y(n39) );
  AOI22X1 U88 ( .A0(N165), .A1(n2), .B0(N149), .B1(N33), .Y(n103) );
  INVX1 U89 ( .A(N32), .Y(n8) );
  INVX1 U90 ( .A(N31), .Y(n7) );
  INVX1 U91 ( .A(N30), .Y(n9) );
  NOR3XL U92 ( .A(DQ[0]), .B(DQ[11]), .C(DQ[10]), .Y(n98) );
  NOR4XL U93 ( .A(DQ[5]), .B(DQ[4]), .C(DQ[3]), .D(DQ[2]), .Y(n96) );
  AND2X1 U94 ( .A(sub_75_carry_6_), .B(n2), .Y(N50) );
  XOR2X1 U95 ( .A(n2), .B(sub_75_carry_6_), .Y(N49) );
  AND2X1 U96 ( .A(sub_75_carry_5_), .B(n8), .Y(sub_75_carry_6_) );
  XOR2X1 U97 ( .A(n8), .B(sub_75_carry_5_), .Y(N48) );
  AND2X1 U98 ( .A(sub_75_carry_4_), .B(n7), .Y(sub_75_carry_5_) );
  XOR2X1 U99 ( .A(n7), .B(sub_75_carry_4_), .Y(N47) );
  AND2X1 U100 ( .A(sub_75_carry_3_), .B(n9), .Y(sub_75_carry_4_) );
  XOR2X1 U102 ( .A(n9), .B(sub_75_carry_3_), .Y(N46) );
  AND2X1 U103 ( .A(sub_75_carry_2_), .B(n4), .Y(sub_75_carry_3_) );
  XOR2X1 U104 ( .A(n4), .B(sub_75_carry_2_), .Y(N45) );
  XOR2X1 U105 ( .A(n6), .B(n3), .Y(N44) );
  AND2X1 U106 ( .A(sub_75_2_carry[6]), .B(n2), .Y(sub_75_2_carry[7]) );
  XOR2X1 U107 ( .A(n2), .B(sub_75_2_carry[6]), .Y(N65) );
  AND2X1 U108 ( .A(sub_75_2_carry[5]), .B(n8), .Y(sub_75_2_carry[6]) );
  XOR2X1 U109 ( .A(n8), .B(sub_75_2_carry[5]), .Y(N64) );
  AND2X1 U110 ( .A(sub_75_2_carry[4]), .B(n7), .Y(sub_75_2_carry[5]) );
  XOR2X1 U111 ( .A(n7), .B(sub_75_2_carry[4]), .Y(N63) );
  AND2X1 U112 ( .A(sub_75_2_carry[3]), .B(n9), .Y(sub_75_2_carry[4]) );
  XOR2X1 U113 ( .A(n9), .B(sub_75_2_carry[3]), .Y(N62) );
  AND2X1 U114 ( .A(sub_75_2_carry[2]), .B(n4), .Y(sub_75_2_carry[3]) );
  XOR2X1 U115 ( .A(n4), .B(sub_75_2_carry[2]), .Y(N61) );
  XOR2X1 U116 ( .A(n6), .B(n3), .Y(N60) );
  AND2X1 U117 ( .A(sub_94_carry_7_), .B(n2), .Y(N156) );
  XOR2X1 U118 ( .A(n2), .B(sub_94_carry_7_), .Y(N155) );
  AND2X1 U119 ( .A(sub_94_carry_6_), .B(n8), .Y(sub_94_carry_7_) );
  XOR2X1 U120 ( .A(n8), .B(sub_94_carry_6_), .Y(N154) );
  AND2X1 U121 ( .A(sub_94_carry_5_), .B(n7), .Y(sub_94_carry_6_) );
  XOR2X1 U122 ( .A(n7), .B(sub_94_carry_5_), .Y(N153) );
  AND2X1 U123 ( .A(sub_94_carry_4_), .B(n9), .Y(sub_94_carry_5_) );
  XOR2X1 U124 ( .A(n9), .B(sub_94_carry_4_), .Y(N152) );
  AND2X1 U125 ( .A(sub_94_carry_3_), .B(n4), .Y(sub_94_carry_4_) );
  XOR2X1 U126 ( .A(n4), .B(sub_94_carry_3_), .Y(N151) );
  AND2X1 U127 ( .A(sub_94_carry_2_), .B(n6), .Y(sub_94_carry_3_) );
  XOR2X1 U128 ( .A(n6), .B(sub_94_carry_2_), .Y(N150) );
  XOR2X1 U129 ( .A(n3), .B(n5), .Y(N149) );
  AND2X1 U130 ( .A(sub_94_2_carry[7]), .B(n2), .Y(sub_94_2_carry[8]) );
  XOR2X1 U131 ( .A(n2), .B(sub_94_2_carry[7]), .Y(N171) );
  AND2X1 U132 ( .A(sub_94_2_carry[6]), .B(n8), .Y(sub_94_2_carry[7]) );
  XOR2X1 U133 ( .A(n8), .B(sub_94_2_carry[6]), .Y(N170) );
  AND2X1 U134 ( .A(sub_94_2_carry[5]), .B(n7), .Y(sub_94_2_carry[6]) );
  XOR2X1 U135 ( .A(n7), .B(sub_94_2_carry[5]), .Y(N169) );
  AND2X1 U136 ( .A(sub_94_2_carry[4]), .B(n9), .Y(sub_94_2_carry[5]) );
  XOR2X1 U137 ( .A(n9), .B(sub_94_2_carry[4]), .Y(N168) );
  AND2X1 U138 ( .A(sub_94_2_carry[3]), .B(n4), .Y(sub_94_2_carry[4]) );
  XOR2X1 U139 ( .A(n4), .B(sub_94_2_carry[3]), .Y(N167) );
  AND2X1 U140 ( .A(sub_94_2_carry[2]), .B(n6), .Y(sub_94_2_carry[3]) );
  XOR2X1 U141 ( .A(n6), .B(sub_94_2_carry[2]), .Y(N166) );
  XOR2X1 U142 ( .A(n3), .B(n5), .Y(N165) );
  UPB_0_DW01_add_3 add_1_root_add_0_root_add_78 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n40, n40, n40, n40, n40, n40, n40, n40, 
        N74, n27, n28, n29, n30, n31, n32, n42}), .CI(1'b0), .SUM({N98, N97, 
        N96, N95, N94, N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83})
         );
  UPB_0_DW01_add_2 add_0_root_add_0_root_add_78 ( .A({N98, N97, N96, N95, N94, 
        N93, N92, N91, N90, N89, N88, N87, N86, N85, N84, N83}), .B({n26, n26, 
        n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .CI(1'b0), .SUM({N114, N113, N112, N111, N110, N109, N108, 
        N107, N106, N105, N104, N103, N102, N101, N100, N99}) );
  UPB_0_DW01_add_5 add_1_root_add_0_root_add_97 ( .A({N33, N32, N31, N30, N29, 
        N28, N43, N148, BN[7:0]}), .B({n41, n41, n41, n41, n41, n41, n41, N181, 
        n33, n34, n35, n36, n37, n38, n39, n43}), .CI(1'b0), .SUM({N204, N203, 
        N202, N201, N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, 
        N190, N189}) );
  UPB_0_DW01_add_4 add_0_root_add_0_root_add_97 ( .A({N204, N203, N202, N201, 
        N200, N199, N198, N197, N196, N195, N194, N193, N192, N191, N190, N189}), .B({n26, n26, n26, n26, n26, n26, n26, n26, N222, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0}), .CI(1'b0), .SUM({N220, N219, N218, N217, N216, 
        N215, N214, N213, N212, N211, N210, N209, N208, N207, N206, N205}) );
endmodule


module TRIGB_WIDTH16_0 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  BUFX3 U2 ( .A(TR), .Y(n1) );
  NOR2BX1 U3 ( .AN(nP[10]), .B(n1), .Y(nR[10]) );
  NOR2BX1 U4 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U5 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U6 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U7 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U8 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U9 ( .AN(nP[8]), .B(n1), .Y(nR[8]) );
  NOR2BX1 U10 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  NOR2BX1 U11 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U12 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U13 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U14 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U15 ( .AN(nP[5]), .B(TR), .Y(nR[5]) );
  NOR2BX1 U16 ( .AN(nP[6]), .B(TR), .Y(nR[6]) );
  NOR2BX1 U17 ( .AN(nP[7]), .B(TR), .Y(nR[7]) );
  NOR2BX1 U18 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_0_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[15]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[9]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module DELAYPREDIC_0_test_1 ( DQN, DQ, RATE, TR, reset, clk, DQN1, B, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [10:0] DQN;
  input [15:0] DQ;
  input [1:0] RATE;
  output [10:0] DQN1;
  output [15:0] B;
  input TR, reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   n2, U;
  wire   [15:0] BNP;
  wire   [15:0] BNR;
  assign test_so = n2;

  BUFX3 U1 ( .A(n2), .Y(B[15]) );
  DELAY_020_11_0_test_1 delay1 ( .x(DQN), .reset(reset), .y(DQN1), .clk(clk), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  XORA_0 xora1 ( .DQn(DQN1), .DQ(DQ), .Un(U) );
  UPB_0 upb1 ( .UN(U), .RATE(RATE), .BN(B), .DQ(DQ), .BNP(BNP) );
  TRIGB_WIDTH16_0 trigb1 ( .TR(TR), .nP(BNP), .nR(BNR) );
  DELAY_RESET_STATE0_WIDTH16_0_test_1 delay2 ( .x(BNR), .reset(reset), .y({n2, 
        B[14:0]}), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(
        DQN1[10]), .test_se(test_se) );
endmodule


module DELAY_020_11_12_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_se );
  input [10:0] x;
  output [10:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n9, n10, n11, n2, n3, n4, n5, n6, n7, n8, n12;
  wire   [10:0] delay0;
  wire   [10:0] delay1;
  wire   [10:0] delay2;
  wire   [10:0] delay3;
  wire   [10:0] delay4;
  wire   [10:0] delay5;
  wire   [10:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n10) );
  INVX1 U4 ( .A(reset), .Y(n11) );
  INVX1 U5 ( .A(reset), .Y(n9) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[6]) );
  SDFFSXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n9), .Q(y[5]), .QN(n12) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[10]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(y[0]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n8), .SE(test_se), .CK(clk), .RN(n10), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(x[10]), .SE(test_se), .CK(clk), .RN(
        n11), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n10), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n9), .Q(delay2[10]) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n11), .Q(delay0[5]), .QN(n8) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay1[5]), .QN(n7) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay2[5]), .QN(n6) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay3[5]), .QN(n5) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n10), .Q(delay4[5]), .QN(n4) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n9), .Q(delay5[5]), .QN(n3) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n11), .Q(delay6[5]), .QN(n2) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n10), .Q(delay0[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n11), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n11), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n2), .SE(test_se), .CK(clk), 
        .RN(n9), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .RN(n9), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .RN(n10), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .RN(n11), .Q(delay6[0]) );
endmodule


module UPA2_0_DW01_add_3 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR3X4 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPA2_0 ( PK0, PK1, PK2, A1, A2, SIGPK, A2T );
  input [15:0] A1;
  input [15:0] A2;
  output [15:0] A2T;
  input PK0, PK1, PK2, SIGPK;
  wire   PKS2, N31, N36, N37, N38, N39, N40, N41, N42, N43, N44, N45, N48, N49,
         N50, N51, N52, N53, N54, N56, N57, N67, N68, N69, N70, N71, N72, N73,
         N74, ULA2_9_, N92, N93, N94, N95, N96, N97, N98, N99, N100, N101,
         UA2_9_, UA2_8_, UA2_7_, UA2_6_, UA2_5_, UA2_4_, UA2_3_, UA2_2_,
         UA2_1_, UA2_15_, UA2_10_, UA2_0_, N84, N83, N82, N81, N80, N79, N78,
         N77, add_96_B_14_, add_96_B_15_, add_96_B_16_, sub_112_2_carry_2_,
         sub_112_2_carry_3_, sub_112_2_carry_4_, sub_112_2_carry_5_,
         sub_112_2_carry_6_, sub_112_2_carry_7_, sub_112_2_carry_8_,
         add_117_carry_1_, add_117_carry_2_, add_117_carry_3_,
         add_117_carry_4_, add_117_carry_5_, add_117_carry_6_,
         add_117_carry_7_, add_117_carry_8_, add_117_carry_9_,
         add_117_carry_10_, add_117_B_0_, add_117_B_1_, add_117_B_2_,
         add_117_B_3_, add_117_B_4_, add_117_B_5_, add_117_B_6_, add_117_B_7_,
         add_117_B_8_, add_117_B_10_, add_117_A_0_, add_117_A_1_, add_117_A_2_,
         add_117_A_3_, add_117_A_4_, add_117_A_5_, add_117_A_6_, add_117_A_7_,
         add_117_A_8_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, add_96_carry_16_;
  wire   [16:3] FA1;
  wire   [14:9] UGA2;
  wire   [9:2] sub_112_carry;
  wire   [15:7] sub_90_carry;
  assign N92 = A2[7];
  assign N84 = A2[15];
  assign N83 = A2[14];
  assign N82 = A2[13];
  assign N81 = A2[12];
  assign N80 = A2[11];
  assign N79 = A2[10];
  assign N78 = A2[9];
  assign N77 = A2[8];

  ADDFX2 U3 ( .A(add_117_A_8_), .B(add_117_B_8_), .CI(add_117_carry_8_), .CO(
        add_117_carry_9_), .S(UA2_8_) );
  XNOR2X1 U4 ( .A(FA1[16]), .B(sub_90_carry[15]), .Y(N44) );
  NOR2X1 U5 ( .A(FA1[16]), .B(sub_90_carry[15]), .Y(N45) );
  XOR3X2 U6 ( .A(UGA2[14]), .B(n34), .C(n15), .Y(UA2_15_) );
  OAI21XL U7 ( .A0(n33), .A1(UGA2[14]), .B0(N48), .Y(n1) );
  INVX1 U8 ( .A(n1), .Y(add_117_A_0_) );
  OAI21XL U9 ( .A0(n11), .A1(n13), .B0(N49), .Y(n2) );
  INVX1 U10 ( .A(n2), .Y(add_117_A_1_) );
  OAI21XL U11 ( .A0(n11), .A1(n13), .B0(N50), .Y(n3) );
  INVX1 U12 ( .A(n3), .Y(add_117_A_2_) );
  OAI21XL U13 ( .A0(n11), .A1(n13), .B0(N51), .Y(n4) );
  INVX1 U14 ( .A(n4), .Y(add_117_A_3_) );
  OAI21XL U15 ( .A0(n11), .A1(n13), .B0(N52), .Y(n5) );
  INVX1 U16 ( .A(n5), .Y(add_117_A_4_) );
  OAI21XL U17 ( .A0(n11), .A1(n13), .B0(N53), .Y(n6) );
  INVX1 U18 ( .A(n6), .Y(add_117_A_5_) );
  AOI21X1 U19 ( .A0(n47), .A1(n49), .B0(n48), .Y(n7) );
  INVX1 U20 ( .A(n7), .Y(n42) );
  OAI21XL U21 ( .A0(n11), .A1(n13), .B0(N54), .Y(n8) );
  INVX1 U22 ( .A(n8), .Y(add_117_A_6_) );
  OR2X2 U23 ( .A(FA1[3]), .B(N31), .Y(n12) );
  NOR2X1 U24 ( .A(N92), .B(N77), .Y(sub_112_2_carry_2_) );
  AOI2BB1X1 U25 ( .A0N(n11), .A1N(n13), .B0(add_96_B_14_), .Y(add_117_A_7_) );
  NOR4X1 U26 ( .A(FA1[6]), .B(FA1[5]), .C(FA1[4]), .D(n12), .Y(sub_90_carry[7]) );
  NOR2X1 U27 ( .A(N92), .B(N77), .Y(sub_112_carry[2]) );
  OAI21XL U28 ( .A0(n11), .A1(n13), .B0(N56), .Y(n9) );
  INVX1 U29 ( .A(n9), .Y(add_117_A_8_) );
  BUFX3 U30 ( .A(n33), .Y(n11) );
  ADDFX2 U31 ( .A(add_117_A_4_), .B(add_117_B_4_), .CI(add_117_carry_4_), .CO(
        add_117_carry_5_), .S(UA2_4_) );
  ADDFX2 U32 ( .A(UGA2[9]), .B(ULA2_9_), .CI(add_117_carry_9_), .CO(
        add_117_carry_10_), .S(UA2_9_) );
  XOR2X4 U33 ( .A(PK0), .B(PK1), .Y(n10) );
  AOI222X4 U34 ( .A0(add_117_carry_10_), .A1(add_117_B_10_), .B0(n13), .B1(
        add_117_carry_10_), .C0(n13), .C1(add_117_B_10_), .Y(n15) );
  NOR2XL U35 ( .A(SIGPK), .B(N57), .Y(n33) );
  ADDFX2 U36 ( .A(add_117_A_2_), .B(add_117_B_2_), .CI(add_117_carry_2_), .CO(
        add_117_carry_3_), .S(UA2_2_) );
  ADDFX2 U37 ( .A(add_117_A_5_), .B(add_117_B_5_), .CI(add_117_carry_5_), .CO(
        add_117_carry_6_), .S(UA2_5_) );
  ADDFX2 U38 ( .A(add_117_A_3_), .B(add_117_B_3_), .CI(add_117_carry_3_), .CO(
        add_117_carry_4_), .S(UA2_3_) );
  ADDFX1 U39 ( .A(add_117_A_1_), .B(add_117_B_1_), .CI(add_117_carry_1_), .CO(
        add_117_carry_2_), .S(UA2_1_) );
  BUFX8 U40 ( .A(UGA2[14]), .Y(n13) );
  ADDFHX1 U41 ( .A(PKS2), .B(add_96_B_15_), .CI(add_96_B_14_), .CO(
        add_96_carry_16_), .S(N56) );
  AND2X2 U42 ( .A(add_117_A_0_), .B(add_117_B_0_), .Y(add_117_carry_1_) );
  ADDFHX1 U43 ( .A(add_117_A_7_), .B(add_117_B_7_), .CI(add_117_carry_7_), 
        .CO(add_117_carry_8_), .S(UA2_7_) );
  NOR2BX1 U44 ( .AN(N57), .B(SIGPK), .Y(UGA2[14]) );
  INVX1 U45 ( .A(FA1[7]), .Y(n26) );
  INVX1 U46 ( .A(FA1[8]), .Y(n25) );
  INVX1 U47 ( .A(FA1[9]), .Y(n24) );
  INVX1 U48 ( .A(FA1[10]), .Y(n31) );
  INVX1 U49 ( .A(FA1[11]), .Y(n30) );
  INVX1 U50 ( .A(FA1[14]), .Y(n27) );
  XOR3X2 U51 ( .A(PKS2), .B(add_96_B_16_), .C(add_96_carry_16_), .Y(N57) );
  ADDFX2 U52 ( .A(add_117_A_6_), .B(add_117_B_6_), .CI(add_117_carry_6_), .CO(
        add_117_carry_7_), .S(UA2_6_) );
  INVX1 U53 ( .A(FA1[12]), .Y(n29) );
  INVX1 U54 ( .A(FA1[13]), .Y(n28) );
  OR2X2 U55 ( .A(sub_112_carry[9]), .B(N84), .Y(n34) );
  INVX1 U56 ( .A(N84), .Y(n23) );
  OAI21XL U57 ( .A0(A1[14]), .A1(A1[13]), .B0(n46), .Y(n37) );
  INVX1 U58 ( .A(N92), .Y(n32) );
  INVX1 U59 ( .A(N77), .Y(n16) );
  INVX1 U60 ( .A(N78), .Y(n17) );
  INVX1 U61 ( .A(N79), .Y(n18) );
  INVX1 U62 ( .A(N80), .Y(n19) );
  INVX1 U63 ( .A(N81), .Y(n20) );
  INVX1 U64 ( .A(N82), .Y(n21) );
  INVX1 U65 ( .A(N83), .Y(n22) );
  XOR2X1 U66 ( .A(add_117_B_0_), .B(add_117_A_0_), .Y(UA2_0_) );
  AND2X1 U67 ( .A(sub_112_2_carry_8_), .B(n23), .Y(N101) );
  XOR2X1 U68 ( .A(n23), .B(sub_112_2_carry_8_), .Y(N100) );
  AND2X1 U69 ( .A(sub_112_2_carry_7_), .B(n22), .Y(sub_112_2_carry_8_) );
  XOR2X1 U70 ( .A(n22), .B(sub_112_2_carry_7_), .Y(N99) );
  AND2X1 U71 ( .A(sub_112_2_carry_6_), .B(n21), .Y(sub_112_2_carry_7_) );
  XOR2X1 U72 ( .A(n21), .B(sub_112_2_carry_6_), .Y(N98) );
  AND2X1 U73 ( .A(sub_112_2_carry_5_), .B(n20), .Y(sub_112_2_carry_6_) );
  XOR2X1 U74 ( .A(n20), .B(sub_112_2_carry_5_), .Y(N97) );
  AND2X1 U75 ( .A(sub_112_2_carry_4_), .B(n19), .Y(sub_112_2_carry_5_) );
  XOR2X1 U76 ( .A(n19), .B(sub_112_2_carry_4_), .Y(N96) );
  AND2X1 U77 ( .A(sub_112_2_carry_3_), .B(n18), .Y(sub_112_2_carry_4_) );
  XOR2X1 U78 ( .A(n18), .B(sub_112_2_carry_3_), .Y(N95) );
  AND2X1 U79 ( .A(sub_112_2_carry_2_), .B(n17), .Y(sub_112_2_carry_3_) );
  XOR2X1 U80 ( .A(n17), .B(sub_112_2_carry_2_), .Y(N94) );
  XOR2X1 U81 ( .A(n16), .B(n32), .Y(N93) );
  AND2X1 U82 ( .A(sub_112_carry[8]), .B(n23), .Y(sub_112_carry[9]) );
  XOR2X1 U83 ( .A(n23), .B(sub_112_carry[8]), .Y(N74) );
  AND2X1 U84 ( .A(sub_112_carry[7]), .B(n22), .Y(sub_112_carry[8]) );
  XOR2X1 U85 ( .A(n22), .B(sub_112_carry[7]), .Y(N73) );
  AND2X1 U86 ( .A(sub_112_carry[6]), .B(n21), .Y(sub_112_carry[7]) );
  XOR2X1 U87 ( .A(n21), .B(sub_112_carry[6]), .Y(N72) );
  AND2X1 U88 ( .A(sub_112_carry[5]), .B(n20), .Y(sub_112_carry[6]) );
  XOR2X1 U89 ( .A(n20), .B(sub_112_carry[5]), .Y(N71) );
  AND2X1 U90 ( .A(sub_112_carry[4]), .B(n19), .Y(sub_112_carry[5]) );
  XOR2X1 U91 ( .A(n19), .B(sub_112_carry[4]), .Y(N70) );
  AND2X1 U92 ( .A(sub_112_carry[3]), .B(n18), .Y(sub_112_carry[4]) );
  XOR2X1 U93 ( .A(n18), .B(sub_112_carry[3]), .Y(N69) );
  AND2X1 U94 ( .A(sub_112_carry[2]), .B(n17), .Y(sub_112_carry[3]) );
  XOR2X1 U95 ( .A(n17), .B(sub_112_carry[2]), .Y(N68) );
  XOR2X1 U96 ( .A(n16), .B(n32), .Y(N67) );
  AND2X1 U97 ( .A(sub_90_carry[14]), .B(n27), .Y(sub_90_carry[15]) );
  XOR2X1 U98 ( .A(n27), .B(sub_90_carry[14]), .Y(N43) );
  AND2X1 U99 ( .A(sub_90_carry[13]), .B(n28), .Y(sub_90_carry[14]) );
  XOR2X1 U100 ( .A(n28), .B(sub_90_carry[13]), .Y(N42) );
  AND2X1 U101 ( .A(sub_90_carry[12]), .B(n29), .Y(sub_90_carry[13]) );
  XOR2X1 U102 ( .A(n29), .B(sub_90_carry[12]), .Y(N41) );
  AND2X1 U103 ( .A(sub_90_carry[11]), .B(n30), .Y(sub_90_carry[12]) );
  XOR2X1 U104 ( .A(n30), .B(sub_90_carry[11]), .Y(N40) );
  AND2X1 U105 ( .A(sub_90_carry[10]), .B(n31), .Y(sub_90_carry[11]) );
  XOR2X1 U106 ( .A(n31), .B(sub_90_carry[10]), .Y(N39) );
  AND2X1 U107 ( .A(sub_90_carry[9]), .B(n24), .Y(sub_90_carry[10]) );
  XOR2X1 U108 ( .A(n24), .B(sub_90_carry[9]), .Y(N38) );
  AND2X1 U109 ( .A(sub_90_carry[8]), .B(n25), .Y(sub_90_carry[9]) );
  XOR2X1 U110 ( .A(n25), .B(sub_90_carry[8]), .Y(N37) );
  AND2X1 U111 ( .A(sub_90_carry[7]), .B(n26), .Y(sub_90_carry[8]) );
  XOR2X1 U112 ( .A(n26), .B(sub_90_carry[7]), .Y(N36) );
  XOR2X1 U113 ( .A(add_117_carry_10_), .B(add_117_B_10_), .Y(n14) );
  XOR2X1 U114 ( .A(n13), .B(n14), .Y(UA2_10_) );
  MX2X1 U115 ( .A(N38), .B(FA1[9]), .S0(n10), .Y(N50) );
  MX2X1 U116 ( .A(N37), .B(FA1[8]), .S0(n10), .Y(N49) );
  MX2X1 U117 ( .A(N36), .B(FA1[7]), .S0(n10), .Y(N48) );
  MX2X1 U118 ( .A(N45), .B(FA1[16]), .S0(n10), .Y(add_96_B_16_) );
  MX2X1 U119 ( .A(N44), .B(FA1[16]), .S0(n10), .Y(add_96_B_15_) );
  MX2X1 U120 ( .A(N43), .B(FA1[14]), .S0(n10), .Y(add_96_B_14_) );
  MX2X1 U121 ( .A(N42), .B(FA1[13]), .S0(n10), .Y(N54) );
  MX2X1 U122 ( .A(N41), .B(FA1[12]), .S0(n10), .Y(N53) );
  MX2X1 U123 ( .A(N40), .B(FA1[11]), .S0(n10), .Y(N52) );
  MX2X1 U124 ( .A(N39), .B(FA1[10]), .S0(n10), .Y(N51) );
  MX2X1 U125 ( .A(N74), .B(N100), .S0(N84), .Y(add_117_B_8_) );
  MX2X1 U126 ( .A(N73), .B(N99), .S0(N84), .Y(add_117_B_7_) );
  MX2X1 U127 ( .A(N72), .B(N98), .S0(N84), .Y(add_117_B_6_) );
  MX2X1 U128 ( .A(N71), .B(N97), .S0(N84), .Y(add_117_B_5_) );
  MX2X1 U129 ( .A(N70), .B(N96), .S0(N84), .Y(add_117_B_4_) );
  MX2X1 U130 ( .A(N69), .B(N95), .S0(N84), .Y(add_117_B_3_) );
  MX2X1 U131 ( .A(N68), .B(N94), .S0(N84), .Y(add_117_B_2_) );
  MX2X1 U132 ( .A(N67), .B(N93), .S0(N84), .Y(add_117_B_1_) );
  INVX1 U133 ( .A(n34), .Y(add_117_B_10_) );
  MX2X1 U134 ( .A(N92), .B(N92), .S0(N84), .Y(add_117_B_0_) );
  OAI2BB1X1 U135 ( .A0N(N101), .A1N(N84), .B0(n34), .Y(ULA2_9_) );
  AND2X1 U136 ( .A(N57), .B(n13), .Y(UGA2[9]) );
  XOR2X1 U137 ( .A(PK2), .B(PK0), .Y(PKS2) );
  OAI21XL U138 ( .A0(n35), .A1(n36), .B0(n37), .Y(FA1[9]) );
  OAI21XL U139 ( .A0(n35), .A1(n38), .B0(n37), .Y(FA1[8]) );
  OAI21XL U140 ( .A0(n35), .A1(n39), .B0(n37), .Y(FA1[7]) );
  OAI21XL U141 ( .A0(n35), .A1(n40), .B0(n37), .Y(FA1[6]) );
  OAI2BB1X1 U142 ( .A0N(n41), .A1N(A1[3]), .B0(n37), .Y(FA1[5]) );
  OAI2BB1X1 U143 ( .A0N(n41), .A1N(A1[2]), .B0(n37), .Y(FA1[4]) );
  OAI2BB1X1 U144 ( .A0N(n41), .A1N(A1[1]), .B0(n37), .Y(FA1[3]) );
  NAND3BX1 U145 ( .AN(A1[0]), .B(n41), .C(n37), .Y(N31) );
  NAND2X1 U146 ( .A(n41), .B(n42), .Y(FA1[16]) );
  OAI21XL U147 ( .A0(n35), .A1(n43), .B0(n37), .Y(FA1[14]) );
  OAI2BB1X1 U148 ( .A0N(n41), .A1N(A1[11]), .B0(n37), .Y(FA1[13]) );
  OAI2BB1X1 U149 ( .A0N(n41), .A1N(A1[10]), .B0(n37), .Y(FA1[12]) );
  OAI21XL U150 ( .A0(n35), .A1(n44), .B0(n37), .Y(FA1[11]) );
  OAI21XL U151 ( .A0(n35), .A1(n45), .B0(n37), .Y(FA1[10]) );
  INVX1 U152 ( .A(A1[15]), .Y(n46) );
  INVX1 U153 ( .A(n41), .Y(n35) );
  NAND2X1 U154 ( .A(A1[15]), .B(n42), .Y(n41) );
  NOR3X1 U155 ( .A(n50), .B(A1[11]), .C(A1[10]), .Y(n49) );
  NAND3X1 U156 ( .A(n45), .B(n44), .C(n43), .Y(n50) );
  INVX1 U157 ( .A(A1[12]), .Y(n43) );
  INVX1 U158 ( .A(A1[9]), .Y(n44) );
  INVX1 U159 ( .A(A1[8]), .Y(n45) );
  NAND3X1 U160 ( .A(A1[14]), .B(A1[13]), .C(A1[15]), .Y(n48) );
  NOR4X1 U161 ( .A(A1[1]), .B(n51), .C(A1[3]), .D(A1[2]), .Y(n47) );
  NAND4X1 U162 ( .A(n40), .B(n39), .C(n38), .D(n36), .Y(n51) );
  INVX1 U163 ( .A(A1[7]), .Y(n36) );
  INVX1 U164 ( .A(A1[6]), .Y(n38) );
  INVX1 U165 ( .A(A1[5]), .Y(n39) );
  INVX1 U166 ( .A(A1[4]), .Y(n40) );
  UPA2_0_DW01_add_3 add_120 ( .A({N84, N83, N82, N81, N80, N79, N78, N77, N92, 
        A2[6:0]}), .B({UA2_15_, UA2_15_, UA2_15_, UA2_15_, UA2_15_, UA2_10_, 
        UA2_9_, UA2_8_, UA2_7_, UA2_6_, UA2_5_, UA2_4_, UA2_3_, UA2_2_, UA2_1_, 
        UA2_0_}), .CI(1'b0), .SUM(A2T) );
endmodule


module LIMC_0 ( A2T, A2P );
  input [15:0] A2T;
  output [15:0] A2P;
  wire   A2T_15_, A2P_13_, A2P_12_, A2P_11_, A2P_10_, A2P_9_, A2P_8_, A2P_7_,
         A2P_6_, A2P_5_, A2P_4_, A2P_3_, A2P_2_, A2P_1_, A2P_0_, A2P_14_, n2,
         n3, n4, n5;
  assign A2T_15_ = A2T[15];
  assign A2P[13] = A2P_13_;
  assign A2P[12] = A2P_12_;
  assign A2P[11] = A2P_11_;
  assign A2P[10] = A2P_10_;
  assign A2P[9] = A2P_9_;
  assign A2P[8] = A2P_8_;
  assign A2P[7] = A2P_7_;
  assign A2P[6] = A2P_6_;
  assign A2P[5] = A2P_5_;
  assign A2P[4] = A2P_4_;
  assign A2P[3] = A2P_3_;
  assign A2P[2] = A2P_2_;
  assign A2P[1] = A2P_1_;
  assign A2P[0] = A2P_0_;
  assign A2P[14] = A2P_14_;
  assign A2P[15] = A2P_14_;

  AND2X4 U3 ( .A(A2T[0]), .B(n2), .Y(A2P_0_) );
  INVX2 U4 ( .A(n3), .Y(n4) );
  AND2X2 U5 ( .A(A2T[1]), .B(n2), .Y(A2P_1_) );
  AND2X2 U6 ( .A(A2T[2]), .B(n2), .Y(A2P_2_) );
  NAND2BXL U7 ( .AN(A2T[12]), .B(n2), .Y(A2P_12_) );
  CLKBUFX3 U8 ( .A(A2T_15_), .Y(A2P_14_) );
  MXI2X4 U9 ( .A(n4), .B(n5), .S0(A2T_15_), .Y(n2) );
  AND2X1 U10 ( .A(A2T[9]), .B(n2), .Y(A2P_9_) );
  AND2X1 U11 ( .A(A2T[8]), .B(n2), .Y(A2P_8_) );
  AND2X1 U12 ( .A(A2T[7]), .B(n2), .Y(A2P_7_) );
  AND2X1 U13 ( .A(A2T[6]), .B(n2), .Y(A2P_6_) );
  AND2X1 U14 ( .A(A2T[5]), .B(n2), .Y(A2P_5_) );
  AND2X1 U15 ( .A(A2T[4]), .B(n2), .Y(A2P_4_) );
  AND2X1 U16 ( .A(A2T[3]), .B(n2), .Y(A2P_3_) );
  OAI2BB2X1 U17 ( .B0(A2T_15_), .B1(n3), .A0N(A2T[13]), .A1N(n2), .Y(A2P_13_)
         );
  AND2X1 U18 ( .A(A2T[11]), .B(n2), .Y(A2P_11_) );
  AND2X1 U19 ( .A(A2T[10]), .B(n2), .Y(A2P_10_) );
  AOI22X1 U20 ( .A0(A2T[14]), .A1(A2T[12]), .B0(A2T[14]), .B1(A2T[13]), .Y(n5)
         );
  AOI21X1 U21 ( .A0(A2T[12]), .A1(A2T[13]), .B0(A2T[14]), .Y(n3) );
endmodule


module TRIGB_WIDTH16_13 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1, n2;

  BUFX3 U2 ( .A(n1), .Y(n2) );
  BUFX3 U3 ( .A(TR), .Y(n1) );
  NOR2BX1 U4 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U5 ( .AN(nP[9]), .B(n2), .Y(nR[9]) );
  NOR2BX1 U6 ( .AN(nP[10]), .B(n1), .Y(nR[10]) );
  NOR2BX1 U7 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U8 ( .AN(nP[5]), .B(n2), .Y(nR[5]) );
  NOR2BX1 U9 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U10 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U11 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U12 ( .AN(nP[6]), .B(n2), .Y(nR[6]) );
  NOR2BX1 U13 ( .AN(nP[7]), .B(n2), .Y(nR[7]) );
  NOR2BX1 U14 ( .AN(nP[8]), .B(n2), .Y(nR[8]) );
  NOR2BX1 U15 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U16 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U17 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U18 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U19 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_13_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(reset), .Y(n4) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[4]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(y[0]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[14]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[10]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[7]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[15]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n1), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n3), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n4), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[0]) );
  SDFFRHQX1 delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[15]) );
endmodule


module UPA1_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [15:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR3X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .Y(SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module UPA1_0 ( PK0, PK1, A1, SIGPK, A1T );
  input [15:0] A1;
  output [15:0] A1T;
  input PK0, PK1, SIGPK;
  wire   N8, N9, N10, N11, N12, N13, N14, ULA1_8_, N32, N33, N34, N35, N36,
         N37, N38, N39, N40, UA1_9_, UA1_8_, UA1_7_, UA1_6_, UA1_5_, UA1_4_,
         UA1_3_, UA1_2_, UA1_1_, UA1_15_, UA1_14_, UA1_13_, UA1_12_, UA1_11_,
         UA1_10_, UA1_0_, N23, N22, N21, N20, N19, N18, N17, sub_60_2_carry_2_,
         sub_60_2_carry_3_, sub_60_2_carry_4_, sub_60_2_carry_5_,
         sub_60_2_carry_6_, sub_60_2_carry_7_, add_66_carry_10_,
         add_66_carry_11_, add_66_carry_12_, add_66_carry_13_,
         add_66_carry_14_, add_66_carry_15_, add_66_carry_9_, add_66_B_6_,
         add_66_B_7_, add_66_B_9_, add_66_A_6_, n1, n2, n3, n4, n5, n6, n7, n8,
         n10, n11, n12, n13, n14, n15, n16, n17, n18, n20;
  wire   [9:7] UGA1;
  wire   [7:2] sub_60_carry;
  wire   [8:7] add_66_carry;
  assign N32 = A1[8];
  assign N23 = A1[15];
  assign N22 = A1[14];
  assign N21 = A1[13];
  assign N20 = A1[12];
  assign N19 = A1[11];
  assign N18 = A1[10];
  assign N17 = A1[9];

  AND2X2 U24 ( .A(n10), .B(add_66_A_6_), .Y(UGA1[9]) );
  NOR2X1 U3 ( .A(N32), .B(N17), .Y(sub_60_2_carry_2_) );
  OR2X2 U4 ( .A(sub_60_carry[7]), .B(N23), .Y(n20) );
  NOR2X1 U5 ( .A(N32), .B(N17), .Y(sub_60_carry[2]) );
  NOR2X1 U6 ( .A(SIGPK), .B(n17), .Y(add_66_carry[7]) );
  INVXL U7 ( .A(SIGPK), .Y(add_66_A_6_) );
  NOR2XL U8 ( .A(SIGPK), .B(n10), .Y(UGA1[7]) );
  INVX1 U9 ( .A(n20), .Y(add_66_B_9_) );
  ADDFX2 U10 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_9_), .CO(
        add_66_carry_10_), .S(UA1_9_) );
  ADDFX2 U11 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_10_), .CO(
        add_66_carry_11_), .S(UA1_10_) );
  ADDFX2 U12 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_11_), .CO(
        add_66_carry_12_), .S(UA1_11_) );
  ADDFX2 U13 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_12_), .CO(
        add_66_carry_13_), .S(UA1_12_) );
  ADDFX2 U14 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_13_), .CO(
        add_66_carry_14_), .S(UA1_13_) );
  ADDFX2 U15 ( .A(UGA1[9]), .B(add_66_B_9_), .CI(add_66_carry_14_), .CO(
        add_66_carry_15_), .S(UA1_14_) );
  XOR3X2 U16 ( .A(UGA1[9]), .B(add_66_B_9_), .C(add_66_carry_15_), .Y(UA1_15_)
         );
  ADDFX2 U17 ( .A(UGA1[9]), .B(ULA1_8_), .CI(add_66_carry[8]), .CO(
        add_66_carry_9_), .S(UA1_8_) );
  OAI2BB1X1 U18 ( .A0N(N40), .A1N(N23), .B0(n20), .Y(ULA1_8_) );
  ADDFX2 U19 ( .A(UGA1[7]), .B(add_66_B_7_), .CI(add_66_carry[7]), .CO(
        add_66_carry[8]), .S(UA1_7_) );
  INVX1 U20 ( .A(n18), .Y(add_66_B_7_) );
  INVX1 U21 ( .A(N23), .Y(n8) );
  AOI22X1 U22 ( .A0(N14), .A1(n8), .B0(N39), .B1(N23), .Y(n18) );
  AOI22X1 U23 ( .A0(N8), .A1(n8), .B0(N33), .B1(N23), .Y(n12) );
  INVX1 U25 ( .A(n17), .Y(add_66_B_6_) );
  AOI22X1 U26 ( .A0(N13), .A1(n8), .B0(N38), .B1(N23), .Y(n17) );
  XOR2XL U27 ( .A(PK1), .B(PK0), .Y(n10) );
  INVX1 U28 ( .A(n11), .Y(UA1_0_) );
  AOI22X1 U29 ( .A0(N32), .A1(n8), .B0(N32), .B1(N23), .Y(n11) );
  INVX1 U30 ( .A(N32), .Y(n6) );
  INVX1 U31 ( .A(n16), .Y(UA1_5_) );
  AOI22X1 U32 ( .A0(N12), .A1(n8), .B0(N37), .B1(N23), .Y(n16) );
  INVX1 U33 ( .A(N19), .Y(n3) );
  INVX1 U34 ( .A(N18), .Y(n2) );
  INVX1 U35 ( .A(N17), .Y(n1) );
  INVX1 U36 ( .A(N20), .Y(n4) );
  INVX1 U37 ( .A(n13), .Y(UA1_2_) );
  AOI22X1 U38 ( .A0(N9), .A1(n8), .B0(N34), .B1(N23), .Y(n13) );
  INVX1 U39 ( .A(n14), .Y(UA1_3_) );
  AOI22X1 U40 ( .A0(N10), .A1(n8), .B0(N35), .B1(N23), .Y(n14) );
  INVX1 U41 ( .A(n15), .Y(UA1_4_) );
  AOI22X1 U42 ( .A0(N11), .A1(n8), .B0(N36), .B1(N23), .Y(n15) );
  INVX1 U43 ( .A(n12), .Y(UA1_1_) );
  INVX1 U44 ( .A(N22), .Y(n7) );
  INVX1 U45 ( .A(N21), .Y(n5) );
  XOR2X1 U46 ( .A(add_66_B_6_), .B(add_66_A_6_), .Y(UA1_6_) );
  AND2X1 U47 ( .A(sub_60_2_carry_7_), .B(n8), .Y(N40) );
  XOR2X1 U48 ( .A(n8), .B(sub_60_2_carry_7_), .Y(N39) );
  AND2X1 U49 ( .A(sub_60_2_carry_6_), .B(n7), .Y(sub_60_2_carry_7_) );
  XOR2X1 U50 ( .A(n7), .B(sub_60_2_carry_6_), .Y(N38) );
  AND2X1 U51 ( .A(sub_60_2_carry_5_), .B(n5), .Y(sub_60_2_carry_6_) );
  XOR2X1 U52 ( .A(n5), .B(sub_60_2_carry_5_), .Y(N37) );
  AND2X1 U53 ( .A(sub_60_2_carry_4_), .B(n4), .Y(sub_60_2_carry_5_) );
  XOR2X1 U54 ( .A(n4), .B(sub_60_2_carry_4_), .Y(N36) );
  AND2X1 U55 ( .A(sub_60_2_carry_3_), .B(n3), .Y(sub_60_2_carry_4_) );
  XOR2X1 U56 ( .A(n3), .B(sub_60_2_carry_3_), .Y(N35) );
  AND2X1 U57 ( .A(sub_60_2_carry_2_), .B(n2), .Y(sub_60_2_carry_3_) );
  XOR2X1 U58 ( .A(n2), .B(sub_60_2_carry_2_), .Y(N34) );
  XOR2X1 U59 ( .A(n1), .B(n6), .Y(N33) );
  XOR2X1 U60 ( .A(n8), .B(sub_60_carry[7]), .Y(N14) );
  AND2X1 U61 ( .A(sub_60_carry[6]), .B(n7), .Y(sub_60_carry[7]) );
  XOR2X1 U62 ( .A(n7), .B(sub_60_carry[6]), .Y(N13) );
  AND2X1 U63 ( .A(sub_60_carry[5]), .B(n5), .Y(sub_60_carry[6]) );
  XOR2X1 U64 ( .A(n5), .B(sub_60_carry[5]), .Y(N12) );
  AND2X1 U65 ( .A(sub_60_carry[4]), .B(n4), .Y(sub_60_carry[5]) );
  XOR2X1 U66 ( .A(n4), .B(sub_60_carry[4]), .Y(N11) );
  AND2X1 U67 ( .A(sub_60_carry[3]), .B(n3), .Y(sub_60_carry[4]) );
  XOR2X1 U68 ( .A(n3), .B(sub_60_carry[3]), .Y(N10) );
  AND2X1 U69 ( .A(sub_60_carry[2]), .B(n2), .Y(sub_60_carry[3]) );
  XOR2X1 U70 ( .A(n2), .B(sub_60_carry[2]), .Y(N9) );
  XOR2X1 U71 ( .A(n1), .B(n6), .Y(N8) );
  UPA1_0_DW01_add_1 add_68 ( .A({N23, N22, N21, N20, N19, N18, N17, N32, 
        A1[7:0]}), .B({UA1_15_, UA1_14_, UA1_13_, UA1_12_, UA1_11_, UA1_10_, 
        UA1_9_, UA1_8_, UA1_7_, UA1_6_, UA1_5_, UA1_4_, UA1_3_, UA1_2_, UA1_1_, 
        UA1_0_}), .CI(1'b0), .SUM(A1T) );
endmodule


module LIMD_0 ( A1T, A2P, A1P );
  input [15:0] A1T;
  input [15:0] A2P;
  output [15:0] A1P;
  wire   N2, N4, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n19, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73,
         n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87,
         n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n136, n137, n138, n139, n140, n141;
  wire   [15:0] A1UL;
  wire   [15:1] A1LL;
  wire   [14:12] sub_27_carry;
  wire   [14:2] sub_26_carry;
  assign A1UL[0] = A2P[0];
  assign A1LL[9] = A2P[9];
  assign A1LL[8] = A2P[8];
  assign A1LL[7] = A2P[7];
  assign A1LL[6] = A2P[6];
  assign A1LL[5] = A2P[5];
  assign A1LL[4] = A2P[4];
  assign A1LL[3] = A2P[3];
  assign A1LL[2] = A2P[2];
  assign A1LL[1] = A2P[1];

  CLKINVX8 U3 ( .A(n4), .Y(n1) );
  INVX4 U4 ( .A(n1), .Y(n2) );
  INVX4 U5 ( .A(n1), .Y(n3) );
  BUFX20 U6 ( .A(n140), .Y(n8) );
  NOR2BX4 U7 ( .AN(N4), .B(A1T[15]), .Y(n140) );
  AOI22XL U8 ( .A0(n3), .A1(A1T[15]), .B0(A1UL[15]), .B1(n8), .Y(n131) );
  AOI22XL U9 ( .A0(A1T[5]), .A1(n3), .B0(A1UL[5]), .B1(n8), .Y(n136) );
  AOI22XL U10 ( .A0(A1T[7]), .A1(n3), .B0(A1UL[7]), .B1(n8), .Y(n138) );
  AOI22XL U11 ( .A0(A1T[8]), .A1(n3), .B0(A1UL[8]), .B1(n8), .Y(n139) );
  AOI22XL U12 ( .A0(A1T[6]), .A1(n3), .B0(A1UL[6]), .B1(n8), .Y(n137) );
  AOI22XL U13 ( .A0(A1T[1]), .A1(n3), .B0(A1UL[1]), .B1(n8), .Y(n132) );
  AOI22XL U14 ( .A0(A1T[11]), .A1(n3), .B0(A1UL[11]), .B1(n8), .Y(n127) );
  AOI22XL U15 ( .A0(A1T[3]), .A1(n3), .B0(A1UL[3]), .B1(n8), .Y(n134) );
  AOI22XL U16 ( .A0(A1T[2]), .A1(n3), .B0(A1UL[2]), .B1(n8), .Y(n133) );
  AOI22XL U17 ( .A0(A1T[14]), .A1(n2), .B0(A1UL[14]), .B1(n8), .Y(n130) );
  AOI22XL U18 ( .A0(A1T[12]), .A1(n2), .B0(A1UL[12]), .B1(n8), .Y(n128) );
  AOI22XL U19 ( .A0(A1T[10]), .A1(n2), .B0(A1UL[10]), .B1(n8), .Y(n126) );
  AOI22XL U20 ( .A0(A1T[4]), .A1(n2), .B0(A1UL[4]), .B1(n8), .Y(n135) );
  AOI22XL U21 ( .A0(A1T[13]), .A1(n2), .B0(A1UL[13]), .B1(n8), .Y(n129) );
  AOI22XL U22 ( .A0(A1T[0]), .A1(n2), .B0(A1UL[0]), .B1(n8), .Y(n125) );
  AOI22X2 U23 ( .A0(A1T[9]), .A1(n2), .B0(A1UL[9]), .B1(n8), .Y(n141) );
  OAI2BB1X2 U24 ( .A0N(A1LL[9]), .A1N(n5), .B0(n141), .Y(A1P[9]) );
  INVX1 U25 ( .A(n84), .Y(n123) );
  OAI21XL U26 ( .A0(n97), .A1(n90), .B0(n91), .Y(n106) );
  OAI2BB1X1 U27 ( .A0N(n88), .A1N(n103), .B0(n87), .Y(n107) );
  NOR2X1 U28 ( .A(A1UL[0]), .B(A1LL[1]), .Y(sub_26_carry[2]) );
  NOR2X4 U29 ( .A(n140), .B(n5), .Y(n4) );
  AOI211X2 U30 ( .A0(n120), .A1(A1T[12]), .B0(n83), .C0(n123), .Y(n103) );
  NOR3BX1 U31 ( .AN(n103), .B(n102), .C(n101), .Y(n104) );
  INVX1 U32 ( .A(A1UL[14]), .Y(n122) );
  INVX1 U33 ( .A(A1UL[0]), .Y(n10) );
  INVX1 U34 ( .A(A1LL[2]), .Y(n16) );
  XOR2X1 U35 ( .A(A2P[15]), .B(n6), .Y(A1UL[15]) );
  NAND2X1 U36 ( .A(sub_26_carry[14]), .B(n14), .Y(n6) );
  INVX1 U37 ( .A(A1LL[1]), .Y(n15) );
  AND2X2 U38 ( .A(N2), .B(A1T[15]), .Y(n5) );
  INVX1 U39 ( .A(A2P[10]), .Y(n11) );
  OR2X2 U40 ( .A(A1UL[11]), .B(n116), .Y(n79) );
  NOR2XL U41 ( .A(A2P[14]), .B(sub_27_carry[14]), .Y(n7) );
  INVXL U42 ( .A(A2P[11]), .Y(n12) );
  AND2X2 U43 ( .A(sub_27_carry[13]), .B(A2P[13]), .Y(sub_27_carry[14]) );
  AND2X2 U44 ( .A(sub_27_carry[12]), .B(A2P[12]), .Y(sub_27_carry[13]) );
  OR2X2 U45 ( .A(A1UL[7]), .B(n112), .Y(n89) );
  INVXL U46 ( .A(A2P[13]), .Y(n13) );
  XOR2XL U47 ( .A(A2P[12]), .B(sub_27_carry[12]), .Y(A1LL[12]) );
  INVXL U48 ( .A(A2P[12]), .Y(n9) );
  INVXL U49 ( .A(A2P[14]), .Y(n14) );
  XOR2XL U50 ( .A(A2P[13]), .B(sub_27_carry[13]), .Y(A1LL[13]) );
  INVXL U51 ( .A(A1LL[4]), .Y(n76) );
  INVXL U52 ( .A(A1LL[8]), .Y(n78) );
  INVXL U53 ( .A(A1LL[7]), .Y(n77) );
  XOR2XL U54 ( .A(A2P[11]), .B(A2P[10]), .Y(A1LL[11]) );
  INVXL U55 ( .A(n95), .Y(n119) );
  INVXL U56 ( .A(A1UL[13]), .Y(n121) );
  NOR3BXL U57 ( .AN(n62), .B(n61), .C(n60), .Y(n63) );
  AOI22XL U58 ( .A0(n40), .A1(n60), .B0(n39), .B1(n40), .Y(n47) );
  OAI22XL U59 ( .A0(n45), .A1(n44), .B0(n43), .B1(n45), .Y(n46) );
  INVXL U60 ( .A(n54), .Y(n75) );
  NAND2BXL U61 ( .AN(A1T[9]), .B(A1LL[9]), .Y(n59) );
  NAND2BXL U62 ( .AN(A1T[5]), .B(A1LL[5]), .Y(n53) );
  AND2X2 U63 ( .A(A1T[3]), .B(n118), .Y(n93) );
  OR2X2 U64 ( .A(A1T[11]), .B(n73), .Y(n38) );
  OR2X2 U65 ( .A(A1T[7]), .B(n77), .Y(n48) );
  INVX1 U66 ( .A(A1UL[12]), .Y(n120) );
  INVX1 U67 ( .A(A1UL[3]), .Y(n118) );
  INVX1 U68 ( .A(A1UL[2]), .Y(n117) );
  INVX1 U69 ( .A(A1LL[11]), .Y(n73) );
  INVX1 U70 ( .A(A1LL[5]), .Y(n19) );
  INVX1 U71 ( .A(A1LL[6]), .Y(n36) );
  INVX1 U72 ( .A(A1LL[3]), .Y(n17) );
  OAI2BB1X1 U73 ( .A0N(A1LL[15]), .A1N(n5), .B0(n131), .Y(A1P[15]) );
  INVX1 U74 ( .A(A1T[15]), .Y(n72) );
  INVX1 U75 ( .A(n43), .Y(n74) );
  XOR2X1 U76 ( .A(A2P[15]), .B(n7), .Y(A1LL[15]) );
  INVX1 U77 ( .A(A1LL[9]), .Y(n37) );
  INVXL U78 ( .A(A1UL[15]), .Y(n124) );
  OAI2BB1X1 U79 ( .A0N(A1UL[0]), .A1N(n5), .B0(n125), .Y(A1P[0]) );
  OAI2BB1X1 U80 ( .A0N(A1LL[13]), .A1N(n5), .B0(n129), .Y(A1P[13]) );
  OAI2BB1X1 U81 ( .A0N(A1LL[4]), .A1N(n5), .B0(n135), .Y(A1P[4]) );
  OAI2BB1X1 U82 ( .A0N(n11), .A1N(n5), .B0(n126), .Y(A1P[10]) );
  OAI2BB1X1 U83 ( .A0N(A1LL[12]), .A1N(n5), .B0(n128), .Y(A1P[12]) );
  OAI2BB1X1 U84 ( .A0N(A1LL[14]), .A1N(n5), .B0(n130), .Y(A1P[14]) );
  OAI2BB1X1 U85 ( .A0N(A1LL[2]), .A1N(n5), .B0(n133), .Y(A1P[2]) );
  OAI2BB1X1 U86 ( .A0N(A1LL[3]), .A1N(n5), .B0(n134), .Y(A1P[3]) );
  OAI2BB1X1 U87 ( .A0N(A1LL[11]), .A1N(n5), .B0(n127), .Y(A1P[11]) );
  OAI2BB1X1 U88 ( .A0N(A1LL[1]), .A1N(n5), .B0(n132), .Y(A1P[1]) );
  OAI2BB1X1 U89 ( .A0N(A1LL[6]), .A1N(n5), .B0(n137), .Y(A1P[6]) );
  OAI2BB1X1 U90 ( .A0N(A1LL[8]), .A1N(n5), .B0(n139), .Y(A1P[8]) );
  OAI2BB1X1 U91 ( .A0N(A1LL[7]), .A1N(n5), .B0(n138), .Y(A1P[7]) );
  OAI2BB1X1 U92 ( .A0N(A1LL[5]), .A1N(n5), .B0(n136), .Y(A1P[5]) );
  INVX1 U93 ( .A(A1T[5]), .Y(n110) );
  INVX1 U94 ( .A(A1T[13]), .Y(n70) );
  INVX1 U95 ( .A(A1T[1]), .Y(n108) );
  INVX1 U96 ( .A(A1T[14]), .Y(n71) );
  INVX1 U97 ( .A(A1T[11]), .Y(n116) );
  INVX1 U98 ( .A(A1T[12]), .Y(n69) );
  INVX1 U99 ( .A(A1T[10]), .Y(n115) );
  INVX1 U100 ( .A(A1T[8]), .Y(n113) );
  INVX1 U101 ( .A(A1T[7]), .Y(n112) );
  INVX1 U102 ( .A(A1T[9]), .Y(n114) );
  INVX1 U103 ( .A(A1T[6]), .Y(n111) );
  INVX1 U104 ( .A(A1T[2]), .Y(n67) );
  INVX1 U105 ( .A(A1T[4]), .Y(n109) );
  INVX1 U106 ( .A(A1T[3]), .Y(n68) );
  XOR2X1 U107 ( .A(n14), .B(sub_26_carry[14]), .Y(A1UL[14]) );
  OR2X1 U108 ( .A(n13), .B(sub_26_carry[13]), .Y(sub_26_carry[14]) );
  XNOR2X1 U109 ( .A(sub_26_carry[13]), .B(n13), .Y(A1UL[13]) );
  OR2X1 U110 ( .A(n9), .B(sub_26_carry[12]), .Y(sub_26_carry[13]) );
  XNOR2X1 U111 ( .A(sub_26_carry[12]), .B(n9), .Y(A1UL[12]) );
  OR2X1 U112 ( .A(n12), .B(sub_26_carry[11]), .Y(sub_26_carry[12]) );
  XNOR2X1 U113 ( .A(sub_26_carry[11]), .B(n12), .Y(A1UL[11]) );
  OR2X1 U114 ( .A(n11), .B(sub_26_carry[10]), .Y(sub_26_carry[11]) );
  XNOR2X1 U115 ( .A(sub_26_carry[10]), .B(n11), .Y(A1UL[10]) );
  AND2X1 U116 ( .A(sub_26_carry[9]), .B(n37), .Y(sub_26_carry[10]) );
  XOR2X1 U117 ( .A(n37), .B(sub_26_carry[9]), .Y(A1UL[9]) );
  AND2X1 U118 ( .A(sub_26_carry[8]), .B(n78), .Y(sub_26_carry[9]) );
  XOR2X1 U119 ( .A(n78), .B(sub_26_carry[8]), .Y(A1UL[8]) );
  AND2X1 U120 ( .A(sub_26_carry[7]), .B(n77), .Y(sub_26_carry[8]) );
  XOR2X1 U121 ( .A(n77), .B(sub_26_carry[7]), .Y(A1UL[7]) );
  AND2X1 U122 ( .A(sub_26_carry[6]), .B(n36), .Y(sub_26_carry[7]) );
  XOR2X1 U123 ( .A(n36), .B(sub_26_carry[6]), .Y(A1UL[6]) );
  AND2X1 U124 ( .A(sub_26_carry[5]), .B(n19), .Y(sub_26_carry[6]) );
  XOR2X1 U125 ( .A(n19), .B(sub_26_carry[5]), .Y(A1UL[5]) );
  AND2X1 U126 ( .A(sub_26_carry[4]), .B(n76), .Y(sub_26_carry[5]) );
  XOR2X1 U127 ( .A(n76), .B(sub_26_carry[4]), .Y(A1UL[4]) );
  AND2X1 U128 ( .A(sub_26_carry[3]), .B(n17), .Y(sub_26_carry[4]) );
  XOR2X1 U129 ( .A(n17), .B(sub_26_carry[3]), .Y(A1UL[3]) );
  AND2X1 U130 ( .A(sub_26_carry[2]), .B(n16), .Y(sub_26_carry[3]) );
  XOR2X1 U131 ( .A(n16), .B(sub_26_carry[2]), .Y(A1UL[2]) );
  XOR2X1 U132 ( .A(n15), .B(n10), .Y(A1UL[1]) );
  XNOR2X1 U133 ( .A(sub_27_carry[14]), .B(A2P[14]), .Y(A1LL[14]) );
  AND2X1 U134 ( .A(A2P[10]), .B(A2P[11]), .Y(sub_27_carry[12]) );
  AOI32X1 U135 ( .A0(A1T[10]), .A1(A2P[10]), .A2(n38), .B0(n73), .B1(A1T[11]), 
        .Y(n40) );
  OAI21XL U136 ( .A0(A1T[10]), .A1(A2P[10]), .B0(n38), .Y(n60) );
  AOI32X1 U137 ( .A0(n59), .A1(n78), .A2(A1T[8]), .B0(A1T[9]), .B1(n37), .Y(
        n39) );
  NOR2BX1 U138 ( .AN(A1LL[13]), .B(A1T[13]), .Y(n42) );
  NOR2BX1 U139 ( .AN(A1LL[15]), .B(A1T[15]), .Y(n41) );
  AOI21X1 U140 ( .A0(n71), .A1(A1LL[14]), .B0(n41), .Y(n43) );
  AOI211X1 U141 ( .A0(n69), .A1(A1LL[12]), .B0(n42), .C0(n74), .Y(n62) );
  OAI32X1 U142 ( .A0(n71), .A1(A1LL[14]), .A2(n41), .B0(A1LL[15]), .B1(n72), 
        .Y(n45) );
  OAI32X1 U143 ( .A0(n69), .A1(A1LL[12]), .A2(n42), .B0(A1LL[13]), .B1(n70), 
        .Y(n44) );
  OAI2BB1X1 U144 ( .A0N(n47), .A1N(n62), .B0(n46), .Y(n66) );
  AOI32X1 U145 ( .A0(A1T[6]), .A1(n36), .A2(n48), .B0(n77), .B1(A1T[7]), .Y(
        n50) );
  OAI21XL U146 ( .A0(A1T[6]), .A1(n36), .B0(n48), .Y(n56) );
  AOI32X1 U147 ( .A0(n53), .A1(n76), .A2(A1T[4]), .B0(A1T[5]), .B1(n19), .Y(
        n49) );
  AOI22X1 U148 ( .A0(n50), .A1(n56), .B0(n49), .B1(n50), .Y(n65) );
  AOI2BB1X1 U149 ( .A0N(n15), .A1N(A1T[1]), .B0(A1UL[0]), .Y(n51) );
  AOI22X1 U150 ( .A0(A1T[1]), .A1(n15), .B0(n51), .B1(A1T[0]), .Y(n58) );
  AND2X1 U151 ( .A(A1LL[3]), .B(n68), .Y(n52) );
  OAI32X1 U152 ( .A0(n67), .A1(A1LL[2]), .A2(n52), .B0(A1LL[3]), .B1(n68), .Y(
        n54) );
  AOI21X1 U153 ( .A0(A1LL[2]), .A1(n67), .B0(n52), .Y(n55) );
  OAI221XL U154 ( .A0(A1T[4]), .A1(n76), .B0(n55), .B1(n54), .C0(n53), .Y(n57)
         );
  AOI211X1 U155 ( .A0(n58), .A1(n75), .B0(n57), .C0(n56), .Y(n64) );
  OAI21XL U156 ( .A0(A1T[8]), .A1(n78), .B0(n59), .Y(n61) );
  OAI32X1 U157 ( .A0(n66), .A1(n65), .A2(n64), .B0(n63), .B1(n66), .Y(N2) );
  AOI32X1 U158 ( .A0(A1UL[10]), .A1(n115), .A2(n79), .B0(n116), .B1(A1UL[11]), 
        .Y(n81) );
  OAI21XL U159 ( .A0(A1UL[10]), .A1(n115), .B0(n79), .Y(n101) );
  NAND2BX1 U160 ( .AN(A1UL[9]), .B(A1T[9]), .Y(n100) );
  AOI32X1 U161 ( .A0(n100), .A1(n113), .A2(A1UL[8]), .B0(A1UL[9]), .B1(n114), 
        .Y(n80) );
  AOI22X1 U162 ( .A0(n81), .A1(n101), .B0(n80), .B1(n81), .Y(n88) );
  NOR2BX1 U163 ( .AN(A1T[13]), .B(A1UL[13]), .Y(n83) );
  NOR2BX1 U164 ( .AN(A1T[15]), .B(A1UL[15]), .Y(n82) );
  AOI21X1 U165 ( .A0(n122), .A1(A1T[14]), .B0(n82), .Y(n84) );
  OAI32X1 U166 ( .A0(n122), .A1(A1T[14]), .A2(n82), .B0(A1T[15]), .B1(n124), 
        .Y(n86) );
  OAI32X1 U167 ( .A0(n120), .A1(A1T[12]), .A2(n83), .B0(A1T[13]), .B1(n121), 
        .Y(n85) );
  OAI22X1 U168 ( .A0(n86), .A1(n85), .B0(n84), .B1(n86), .Y(n87) );
  AOI32X1 U169 ( .A0(A1UL[6]), .A1(n111), .A2(n89), .B0(n112), .B1(A1UL[7]), 
        .Y(n91) );
  OAI21XL U170 ( .A0(A1UL[6]), .A1(n111), .B0(n89), .Y(n97) );
  NAND2BX1 U171 ( .AN(A1UL[5]), .B(A1T[5]), .Y(n94) );
  AOI32X1 U172 ( .A0(n94), .A1(n109), .A2(A1UL[4]), .B0(A1UL[5]), .B1(n110), 
        .Y(n90) );
  AOI2BB1X1 U173 ( .A0N(n108), .A1N(A1UL[1]), .B0(A1T[0]), .Y(n92) );
  AOI22X1 U174 ( .A0(A1UL[1]), .A1(n108), .B0(n92), .B1(A1UL[0]), .Y(n99) );
  OAI32X1 U175 ( .A0(n117), .A1(A1T[2]), .A2(n93), .B0(A1T[3]), .B1(n118), .Y(
        n95) );
  AOI21X1 U176 ( .A0(A1T[2]), .A1(n117), .B0(n93), .Y(n96) );
  OAI221XL U177 ( .A0(A1UL[4]), .A1(n109), .B0(n96), .B1(n95), .C0(n94), .Y(
        n98) );
  AOI211X1 U178 ( .A0(n99), .A1(n119), .B0(n98), .C0(n97), .Y(n105) );
  OAI21XL U179 ( .A0(A1UL[8]), .A1(n113), .B0(n100), .Y(n102) );
  OAI32X1 U180 ( .A0(n107), .A1(n106), .A2(n105), .B0(n104), .B1(n107), .Y(N4)
         );
endmodule


module TRIGB_WIDTH16_12 ( TR, nP, nR );
  input [15:0] nP;
  output [15:0] nR;
  input TR;
  wire   n1;

  NOR2BXL U2 ( .AN(nP[9]), .B(TR), .Y(nR[9]) );
  BUFX3 U3 ( .A(TR), .Y(n1) );
  NOR2BX1 U4 ( .AN(nP[15]), .B(n1), .Y(nR[15]) );
  NOR2BX1 U5 ( .AN(nP[0]), .B(n1), .Y(nR[0]) );
  NOR2BX1 U6 ( .AN(nP[13]), .B(n1), .Y(nR[13]) );
  NOR2BX1 U7 ( .AN(nP[4]), .B(n1), .Y(nR[4]) );
  NOR2BX1 U8 ( .AN(nP[10]), .B(n1), .Y(nR[10]) );
  NOR2BX1 U9 ( .AN(nP[12]), .B(n1), .Y(nR[12]) );
  NOR2BX1 U10 ( .AN(nP[14]), .B(n1), .Y(nR[14]) );
  NOR2BX1 U11 ( .AN(nP[2]), .B(n1), .Y(nR[2]) );
  NOR2BX1 U12 ( .AN(nP[3]), .B(n1), .Y(nR[3]) );
  NOR2BX1 U13 ( .AN(nP[11]), .B(n1), .Y(nR[11]) );
  NOR2BX1 U14 ( .AN(nP[1]), .B(n1), .Y(nR[1]) );
  NOR2BX1 U15 ( .AN(nP[6]), .B(n1), .Y(nR[6]) );
  NOR2BX1 U16 ( .AN(nP[8]), .B(n1), .Y(nR[8]) );
  NOR2BX1 U17 ( .AN(nP[7]), .B(n1), .Y(nR[7]) );
  NOR2BX1 U18 ( .AN(nP[5]), .B(n1), .Y(nR[5]) );
endmodule


module DELAY_RESET_STATE0_WIDTH16_12_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [15:0] x;
  output [15:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n4;
  wire   [15:0] delay0;
  wire   [15:0] delay1;
  wire   [15:0] delay2;
  wire   [15:0] delay3;
  wire   [15:0] delay4;
  wire   [15:0] delay5;
  wire   [15:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n4) );
  INVX1 U4 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[4]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[2]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[13]) );
  SDFFRHQXL delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[14]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(y[8]) );
  SDFFRHQXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay1[15]) );
  SDFFRHQXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[15]) );
  SDFFRHQXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[15]) );
  SDFFRHQXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[15]) );
  SDFFRHQXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[15]) );
  SDFFRHQXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[15]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n4), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[15]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[15]), .SE(test_se), .CK(
        clk), .RN(n4), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[15]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[15]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n4), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[15]) );
  SDFFRHQX1 delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .RN(n4), .Q(y[15]) );
endmodule


module FMULT_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [6:0] A;
  input [6:0] B;
  output [6:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [5:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(SUM[6]), .S(SUM[5]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FMULT_0_test_1 ( clk, reset, scan_enable, scan_in0, scan_in1, scan_in2, 
        scan_in3, scan_in4, scan_out0, scan_out1, scan_out2, scan_out3, 
        scan_out4, An, SRn, WAn, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR, 
        test_si, test_so, test_se );
  input [15:0] An;
  input [10:0] SRn;
  output [15:0] WAn;
  input clk, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   AnMAG_13_, N13, N14, N15, N16, N17, N18, N19, N20, N21, N22, N23, N24,
         N25, N76, N77, N78, N79, N80, N81, EXP_CARRY, N86, N90, N91, N92, N93,
         N94, N95, N96, N100, N101, N102, N103, N104, N105, N106, N112, N117,
         N118, N119, N120, N121, N122, N123, N124, N125, N126, N128, N129,
         N133, N134, N135, N136, N137, N138, N139, N140, N141, N142, N143,
         N144, N145, N146, N147, WAnMAG_15_, N160, N161, N162, N163, N164,
         N165, N166, N167, N168, N170, N171, N172, N173, N174, N175, N176,
         N177, N178, N179, N180, N181, N182, N183, N184, N185, N187, N188,
         N189, N190, N191, N192, N193, N194, N195, N196, N197, N198, N199,
         N200, N201, sub_245_B_1_, sub_245_B_2_, sub_245_B_7_, sub_245_B_8_,
         sub_245_B_9_, sub_245_B_10_, sub_245_B_11_, sub_245_B_12_,
         sub_245_B_13_, sub_245_B_14_, add_229_carry_2_, add_229_carry_3_,
         add_229_carry_4_, add_229_carry_5_, add_229_carry_6_,
         add_229_carry_7_, n1, n2, n3, n4, n5, n6, n8, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n48, n49, n51, n67, n70, n71, n101, n107,
         n132, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176,
         n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187,
         n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198,
         n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209,
         n210, n211, n212, n213, n214, n215, n216, n217, n218, n219, n220,
         n221, n222, n223, n224, n225, n226, n227, n228, n229, n230, n231,
         n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, n242,
         n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253,
         n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264,
         n265, n266, n267, n268, n269, n270, n271, n272, n273, n274, n275,
         n276, n277, n278, n279, n280, n281, n282, n283, n284, n285, n286,
         n287, n288, n289, n290, n291, n292, n293, n294, n295, n296, n297,
         n298, n299, n300, n301, n302, n303, n304, n305, n306, n307, n308,
         n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, n319,
         n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330,
         n331, n332, n333, n334, n335, sub_239_carry_3_;
  wire   [3:0] AnEXP;
  wire   [3:0] SRnEXP_reg;
  wire   [3:0] AnEXP_reg;
  wire   [4:1] WAnEXP_reg;
  wire   [5:0] AnMANT_reg;
  wire   [5:0] SRnMANT_AND;
  wire   [12:4] WAnMANT_rege;
  wire   [7:0] WAnMANT;
  wire   [15:2] sub_245_carry;
  wire   [3:2] sub_237_carry;
  wire   [12:2] sub_118_carry;
  assign N13 = An[2];
  assign test_so = n154;

  AND2X2 U39 ( .A(SRn[5]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[5]) );
  AND2X2 U40 ( .A(SRn[4]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[4]) );
  AND2X2 U41 ( .A(SRn[3]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[3]) );
  AND2X2 U42 ( .A(SRn[2]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[2]) );
  AND2X2 U43 ( .A(SRn[1]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[1]) );
  AND2X2 U44 ( .A(SRn[0]), .B(AnMANT_reg[0]), .Y(SRnMANT_AND[0]) );
  AND2X2 U54 ( .A(SRn[9]), .B(INIT_SR), .Y(N90) );
  AND4X2 U133 ( .A(n287), .B(n286), .C(n40), .D(n285), .Y(n322) );
  OAI21XL U3 ( .A0(n3), .A1(n8), .B0(N170), .Y(n290) );
  XNOR2X1 U4 ( .A(WAnMAG_15_), .B(sub_245_carry[15]), .Y(N185) );
  AOI32X1 U5 ( .A0(n8), .A1(N136), .A2(N126), .B0(N173), .B1(n3), .Y(n296) );
  AOI32X1 U6 ( .A0(n8), .A1(N137), .A2(N126), .B0(N174), .B1(n3), .Y(n298) );
  NAND2X1 U7 ( .A(WAnEXP_reg[1]), .B(N128), .Y(sub_237_carry[2]) );
  AOI32X1 U8 ( .A0(n8), .A1(N138), .A2(N126), .B0(N175), .B1(n3), .Y(n300) );
  NOR2X1 U9 ( .A(N13), .B(An[3]), .Y(sub_118_carry[2]) );
  NOR2X1 U10 ( .A(WAnMANT_rege[4]), .B(N128), .Y(n240) );
  AND3X2 U11 ( .A(sub_118_carry[12]), .B(n26), .C(An[15]), .Y(AnMAG_13_) );
  AOI32X1 U12 ( .A0(n8), .A1(N139), .A2(N126), .B0(N176), .B1(n3), .Y(n302) );
  XNOR2X1 U13 ( .A(WAnEXP_reg[1]), .B(WAnEXP_reg[2]), .Y(n1) );
  XNOR2X1 U14 ( .A(sub_237_carry[3]), .B(n31), .Y(n2) );
  NOR2X1 U15 ( .A(n155), .B(n288), .Y(n3) );
  XOR2X1 U16 ( .A(WAnEXP_reg[3]), .B(sub_239_carry_3_), .Y(n4) );
  XNOR2X1 U18 ( .A(WAnEXP_reg[4]), .B(n10), .Y(n5) );
  XNOR2X1 U19 ( .A(WAnEXP_reg[4]), .B(n11), .Y(n6) );
  AND2X2 U20 ( .A(n288), .B(LD_OUT_SR), .Y(n8) );
  MXI2X1 U21 ( .A(n182), .B(n183), .S0(AnEXP[2]), .Y(n157) );
  MXI2X1 U22 ( .A(n188), .B(n189), .S0(AnEXP[2]), .Y(n159) );
  INVX1 U23 ( .A(reset), .Y(n12) );
  INVX1 U24 ( .A(reset), .Y(n13) );
  INVX1 U25 ( .A(AnEXP[1]), .Y(n38) );
  MXI2X1 U26 ( .A(n101), .B(n107), .S0(n42), .Y(n171) );
  MXI2X1 U27 ( .A(n107), .B(n132), .S0(n42), .Y(n162) );
  MXI2X1 U28 ( .A(n132), .B(n134), .S0(n42), .Y(n170) );
  MXI2X1 U29 ( .A(n162), .B(n165), .S0(AnEXP[1]), .Y(n182) );
  MXI2X1 U30 ( .A(n171), .B(n175), .S0(AnEXP[1]), .Y(n188) );
  MXI2X1 U31 ( .A(n166), .B(n164), .S0(AnEXP[1]), .Y(n183) );
  MXI2X1 U32 ( .A(n176), .B(n174), .S0(AnEXP[1]), .Y(n189) );
  MXI2X1 U33 ( .A(n45), .B(n46), .S0(n42), .Y(n179) );
  MXI2X1 U34 ( .A(n48), .B(n49), .S0(n42), .Y(n164) );
  MXI2X1 U35 ( .A(n46), .B(n48), .S0(n42), .Y(n174) );
  MXI2X1 U36 ( .A(n71), .B(n101), .S0(n42), .Y(n165) );
  MXI2X1 U37 ( .A(n67), .B(n71), .S0(n42), .Y(n175) );
  MXI2X1 U38 ( .A(n169), .B(n170), .S0(AnEXP[1]), .Y(n190) );
  MXI2X1 U45 ( .A(n173), .B(n172), .S0(AnEXP[2]), .Y(n178) );
  NOR2X1 U46 ( .A(n169), .B(n38), .Y(n173) );
  MXI2X1 U47 ( .A(n171), .B(n170), .S0(n38), .Y(n172) );
  NOR2X1 U48 ( .A(n38), .B(n161), .Y(n184) );
  NAND2X1 U49 ( .A(AnEXP[2]), .B(n163), .Y(n168) );
  MXI2X1 U50 ( .A(n162), .B(n161), .S0(n38), .Y(n163) );
  INVX1 U51 ( .A(AnEXP[0]), .Y(n42) );
  INVX1 U52 ( .A(AnEXP[3]), .Y(n40) );
  OAI211X1 U53 ( .A0(AnEXP[3]), .A1(n70), .B0(n282), .C0(n281), .Y(AnEXP[2])
         );
  INVX1 U55 ( .A(n284), .Y(n70) );
  AOI31X1 U56 ( .A0(n280), .A1(n107), .A2(n279), .B0(n45), .Y(n281) );
  INVX1 U57 ( .A(n232), .Y(n141) );
  INVX1 U58 ( .A(n231), .Y(n135) );
  INVX1 U59 ( .A(n205), .Y(n137) );
  INVX1 U60 ( .A(n210), .Y(n139) );
  NOR3X1 U61 ( .A(n46), .B(n49), .C(n48), .Y(n279) );
  INVX1 U62 ( .A(n215), .Y(n136) );
  INVX1 U63 ( .A(n220), .Y(n140) );
  INVX1 U64 ( .A(n225), .Y(n138) );
  OAI211X1 U65 ( .A0(AnEXP[3]), .A1(n269), .B0(n268), .C0(n282), .Y(AnEXP[0])
         );
  AOI21X1 U66 ( .A0(n262), .A1(n275), .B0(n67), .Y(n269) );
  OAI21XL U67 ( .A0(n267), .A1(n46), .B0(n266), .Y(n268) );
  OAI21XL U68 ( .A0(n107), .A1(n283), .B0(n274), .Y(n262) );
  OAI2BB1X1 U69 ( .A0N(n278), .A1N(n282), .B0(n277), .Y(AnEXP[1]) );
  AOI31X1 U70 ( .A0(n273), .A1(n272), .A2(n271), .B0(n45), .Y(n278) );
  OAI31X1 U71 ( .A0(n276), .A1(n71), .A2(n67), .B0(n40), .Y(n277) );
  NAND4X1 U72 ( .A(n134), .B(n280), .C(n286), .D(n270), .Y(n271) );
  NOR2X1 U73 ( .A(n44), .B(AnMAG_13_), .Y(n282) );
  MXI2X1 U74 ( .A(n134), .B(n149), .S0(n42), .Y(n161) );
  MXI2X1 U75 ( .A(n199), .B(n209), .S0(n147), .Y(n219) );
  MXI2X1 U76 ( .A(n195), .B(n194), .S0(n147), .Y(n224) );
  MXI2X1 U77 ( .A(n196), .B(n144), .S0(n9), .Y(n231) );
  INVX1 U78 ( .A(n214), .Y(n144) );
  MXI2X1 U79 ( .A(n200), .B(n143), .S0(n9), .Y(n232) );
  INVX1 U80 ( .A(n219), .Y(n143) );
  MXI2X1 U81 ( .A(n198), .B(n142), .S0(n9), .Y(n205) );
  INVX1 U82 ( .A(n224), .Y(n142) );
  NAND2X1 U83 ( .A(AnEXP[0]), .B(n149), .Y(n169) );
  MXI2X1 U84 ( .A(n44), .B(n45), .S0(n42), .Y(n185) );
  INVX1 U85 ( .A(n266), .Y(n45) );
  MXI2X1 U86 ( .A(n49), .B(n51), .S0(n42), .Y(n176) );
  MXI2X1 U87 ( .A(n51), .B(n67), .S0(n42), .Y(n166) );
  NAND2X1 U88 ( .A(n229), .B(n9), .Y(n210) );
  MX2X1 U89 ( .A(n199), .B(n197), .S0(N129), .Y(n229) );
  MX2X1 U90 ( .A(n195), .B(n193), .S0(N129), .Y(n196) );
  MXI2X1 U91 ( .A(AnMAG_13_), .B(n44), .S0(n42), .Y(n180) );
  INVX1 U92 ( .A(An[15]), .Y(n27) );
  NAND4X1 U93 ( .A(n273), .B(n272), .C(n282), .D(n261), .Y(AnEXP[3]) );
  NOR3X1 U94 ( .A(n49), .B(n45), .C(n51), .Y(n261) );
  AOI2BB1X1 U95 ( .A0N(n322), .A1N(N81), .B0(n156), .Y(N112) );
  MX4X1 U96 ( .A(n190), .B(n189), .C(n188), .D(n187), .S0(AnEXP[3]), .S1(
        AnEXP[2]), .Y(N81) );
  MXI2X1 U97 ( .A(n186), .B(n185), .S0(n38), .Y(n187) );
  NAND2X1 U98 ( .A(AnMAG_13_), .B(n42), .Y(n186) );
  NOR2X1 U99 ( .A(n156), .B(n322), .Y(n327) );
  INVX1 U100 ( .A(N129), .Y(n147) );
  NAND3X1 U101 ( .A(n275), .B(n274), .C(n264), .Y(n284) );
  MXI2X1 U102 ( .A(n204), .B(n203), .S0(n147), .Y(n223) );
  NAND2X1 U103 ( .A(n203), .B(N129), .Y(n213) );
  MXI2X1 U104 ( .A(n209), .B(n208), .S0(n147), .Y(n228) );
  NAND2X1 U105 ( .A(N129), .B(n208), .Y(n218) );
  MXI2X1 U106 ( .A(n194), .B(n204), .S0(n147), .Y(n214) );
  NOR2X1 U107 ( .A(n284), .B(n51), .Y(n280) );
  INVX1 U108 ( .A(n273), .Y(n46) );
  NAND2X1 U109 ( .A(n196), .B(n9), .Y(n215) );
  NAND2X1 U110 ( .A(n200), .B(n9), .Y(n220) );
  NAND2X1 U111 ( .A(n198), .B(n9), .Y(n225) );
  INVX1 U112 ( .A(n270), .Y(n49) );
  INVX1 U113 ( .A(n272), .Y(n48) );
  NOR3X1 U114 ( .A(n284), .B(n132), .C(n149), .Y(n287) );
  MXI2X1 U115 ( .A(n219), .B(n218), .S0(n9), .Y(n221) );
  INVX1 U116 ( .A(n264), .Y(n67) );
  MXI2X1 U117 ( .A(n229), .B(n146), .S0(n9), .Y(n230) );
  INVX1 U118 ( .A(n228), .Y(n146) );
  MXI2X1 U119 ( .A(n214), .B(n213), .S0(n9), .Y(n216) );
  MXI2X1 U120 ( .A(n224), .B(n223), .S0(n9), .Y(n226) );
  AOI21X1 U121 ( .A0(n270), .A1(n265), .B0(n48), .Y(n267) );
  NAND4X1 U122 ( .A(n149), .B(n280), .C(n285), .D(n286), .Y(n265) );
  NOR2X1 U123 ( .A(n9), .B(n218), .Y(n201) );
  NOR2X1 U124 ( .A(n9), .B(n213), .Y(n191) );
  NOR2XL U125 ( .A(n223), .B(n9), .Y(n206) );
  NOR2XL U126 ( .A(n228), .B(n9), .Y(n211) );
  NOR2X1 U127 ( .A(n40), .B(n156), .Y(N86) );
  INVX1 U128 ( .A(n286), .Y(n107) );
  NOR3X1 U129 ( .A(n283), .B(n107), .C(n101), .Y(n276) );
  INVX1 U130 ( .A(n274), .Y(n101) );
  INVX1 U131 ( .A(n275), .Y(n71) );
  INVX1 U132 ( .A(n285), .Y(n134) );
  INVX1 U134 ( .A(n283), .Y(n132) );
  OAI22X1 U135 ( .A0(N24), .A1(n27), .B0(An[15]), .B1(An[13]), .Y(n266) );
  MX2X1 U136 ( .A(WAnMANT[4]), .B(WAnMANT[5]), .S0(N128), .Y(n199) );
  MX2X1 U137 ( .A(WAnMANT[5]), .B(WAnMANT[6]), .S0(N128), .Y(n195) );
  INVX1 U138 ( .A(n289), .Y(N170) );
  NAND2X1 U139 ( .A(N133), .B(N126), .Y(n289) );
  NOR2X1 U140 ( .A(n5), .B(n192), .Y(N133) );
  MXI2X1 U141 ( .A(n191), .B(n135), .S0(n2), .Y(n192) );
  INVX1 U142 ( .A(n259), .Y(n44) );
  OAI22X1 U143 ( .A0(N25), .A1(n27), .B0(An[15]), .B1(An[14]), .Y(n259) );
  NOR2BX1 U144 ( .AN(WAnMANT[7]), .B(N128), .Y(n193) );
  MX2X1 U145 ( .A(WAnMANT[6]), .B(WAnMANT[7]), .S0(N128), .Y(n197) );
  INVX1 U146 ( .A(n291), .Y(sub_245_B_1_) );
  NAND2X1 U147 ( .A(N134), .B(N126), .Y(n291) );
  NOR2X1 U148 ( .A(n5), .B(n202), .Y(N134) );
  MXI2X1 U149 ( .A(n201), .B(n141), .S0(n2), .Y(n202) );
  INVX1 U150 ( .A(n293), .Y(sub_245_B_2_) );
  NAND2X1 U151 ( .A(N135), .B(N126), .Y(n293) );
  NOR2X1 U152 ( .A(n5), .B(n207), .Y(N135) );
  MXI2X1 U153 ( .A(n206), .B(n137), .S0(n2), .Y(n207) );
  NAND2X1 U154 ( .A(N136), .B(N126), .Y(n295) );
  NOR2X1 U155 ( .A(n5), .B(n212), .Y(N136) );
  MXI2X1 U156 ( .A(n211), .B(n139), .S0(n2), .Y(n212) );
  INVX1 U157 ( .A(N13), .Y(n14) );
  INVX1 U158 ( .A(An[3]), .Y(n15) );
  INVX1 U159 ( .A(An[4]), .Y(n16) );
  INVX1 U160 ( .A(An[5]), .Y(n17) );
  OAI22X1 U161 ( .A0(N22), .A1(n27), .B0(An[15]), .B1(An[11]), .Y(n272) );
  OAI22X1 U162 ( .A0(N18), .A1(n27), .B0(An[7]), .B1(An[15]), .Y(n275) );
  OAI22X1 U163 ( .A0(N19), .A1(n27), .B0(An[8]), .B1(An[15]), .Y(n264) );
  OAI22X1 U164 ( .A0(N17), .A1(n27), .B0(An[6]), .B1(An[15]), .Y(n274) );
  INVX1 U165 ( .A(n260), .Y(n51) );
  OAI22X1 U166 ( .A0(N20), .A1(n27), .B0(An[9]), .B1(An[15]), .Y(n260) );
  OAI22X1 U167 ( .A0(N21), .A1(n27), .B0(An[15]), .B1(An[10]), .Y(n270) );
  OAI22X1 U168 ( .A0(N23), .A1(n27), .B0(An[15]), .B1(An[12]), .Y(n273) );
  INVX1 U169 ( .A(n303), .Y(sub_245_B_7_) );
  AOI22X1 U170 ( .A0(N160), .A1(n153), .B0(N140), .B1(N126), .Y(n303) );
  NOR3X1 U171 ( .A(n255), .B(n6), .C(n4), .Y(N160) );
  NOR3X1 U172 ( .A(n230), .B(n5), .C(n2), .Y(N140) );
  MX2X1 U173 ( .A(WAnMANT[2]), .B(WAnMANT[3]), .S0(N128), .Y(n209) );
  MX2X1 U174 ( .A(WAnMANT[1]), .B(WAnMANT[2]), .S0(N128), .Y(n204) );
  MX2X1 U175 ( .A(WAnMANT[3]), .B(WAnMANT[4]), .S0(N128), .Y(n194) );
  XNOR2X1 U176 ( .A(n30), .B(sub_237_carry[2]), .Y(n9) );
  MX2X1 U177 ( .A(WAnMANT[0]), .B(WAnMANT[1]), .S0(N128), .Y(n208) );
  INVX1 U178 ( .A(n305), .Y(sub_245_B_8_) );
  AOI22X1 U179 ( .A0(N161), .A1(n153), .B0(N141), .B1(N126), .Y(n305) );
  NOR4BX1 U180 ( .AN(n256), .B(n1), .C(n4), .D(n6), .Y(N161) );
  NOR3X1 U181 ( .A(n231), .B(n5), .C(n2), .Y(N141) );
  NAND2X1 U182 ( .A(N137), .B(N126), .Y(n297) );
  NOR2X1 U183 ( .A(n5), .B(n217), .Y(N137) );
  MXI2X1 U184 ( .A(n216), .B(n136), .S0(n2), .Y(n217) );
  NAND2X1 U185 ( .A(N138), .B(N126), .Y(n299) );
  NOR2X1 U186 ( .A(n5), .B(n222), .Y(N138) );
  MXI2X1 U187 ( .A(n221), .B(n140), .S0(n2), .Y(n222) );
  NAND2X1 U188 ( .A(N139), .B(N126), .Y(n301) );
  NOR2X1 U189 ( .A(n5), .B(n227), .Y(N139) );
  MXI2X1 U190 ( .A(n226), .B(n138), .S0(n2), .Y(n227) );
  INVX1 U191 ( .A(An[8]), .Y(n20) );
  INVX1 U192 ( .A(An[7]), .Y(n19) );
  INVX1 U193 ( .A(An[9]), .Y(n21) );
  INVX1 U194 ( .A(An[10]), .Y(n22) );
  INVX1 U195 ( .A(An[11]), .Y(n23) );
  INVX1 U196 ( .A(An[6]), .Y(n18) );
  INVX1 U197 ( .A(N128), .Y(n28) );
  INVX1 U198 ( .A(N126), .Y(n153) );
  OAI22X1 U199 ( .A0(N15), .A1(n27), .B0(An[4]), .B1(An[15]), .Y(n283) );
  OAI22X1 U200 ( .A0(N16), .A1(n27), .B0(An[5]), .B1(An[15]), .Y(n286) );
  OAI22X1 U201 ( .A0(N14), .A1(n27), .B0(An[3]), .B1(An[15]), .Y(n285) );
  MXI2X1 U202 ( .A(WAnMANT[1]), .B(WAnMANT[0]), .S0(N128), .Y(n235) );
  MXI2X1 U203 ( .A(WAnMANT[4]), .B(WAnMANT[5]), .S0(n28), .Y(n243) );
  MXI2X1 U204 ( .A(WAnMANT[3]), .B(WAnMANT[2]), .S0(N128), .Y(n234) );
  MXI2X1 U205 ( .A(n238), .B(n239), .S0(n29), .Y(n250) );
  NOR2BX1 U206 ( .AN(n240), .B(n29), .Y(n252) );
  MXI2X1 U207 ( .A(n234), .B(n235), .S0(n29), .Y(n245) );
  INVX1 U208 ( .A(n309), .Y(sub_245_B_10_) );
  AOI22X1 U209 ( .A0(N163), .A1(n153), .B0(N143), .B1(N126), .Y(n309) );
  NOR4BX1 U210 ( .AN(n245), .B(n1), .C(n4), .D(n6), .Y(N163) );
  NOR3X1 U211 ( .A(n205), .B(n5), .C(n2), .Y(N143) );
  INVX1 U212 ( .A(n311), .Y(sub_245_B_11_) );
  AOI22X1 U213 ( .A0(N164), .A1(n153), .B0(N144), .B1(N126), .Y(n311) );
  NOR3X1 U214 ( .A(n233), .B(n6), .C(n4), .Y(N164) );
  NOR3X1 U215 ( .A(n210), .B(n5), .C(n2), .Y(N144) );
  INVX1 U216 ( .A(n315), .Y(sub_245_B_13_) );
  AOI22X1 U217 ( .A0(N166), .A1(n153), .B0(N146), .B1(N126), .Y(n315) );
  NOR3X1 U218 ( .A(n242), .B(n6), .C(n4), .Y(N166) );
  NOR3X1 U219 ( .A(n220), .B(n5), .C(n2), .Y(N146) );
  NOR2X1 U220 ( .A(n235), .B(n29), .Y(n256) );
  MXI2X1 U221 ( .A(n145), .B(n252), .S0(n1), .Y(n233) );
  INVX1 U222 ( .A(n250), .Y(n145) );
  MXI2X1 U223 ( .A(n236), .B(n256), .S0(n1), .Y(n237) );
  MXI2X1 U224 ( .A(n243), .B(n234), .S0(n29), .Y(n236) );
  INVX1 U225 ( .A(n263), .Y(n149) );
  OAI22X1 U226 ( .A0(N13), .A1(n27), .B0(N13), .B1(An[15]), .Y(n263) );
  MX2X1 U227 ( .A(WAnMANT[3]), .B(WAnMANT[4]), .S0(n28), .Y(n238) );
  MX2X1 U228 ( .A(WAnMANT[5]), .B(WAnMANT[6]), .S0(n28), .Y(n248) );
  MX2X1 U229 ( .A(WAnMANT[1]), .B(WAnMANT[2]), .S0(n28), .Y(n239) );
  NAND2BX1 U230 ( .AN(n1), .B(n252), .Y(n255) );
  INVX1 U231 ( .A(n307), .Y(sub_245_B_9_) );
  AOI22X1 U232 ( .A0(N162), .A1(n153), .B0(N142), .B1(N126), .Y(n307) );
  NOR4BX1 U233 ( .AN(n257), .B(n4), .C(n1), .D(n6), .Y(N162) );
  NOR3X1 U234 ( .A(n232), .B(n5), .C(n2), .Y(N142) );
  INVX1 U235 ( .A(n313), .Y(sub_245_B_12_) );
  AOI22X1 U236 ( .A0(N165), .A1(n153), .B0(N145), .B1(N126), .Y(n313) );
  NOR3X1 U237 ( .A(n237), .B(n6), .C(n4), .Y(N165) );
  NOR3X1 U238 ( .A(n215), .B(n5), .C(n2), .Y(N145) );
  INVX1 U239 ( .A(n317), .Y(sub_245_B_14_) );
  AOI22X1 U240 ( .A0(N167), .A1(n153), .B0(N147), .B1(N126), .Y(n317) );
  NOR3X1 U241 ( .A(n247), .B(n6), .C(n4), .Y(N167) );
  NOR3XL U242 ( .A(n225), .B(n5), .C(n2), .Y(N147) );
  INVX1 U243 ( .A(An[14]), .Y(n26) );
  INVX1 U244 ( .A(An[13]), .Y(n25) );
  INVX1 U245 ( .A(An[12]), .Y(n24) );
  MXI2X1 U246 ( .A(n246), .B(n245), .S0(n1), .Y(n247) );
  MXI2X1 U247 ( .A(n244), .B(n243), .S0(n29), .Y(n246) );
  MXI2X1 U248 ( .A(WAnMANT[7]), .B(WAnMANT[6]), .S0(N128), .Y(n244) );
  NOR2BX1 U249 ( .AN(N168), .B(N126), .Y(WAnMAG_15_) );
  NOR2X1 U250 ( .A(n6), .B(n254), .Y(N168) );
  MXI2X1 U251 ( .A(n253), .B(n148), .S0(n4), .Y(n254) );
  INVX1 U252 ( .A(n255), .Y(n148) );
  MXI2X1 U253 ( .A(n251), .B(n250), .S0(n1), .Y(n253) );
  MXI2X1 U254 ( .A(n249), .B(n248), .S0(n29), .Y(n251) );
  NOR2BX1 U255 ( .AN(WAnMANT[7]), .B(n28), .Y(n249) );
  NOR2BX1 U256 ( .AN(N106), .B(INIT_SR), .Y(N125) );
  NOR2BX1 U257 ( .AN(N105), .B(INIT_SR), .Y(N124) );
  NOR2BX1 U258 ( .AN(N104), .B(INIT_SR), .Y(N123) );
  NOR2BX1 U259 ( .AN(N103), .B(INIT_SR), .Y(N122) );
  NOR2BX1 U260 ( .AN(N102), .B(INIT_SR), .Y(N121) );
  INVX1 U261 ( .A(INIT_SR), .Y(n156) );
  NOR2BX1 U262 ( .AN(N101), .B(INIT_SR), .Y(N120) );
  INVX1 U263 ( .A(n323), .Y(n34) );
  AOI22X1 U264 ( .A0(N76), .A1(n327), .B0(AnMANT_reg[1]), .B1(n156), .Y(n323)
         );
  MXI2X1 U265 ( .A(n158), .B(n157), .S0(AnEXP[3]), .Y(N76) );
  NAND2X1 U266 ( .A(n184), .B(AnEXP[2]), .Y(n158) );
  INVX1 U267 ( .A(n324), .Y(n35) );
  AOI22X1 U268 ( .A0(N77), .A1(n327), .B0(AnMANT_reg[2]), .B1(n156), .Y(n324)
         );
  MXI2X1 U269 ( .A(n160), .B(n159), .S0(AnEXP[3]), .Y(N77) );
  NAND2X1 U270 ( .A(AnEXP[2]), .B(n190), .Y(n160) );
  INVX1 U271 ( .A(n325), .Y(n36) );
  AOI22X1 U272 ( .A0(N78), .A1(n327), .B0(AnMANT_reg[3]), .B1(n156), .Y(n325)
         );
  MXI2X1 U273 ( .A(n168), .B(n167), .S0(AnEXP[3]), .Y(N78) );
  MX4X1 U274 ( .A(n166), .B(n179), .C(n165), .D(n164), .S0(AnEXP[2]), .S1(n38), 
        .Y(n167) );
  INVX1 U275 ( .A(n326), .Y(n37) );
  AOI22X1 U276 ( .A0(N79), .A1(n327), .B0(AnMANT_reg[4]), .B1(n156), .Y(n326)
         );
  MXI2X1 U277 ( .A(n178), .B(n177), .S0(AnEXP[3]), .Y(N79) );
  MX4X1 U278 ( .A(n176), .B(n185), .C(n175), .D(n174), .S0(AnEXP[2]), .S1(n38), 
        .Y(n177) );
  INVX1 U279 ( .A(n328), .Y(n33) );
  AOI22X1 U280 ( .A0(N80), .A1(n327), .B0(AnMANT_reg[5]), .B1(n156), .Y(n328)
         );
  MX4X1 U281 ( .A(n184), .B(n183), .C(n182), .D(n181), .S0(AnEXP[3]), .S1(
        AnEXP[2]), .Y(N80) );
  MXI2X1 U282 ( .A(n180), .B(n179), .S0(n38), .Y(n181) );
  OAI21XL U283 ( .A0(LD_OUT_SR), .A1(n154), .B0(n318), .Y(N201) );
  AOI22X1 U284 ( .A0(N184), .A1(n3), .B0(n8), .B1(sub_245_B_14_), .Y(n318) );
  OAI21XL U285 ( .A0(LD_OUT_SR), .A1(n154), .B0(n335), .Y(n258) );
  AOI22X1 U286 ( .A0(N185), .A1(n3), .B0(WAnMAG_15_), .B1(n8), .Y(n335) );
  OAI2BB1X1 U287 ( .A0N(WAn[14]), .A1N(n155), .B0(n316), .Y(N200) );
  AOI22X1 U288 ( .A0(N183), .A1(n3), .B0(n8), .B1(sub_245_B_13_), .Y(n316) );
  NAND2BX1 U289 ( .AN(n32), .B(WAnEXP_reg[4]), .Y(N126) );
  OAI2BB1X1 U290 ( .A0N(WAn[8]), .A1N(n155), .B0(n304), .Y(N194) );
  AOI22X1 U291 ( .A0(N177), .A1(n3), .B0(n8), .B1(sub_245_B_7_), .Y(n304) );
  OAI2BB1X1 U292 ( .A0N(WAn[9]), .A1N(n155), .B0(n306), .Y(N195) );
  AOI22X1 U293 ( .A0(N178), .A1(n3), .B0(n8), .B1(sub_245_B_8_), .Y(n306) );
  OAI2BB1X1 U294 ( .A0N(WAn[10]), .A1N(n155), .B0(n308), .Y(N196) );
  AOI22X1 U295 ( .A0(N179), .A1(n3), .B0(n8), .B1(sub_245_B_9_), .Y(n308) );
  OAI2BB1X1 U296 ( .A0N(WAn[11]), .A1N(n155), .B0(n310), .Y(N197) );
  AOI22X1 U297 ( .A0(N180), .A1(n3), .B0(n8), .B1(sub_245_B_10_), .Y(n310) );
  OAI2BB1X1 U298 ( .A0N(WAn[12]), .A1N(n155), .B0(n312), .Y(N198) );
  AOI22X1 U299 ( .A0(N181), .A1(n3), .B0(n8), .B1(sub_245_B_11_), .Y(n312) );
  INVX1 U300 ( .A(WAnEXP_reg[3]), .Y(n31) );
  NOR2X1 U301 ( .A(n31), .B(sub_237_carry[3]), .Y(n10) );
  INVX1 U302 ( .A(WAnMANT_rege[4]), .Y(WAnMANT[0]) );
  INVX1 U303 ( .A(WAnEXP_reg[1]), .Y(n29) );
  INVX1 U304 ( .A(WAnEXP_reg[2]), .Y(n30) );
  OAI2BB1X1 U305 ( .A0N(WAn[13]), .A1N(n155), .B0(n314), .Y(N199) );
  AOI22X1 U306 ( .A0(N182), .A1(n3), .B0(n8), .B1(sub_245_B_12_), .Y(n314) );
  INVX1 U307 ( .A(n332), .Y(n43) );
  AOI22X1 U308 ( .A0(AnEXP[0]), .A1(INIT_SR), .B0(AnEXP_reg[1]), .B1(n156), 
        .Y(n332) );
  INVX1 U309 ( .A(n333), .Y(n39) );
  AOI22X1 U310 ( .A0(AnEXP[1]), .A1(INIT_SR), .B0(AnEXP_reg[2]), .B1(n156), 
        .Y(n333) );
  INVX1 U311 ( .A(n334), .Y(n41) );
  AOI22X1 U312 ( .A0(AnEXP[2]), .A1(INIT_SR), .B0(AnEXP_reg[3]), .B1(n156), 
        .Y(n334) );
  MXI2X1 U313 ( .A(n241), .B(n257), .S0(n1), .Y(n242) );
  MX2X1 U314 ( .A(n238), .B(n248), .S0(WAnEXP_reg[1]), .Y(n241) );
  OAI2BB1X1 U315 ( .A0N(WAn[6]), .A1N(n155), .B0(n300), .Y(N192) );
  OAI2BB1X1 U316 ( .A0N(WAn[7]), .A1N(n155), .B0(n302), .Y(N193) );
  MX2X1 U317 ( .A(n240), .B(n239), .S0(WAnEXP_reg[1]), .Y(n257) );
  NAND2X1 U318 ( .A(sub_239_carry_3_), .B(WAnEXP_reg[3]), .Y(n11) );
  OAI2BB1X1 U319 ( .A0N(WAn[3]), .A1N(n155), .B0(n294), .Y(N189) );
  AOI22XL U320 ( .A0(N172), .A1(n3), .B0(n8), .B1(sub_245_B_2_), .Y(n294) );
  OAI2BB1X1 U321 ( .A0N(WAn[4]), .A1N(n155), .B0(n296), .Y(N190) );
  OAI2BB1X1 U322 ( .A0N(WAn[5]), .A1N(n155), .B0(n298), .Y(N191) );
  OAI2BB1X1 U323 ( .A0N(WAn[2]), .A1N(n155), .B0(n292), .Y(N188) );
  AOI22XL U324 ( .A0(N171), .A1(n3), .B0(n8), .B1(sub_245_B_1_), .Y(n292) );
  XOR2X1 U325 ( .A(n27), .B(SRn[10]), .Y(n288) );
  OAI2BB1X1 U326 ( .A0N(WAn[1]), .A1N(n155), .B0(n290), .Y(N187) );
  INVX1 U327 ( .A(LD_OUT_SR), .Y(n155) );
  XOR2X1 U328 ( .A(AnEXP_reg[0]), .B(EXP_CARRY), .Y(n320) );
  NOR2BX1 U329 ( .AN(N100), .B(INIT_SR), .Y(N119) );
  NOR2X1 U330 ( .A(INIT_SR), .B(n319), .Y(N95) );
  XNOR2X1 U331 ( .A(SRnEXP_reg[0]), .B(n320), .Y(n319) );
  INVX1 U332 ( .A(n329), .Y(n152) );
  AOI22X1 U333 ( .A0(SRnEXP_reg[1]), .A1(n156), .B0(SRn[6]), .B1(INIT_SR), .Y(
        n329) );
  INVX1 U334 ( .A(n330), .Y(n151) );
  AOI22X1 U335 ( .A0(SRnEXP_reg[2]), .A1(n156), .B0(SRn[7]), .B1(INIT_SR), .Y(
        n330) );
  INVX1 U336 ( .A(n331), .Y(n150) );
  AOI22X1 U337 ( .A0(SRnEXP_reg[3]), .A1(n156), .B0(SRn[8]), .B1(INIT_SR), .Y(
        n331) );
  INVX1 U338 ( .A(WAn[15]), .Y(n154) );
  NOR2BX1 U339 ( .AN(WAnEXP_reg[1]), .B(INIT_SR), .Y(N91) );
  NOR2BX1 U340 ( .AN(WAnMANT_rege[5]), .B(INIT_SR), .Y(N117) );
  NOR2BX1 U341 ( .AN(WAnMANT_rege[6]), .B(INIT_SR), .Y(N118) );
  NOR2BX1 U342 ( .AN(WAnEXP_reg[2]), .B(INIT_SR), .Y(N92) );
  NOR2BX1 U343 ( .AN(WAnEXP_reg[3]), .B(INIT_SR), .Y(N93) );
  NOR2BX1 U344 ( .AN(WAnEXP_reg[4]), .B(INIT_SR), .Y(N94) );
  NOR2X1 U345 ( .A(INIT_SR), .B(n321), .Y(N96) );
  AOI22X1 U346 ( .A0(SRnEXP_reg[0]), .A1(n320), .B0(AnEXP_reg[0]), .B1(
        EXP_CARRY), .Y(n321) );
  AND2X1 U347 ( .A(sub_245_carry[14]), .B(n317), .Y(sub_245_carry[15]) );
  XOR2X1 U348 ( .A(n317), .B(sub_245_carry[14]), .Y(N184) );
  AND2X1 U349 ( .A(sub_245_carry[13]), .B(n315), .Y(sub_245_carry[14]) );
  XOR2X1 U350 ( .A(n315), .B(sub_245_carry[13]), .Y(N183) );
  AND2X1 U351 ( .A(sub_245_carry[12]), .B(n313), .Y(sub_245_carry[13]) );
  XOR2X1 U352 ( .A(n313), .B(sub_245_carry[12]), .Y(N182) );
  AND2X1 U353 ( .A(sub_245_carry[11]), .B(n311), .Y(sub_245_carry[12]) );
  XOR2X1 U354 ( .A(n311), .B(sub_245_carry[11]), .Y(N181) );
  AND2X1 U355 ( .A(sub_245_carry[10]), .B(n309), .Y(sub_245_carry[11]) );
  XOR2X1 U356 ( .A(n309), .B(sub_245_carry[10]), .Y(N180) );
  AND2X1 U357 ( .A(sub_245_carry[9]), .B(n307), .Y(sub_245_carry[10]) );
  XOR2X1 U358 ( .A(n307), .B(sub_245_carry[9]), .Y(N179) );
  AND2X1 U359 ( .A(sub_245_carry[8]), .B(n305), .Y(sub_245_carry[9]) );
  XOR2X1 U360 ( .A(n305), .B(sub_245_carry[8]), .Y(N178) );
  AND2X1 U361 ( .A(sub_245_carry[7]), .B(n303), .Y(sub_245_carry[8]) );
  XOR2X1 U362 ( .A(n303), .B(sub_245_carry[7]), .Y(N177) );
  AND2X1 U363 ( .A(sub_245_carry[6]), .B(n301), .Y(sub_245_carry[7]) );
  XOR2X1 U364 ( .A(n301), .B(sub_245_carry[6]), .Y(N176) );
  AND2X1 U365 ( .A(sub_245_carry[5]), .B(n299), .Y(sub_245_carry[6]) );
  XOR2X1 U366 ( .A(n299), .B(sub_245_carry[5]), .Y(N175) );
  AND2X1 U367 ( .A(sub_245_carry[4]), .B(n297), .Y(sub_245_carry[5]) );
  XOR2X1 U368 ( .A(n297), .B(sub_245_carry[4]), .Y(N174) );
  AND2X1 U369 ( .A(sub_245_carry[3]), .B(n295), .Y(sub_245_carry[4]) );
  XOR2X1 U370 ( .A(n295), .B(sub_245_carry[3]), .Y(N173) );
  AND2X1 U371 ( .A(sub_245_carry[2]), .B(n293), .Y(sub_245_carry[3]) );
  XOR2X1 U372 ( .A(n293), .B(sub_245_carry[2]), .Y(N172) );
  AND2X1 U373 ( .A(n289), .B(n291), .Y(sub_245_carry[2]) );
  XOR2X1 U374 ( .A(n291), .B(n289), .Y(N171) );
  AND2X1 U375 ( .A(sub_237_carry[2]), .B(n30), .Y(sub_237_carry[3]) );
  XNOR2X1 U376 ( .A(n28), .B(n29), .Y(N129) );
  XOR2X1 U377 ( .A(WAnMANT_rege[11]), .B(add_229_carry_7_), .Y(WAnMANT[7]) );
  AND2X1 U378 ( .A(add_229_carry_6_), .B(WAnMANT_rege[10]), .Y(
        add_229_carry_7_) );
  XOR2X1 U379 ( .A(WAnMANT_rege[10]), .B(add_229_carry_6_), .Y(WAnMANT[6]) );
  AND2X1 U380 ( .A(add_229_carry_5_), .B(WAnMANT_rege[9]), .Y(add_229_carry_6_) );
  XOR2X1 U381 ( .A(WAnMANT_rege[9]), .B(add_229_carry_5_), .Y(WAnMANT[5]) );
  AND2X1 U382 ( .A(add_229_carry_4_), .B(WAnMANT_rege[8]), .Y(add_229_carry_5_) );
  XOR2X1 U383 ( .A(WAnMANT_rege[8]), .B(add_229_carry_4_), .Y(WAnMANT[4]) );
  AND2X1 U384 ( .A(add_229_carry_3_), .B(WAnMANT_rege[7]), .Y(add_229_carry_4_) );
  XOR2X1 U385 ( .A(WAnMANT_rege[7]), .B(add_229_carry_3_), .Y(WAnMANT[3]) );
  AND2X1 U386 ( .A(add_229_carry_2_), .B(WAnMANT_rege[6]), .Y(add_229_carry_3_) );
  XOR2X1 U387 ( .A(WAnMANT_rege[6]), .B(add_229_carry_2_), .Y(WAnMANT[2]) );
  OR2X1 U388 ( .A(WAnMANT_rege[5]), .B(WAnMANT_rege[4]), .Y(add_229_carry_2_)
         );
  XNOR2X1 U389 ( .A(WAnMANT_rege[4]), .B(WAnMANT_rege[5]), .Y(WAnMANT[1]) );
  OR2X1 U390 ( .A(WAnEXP_reg[2]), .B(WAnEXP_reg[1]), .Y(sub_239_carry_3_) );
  XOR2X1 U391 ( .A(n26), .B(sub_118_carry[12]), .Y(N25) );
  AND2X1 U392 ( .A(sub_118_carry[11]), .B(n25), .Y(sub_118_carry[12]) );
  XOR2X1 U393 ( .A(n25), .B(sub_118_carry[11]), .Y(N24) );
  AND2X1 U394 ( .A(sub_118_carry[10]), .B(n24), .Y(sub_118_carry[11]) );
  XOR2X1 U395 ( .A(n24), .B(sub_118_carry[10]), .Y(N23) );
  AND2X1 U396 ( .A(sub_118_carry[9]), .B(n23), .Y(sub_118_carry[10]) );
  XOR2X1 U397 ( .A(n23), .B(sub_118_carry[9]), .Y(N22) );
  AND2X1 U398 ( .A(sub_118_carry[8]), .B(n22), .Y(sub_118_carry[9]) );
  XOR2X1 U399 ( .A(n22), .B(sub_118_carry[8]), .Y(N21) );
  AND2X1 U400 ( .A(sub_118_carry[7]), .B(n21), .Y(sub_118_carry[8]) );
  XOR2X1 U401 ( .A(n21), .B(sub_118_carry[7]), .Y(N20) );
  AND2X1 U402 ( .A(sub_118_carry[6]), .B(n20), .Y(sub_118_carry[7]) );
  XOR2X1 U403 ( .A(n20), .B(sub_118_carry[6]), .Y(N19) );
  AND2X1 U404 ( .A(sub_118_carry[5]), .B(n19), .Y(sub_118_carry[6]) );
  XOR2X1 U405 ( .A(n19), .B(sub_118_carry[5]), .Y(N18) );
  AND2X1 U406 ( .A(sub_118_carry[4]), .B(n18), .Y(sub_118_carry[5]) );
  XOR2X1 U407 ( .A(n18), .B(sub_118_carry[4]), .Y(N17) );
  AND2X1 U408 ( .A(sub_118_carry[3]), .B(n17), .Y(sub_118_carry[4]) );
  XOR2X1 U409 ( .A(n17), .B(sub_118_carry[3]), .Y(N16) );
  AND2X1 U410 ( .A(sub_118_carry[2]), .B(n16), .Y(sub_118_carry[3]) );
  XOR2X1 U411 ( .A(n16), .B(sub_118_carry[2]), .Y(N15) );
  XOR2X1 U412 ( .A(n15), .B(n14), .Y(N14) );
  AOI32X1 U413 ( .A0(WAnEXP_reg[1]), .A1(N128), .A2(WAnEXP_reg[3]), .B0(
        WAnEXP_reg[2]), .B1(WAnEXP_reg[3]), .Y(n32) );
  AND2X2 U414 ( .A(WAnMANT[0]), .B(N128), .Y(n203) );
  AND2X2 U415 ( .A(n193), .B(n147), .Y(n198) );
  AND2X2 U416 ( .A(n197), .B(n147), .Y(n200) );
  SDFFRHQXL WAn_reg_reg_14_ ( .D(N201), .SI(WAn[13]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[14]) );
  SDFFRHQXL WAn_reg_reg_13_ ( .D(N200), .SI(WAn[12]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[13]) );
  SDFFRHQXL WAn_reg_reg_12_ ( .D(N199), .SI(WAn[11]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[12]) );
  SDFFRHQXL WAn_reg_reg_11_ ( .D(N198), .SI(WAn[10]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[11]) );
  SDFFRHQXL WAn_reg_reg_10_ ( .D(N197), .SI(WAn[9]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[10]) );
  SDFFRHQXL WAn_reg_reg_9_ ( .D(N196), .SI(WAn[8]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[9]) );
  SDFFRHQXL WAn_reg_reg_8_ ( .D(N195), .SI(WAn[7]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[8]) );
  SDFFRHQXL WAn_reg_reg_7_ ( .D(N194), .SI(WAn[6]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[7]) );
  SDFFRHQXL WAn_reg_reg_6_ ( .D(N193), .SI(WAn[5]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[6]) );
  SDFFRHQXL WAn_reg_reg_5_ ( .D(N192), .SI(WAn[4]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[5]) );
  SDFFRHQXL WAn_reg_reg_4_ ( .D(N191), .SI(WAn[3]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[4]) );
  SDFFRHQXL WAn_reg_reg_3_ ( .D(N190), .SI(WAn[2]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[3]) );
  SDFFRHQXL WAn_reg_reg_2_ ( .D(N189), .SI(WAn[1]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[2]) );
  SDFFRHQXL WAn_reg_reg_1_ ( .D(N188), .SI(WAn[0]), .SE(test_se), .CK(clk), 
        .RN(n12), .Q(WAn[1]) );
  SDFFRHQXL AnEXP_reg_reg_3_ ( .D(N86), .SI(AnEXP_reg[2]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(AnEXP_reg[3]) );
  SDFFRHQXL AnEXP_reg_reg_2_ ( .D(n41), .SI(AnEXP_reg[1]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(AnEXP_reg[2]) );
  SDFFRHQXL AnEXP_reg_reg_1_ ( .D(n39), .SI(AnEXP_reg[0]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(AnEXP_reg[1]) );
  SDFFRHQXL AnMANT_reg_reg_5_ ( .D(N112), .SI(AnMANT_reg[4]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[5]) );
  SDFFRHQXL AnMANT_reg_reg_4_ ( .D(n33), .SI(AnMANT_reg[3]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[4]) );
  SDFFRHQXL AnMANT_reg_reg_3_ ( .D(n37), .SI(AnMANT_reg[2]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[3]) );
  SDFFRHQXL AnMANT_reg_reg_2_ ( .D(n36), .SI(AnMANT_reg[1]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[2]) );
  SDFFRHQXL AnMANT_reg_reg_1_ ( .D(n35), .SI(AnMANT_reg[0]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(AnMANT_reg[1]) );
  SDFFRHQXL WAn_reg_reg_15_ ( .D(n258), .SI(WAn[14]), .SE(test_se), .CK(clk), 
        .RN(n13), .Q(WAn[15]) );
  SDFFRHQXL SRnEXP_reg_reg_3_ ( .D(N90), .SI(SRnEXP_reg[2]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n13), .Q(SRnEXP_reg[3]) );
  SDFFRHQXL SRnEXP_reg_reg_2_ ( .D(n150), .SI(SRnEXP_reg[1]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n12), .Q(SRnEXP_reg[2]) );
  SDFFRHQXL SRnEXP_reg_reg_1_ ( .D(n151), .SI(SRnEXP_reg[0]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n13), .Q(SRnEXP_reg[1]) );
  SDFFRHQXL WAnMANT_rege_reg_12_ ( .D(N125), .SI(WAnMANT_rege[11]), .SE(
        test_se), .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[12]) );
  SDFFRHQXL SRnEXP_reg_reg_0_ ( .D(n152), .SI(EXP_CARRY), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(SRnEXP_reg[0]) );
  SDFFRHQXL AnEXP_reg_reg_0_ ( .D(n43), .SI(test_si), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n12), .Q(AnEXP_reg[0]) );
  SDFFRHQXL AnMANT_reg_reg_0_ ( .D(n34), .SI(AnEXP_reg[3]), .SE(test_se), .CK(
        SHIFT_MANT), .RN(n12), .Q(AnMANT_reg[0]) );
  SDFFRHQXL WAn_reg_reg_0_ ( .D(N187), .SI(WAnMANT_rege[12]), .SE(test_se), 
        .CK(clk), .RN(n13), .Q(WAn[0]) );
  SDFFRHQXL EXP_CARRY_reg ( .D(N96), .SI(AnMANT_reg[5]), .SE(test_se), .CK(
        SHIFT_EXP), .RN(n13), .Q(EXP_CARRY) );
  SDFFRHQXL WAnEXP_reg_reg_4_ ( .D(N95), .SI(n31), .SE(test_se), .CK(SHIFT_EXP), .RN(n12), .Q(WAnEXP_reg[4]) );
  SDFFRHQXL WAnMANT_rege_reg_11_ ( .D(N124), .SI(WAnMANT_rege[10]), .SE(
        test_se), .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[11]) );
  SDFFRHQXL WAnMANT_rege_reg_8_ ( .D(N121), .SI(WAnMANT_rege[7]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[8]) );
  SDFFRHQXL WAnMANT_rege_reg_9_ ( .D(N122), .SI(WAnMANT_rege[8]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[9]) );
  SDFFRHQXL WAnMANT_rege_reg_10_ ( .D(N123), .SI(WAnMANT_rege[9]), .SE(test_se), .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[10]) );
  SDFFRHQXL WAnEXP_reg_reg_3_ ( .D(N94), .SI(n30), .SE(test_se), .CK(SHIFT_EXP), .RN(n13), .Q(WAnEXP_reg[3]) );
  SDFFRHQXL WAnEXP_reg_reg_2_ ( .D(N93), .SI(n29), .SE(test_se), .CK(SHIFT_EXP), .RN(n12), .Q(WAnEXP_reg[2]) );
  SDFFRHQXL WAnEXP_reg_reg_1_ ( .D(N92), .SI(n28), .SE(test_se), .CK(SHIFT_EXP), .RN(n13), .Q(WAnEXP_reg[1]) );
  SDFFRHQXL WAnMANT_rege_reg_6_ ( .D(N119), .SI(WAnMANT_rege[5]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[6]) );
  SDFFRHQXL WAnMANT_rege_reg_5_ ( .D(N118), .SI(WAnMANT[0]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[5]) );
  SDFFRHQXL WAnMANT_rege_reg_4_ ( .D(N117), .SI(WAnEXP_reg[4]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n12), .Q(WAnMANT_rege[4]) );
  SDFFRHQXL WAnMANT_rege_reg_7_ ( .D(N120), .SI(WAnMANT_rege[6]), .SE(test_se), 
        .CK(SHIFT_MANT), .RN(n13), .Q(WAnMANT_rege[7]) );
  SDFFRHQX1 WAnEXP_reg_reg_0_ ( .D(N91), .SI(SRnEXP_reg[3]), .SE(test_se), 
        .CK(SHIFT_EXP), .RN(n12), .Q(N128) );
  FMULT_0_DW01_add_1 add_217 ( .A({1'b0, SRnMANT_AND}), .B({1'b0, 
        WAnMANT_rege[12:7]}), .CI(1'b0), .SUM({N106, N105, N104, N103, N102, 
        N101, N100}) );
endmodule


module ACCUM_0_test_1 ( a, clk, sei_en, sezi_en, m1_sel, m2_sel, sei, sezi, 
        reset, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, test_mode, 
        scan_enable, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, 
        test_si, test_so, test_se );
  output [14:0] sei;
  output [14:0] sezi;
  input a, clk, sei_en, sezi_en, m1_sel, m2_sel, reset, scan_in0, scan_in1,
         scan_in2, scan_in3, scan_in4, test_mode, scan_enable, test_si,
         test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   m1_out, cout, m2_out, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10;
  wire   [15:0] tmp1;
  assign test_so = tmp1[15];

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(test_mode), .Y(n1) );
  XOR2X1 U6 ( .A(a), .B(m1_out), .Y(n5) );
  NOR2X1 U7 ( .A(m2_sel), .B(n6), .Y(m2_out) );
  XNOR2X1 U8 ( .A(tmp1[0]), .B(n5), .Y(n6) );
  NOR2X1 U9 ( .A(m1_sel), .B(n4), .Y(cout) );
  AOI22X1 U10 ( .A0(tmp1[0]), .A1(n5), .B0(a), .B1(m1_out), .Y(n4) );
  INVX1 U11 ( .A(n7), .Y(n9) );
  AOI22X1 U12 ( .A0(clk), .A1(test_mode), .B0(sei_en), .B1(n1), .Y(n7) );
  INVX1 U13 ( .A(n8), .Y(n10) );
  AOI22X1 U14 ( .A0(clk), .A1(test_mode), .B0(sezi_en), .B1(n1), .Y(n8) );
  SDFFRHQXL tmp1_reg_0_ ( .D(tmp1[1]), .SI(sezi[14]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[0]) );
  SDFFRHQXL m1_out_reg ( .D(cout), .SI(test_si), .SE(test_se), .CK(clk), .RN(
        n3), .Q(m1_out) );
  SDFFRHQXL sezi_reg_13_ ( .D(tmp1[14]), .SI(sezi[12]), .SE(test_se), .CK(n10), 
        .RN(n3), .Q(sezi[13]) );
  SDFFRHQXL sezi_reg_14_ ( .D(tmp1[15]), .SI(sezi[13]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[14]) );
  SDFFRHQXL sezi_reg_12_ ( .D(tmp1[13]), .SI(sezi[11]), .SE(test_se), .CK(n10), 
        .RN(n3), .Q(sezi[12]) );
  SDFFRHQXL sezi_reg_11_ ( .D(tmp1[12]), .SI(sezi[10]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[11]) );
  SDFFRHQXL sezi_reg_10_ ( .D(tmp1[11]), .SI(sezi[9]), .SE(test_se), .CK(n10), 
        .RN(n3), .Q(sezi[10]) );
  SDFFRHQXL sezi_reg_9_ ( .D(tmp1[10]), .SI(sezi[8]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[9]) );
  SDFFRHQXL sezi_reg_8_ ( .D(tmp1[9]), .SI(sezi[7]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[8]) );
  SDFFRHQXL sezi_reg_7_ ( .D(tmp1[8]), .SI(sezi[6]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[7]) );
  SDFFRHQXL sezi_reg_6_ ( .D(tmp1[7]), .SI(sezi[5]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[6]) );
  SDFFRHQXL sezi_reg_5_ ( .D(tmp1[6]), .SI(sezi[4]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[5]) );
  SDFFRHQXL sezi_reg_4_ ( .D(tmp1[5]), .SI(sezi[3]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[4]) );
  SDFFRHQXL sezi_reg_3_ ( .D(tmp1[4]), .SI(sezi[2]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[3]) );
  SDFFRHQXL sezi_reg_2_ ( .D(tmp1[3]), .SI(sezi[1]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[2]) );
  SDFFRHQXL sezi_reg_1_ ( .D(tmp1[2]), .SI(sezi[0]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[1]) );
  SDFFRHQXL sezi_reg_0_ ( .D(tmp1[1]), .SI(sei[14]), .SE(test_se), .CK(n10), 
        .RN(n2), .Q(sezi[0]) );
  SDFFRHQXL sei_reg_12_ ( .D(tmp1[13]), .SI(sei[11]), .SE(test_se), .CK(n9), 
        .RN(n3), .Q(sei[12]) );
  SDFFRHQXL sei_reg_10_ ( .D(tmp1[11]), .SI(sei[9]), .SE(test_se), .CK(n9), 
        .RN(n3), .Q(sei[10]) );
  SDFFRHQXL sei_reg_13_ ( .D(tmp1[14]), .SI(sei[12]), .SE(test_se), .CK(n9), 
        .RN(n3), .Q(sei[13]) );
  SDFFRHQXL sei_reg_11_ ( .D(tmp1[12]), .SI(sei[10]), .SE(test_se), .CK(n9), 
        .RN(n3), .Q(sei[11]) );
  SDFFRHQXL sei_reg_14_ ( .D(tmp1[15]), .SI(sei[13]), .SE(test_se), .CK(n9), 
        .RN(n2), .Q(sei[14]) );
  SDFFRHQXL sei_reg_6_ ( .D(tmp1[7]), .SI(sei[5]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[6]) );
  SDFFRHQXL sei_reg_8_ ( .D(tmp1[9]), .SI(sei[7]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[8]) );
  SDFFRHQXL sei_reg_4_ ( .D(tmp1[5]), .SI(sei[3]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[4]) );
  SDFFRHQXL sei_reg_2_ ( .D(tmp1[3]), .SI(sei[1]), .SE(test_se), .CK(n9), .RN(
        n2), .Q(sei[2]) );
  SDFFRHQXL sei_reg_1_ ( .D(tmp1[2]), .SI(sei[0]), .SE(test_se), .CK(n9), .RN(
        n2), .Q(sei[1]) );
  SDFFRHQXL sei_reg_9_ ( .D(tmp1[10]), .SI(sei[8]), .SE(test_se), .CK(n9), 
        .RN(n3), .Q(sei[9]) );
  SDFFRHQXL sei_reg_7_ ( .D(tmp1[8]), .SI(sei[6]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[7]) );
  SDFFRHQXL sei_reg_5_ ( .D(tmp1[6]), .SI(sei[4]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[5]) );
  SDFFRHQXL sei_reg_3_ ( .D(tmp1[4]), .SI(sei[2]), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[3]) );
  SDFFRHQXL sei_reg_0_ ( .D(tmp1[1]), .SI(m1_out), .SE(test_se), .CK(n9), .RN(
        n3), .Q(sei[0]) );
  SDFFRHQXL tmp1_reg_15_ ( .D(m2_out), .SI(tmp1[14]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[15]) );
  SDFFRHQXL tmp1_reg_14_ ( .D(tmp1[15]), .SI(tmp1[13]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[14]) );
  SDFFRHQXL tmp1_reg_13_ ( .D(tmp1[14]), .SI(tmp1[12]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[13]) );
  SDFFRHQXL tmp1_reg_12_ ( .D(tmp1[13]), .SI(tmp1[11]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[12]) );
  SDFFRHQXL tmp1_reg_11_ ( .D(tmp1[12]), .SI(tmp1[10]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[11]) );
  SDFFRHQXL tmp1_reg_10_ ( .D(tmp1[11]), .SI(tmp1[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[10]) );
  SDFFRHQXL tmp1_reg_9_ ( .D(tmp1[10]), .SI(tmp1[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[9]) );
  SDFFRHQXL tmp1_reg_8_ ( .D(tmp1[9]), .SI(tmp1[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[8]) );
  SDFFRHQXL tmp1_reg_7_ ( .D(tmp1[8]), .SI(tmp1[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[7]) );
  SDFFRHQXL tmp1_reg_6_ ( .D(tmp1[7]), .SI(tmp1[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[6]) );
  SDFFRHQXL tmp1_reg_5_ ( .D(tmp1[6]), .SI(tmp1[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[5]) );
  SDFFRHQXL tmp1_reg_4_ ( .D(tmp1[5]), .SI(tmp1[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[4]) );
  SDFFRHQXL tmp1_reg_3_ ( .D(tmp1[4]), .SI(tmp1[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[3]) );
  SDFFRHQXL tmp1_reg_2_ ( .D(tmp1[3]), .SI(tmp1[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(tmp1[2]) );
  SDFFRHQXL tmp1_reg_1_ ( .D(tmp1[2]), .SI(tmp1[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(tmp1[1]) );
endmodule


module FMULT_ACCUM_0_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  INVX1 U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module FMULT_ACCUM_0_test_1 ( reset, clk, start, done, A1, A2, B1, B2, B3, B4, 
        B5, B6, SR1, SR2, DQ1, DQ2, DQ3, DQ4, DQ5, DQ6, WAn, SE, SEZ, 
        test_mode, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, 
        scan_in4, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, 
        test_si, test_so, test_se );
  input [15:0] A1;
  input [15:0] A2;
  input [15:0] B1;
  input [15:0] B2;
  input [15:0] B3;
  input [15:0] B4;
  input [15:0] B5;
  input [15:0] B6;
  input [10:0] SR1;
  input [10:0] SR2;
  input [10:0] DQ1;
  input [10:0] DQ2;
  input [10:0] DQ3;
  input [10:0] DQ4;
  input [10:0] DQ5;
  input [10:0] DQ6;
  output [15:0] WAn;
  output [14:0] SE;
  output [14:0] SEZ;
  input reset, clk, start, test_mode, scan_enable, scan_in0, scan_in1,
         scan_in2, scan_in3, scan_in4, test_si, test_se;
  output done, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   LD_SEI_w, LD_SEZI_w, SHIFT_EXP, SHIFT_MANT, INIT_SR, LD_OUT_SR,
         CLR_CARRY, CLR_ACCUM, SHIFT_EXP_int, SHIFT_MANT_int, N83, N85, N86,
         N87, N88, N89, N90, N91, N92, N106, N109, N125, n1, n3, n4, n5, n6,
         n7, n8, n9, n10, n11, n12, n19, n20, n21, n22, n23, n24, n25, n26,
         n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40,
         n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54,
         n55, n72, n73, n74, n75, n76, n77, n78, n79, n163, n164, n165, n166,
         n167, n168, n169, n170, n171, n172, n173, n174, n175, n176, n177,
         n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, n188,
         n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n199,
         n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210,
         n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221,
         n222, n223, n224, n225, n226, n227, n228, n229, n230, n231, n232,
         n233, n234, n235, n236, n237, n238, n239, n240, n241, n242, n243,
         n244, n245, n246, n247, n248, n249, n250, n251, n252, n253, n254,
         n255, n256, n257, n258, n259, n260, n261, n13, n14, n17, n18, n56,
         n57, n59, n60, n2;
  wire   [15:0] mux_tc_out;
  wire   [10:0] mux_fl_out;
  wire   [2:0] mux_sel;
  wire   [7:0] count;
  assign test_so = mux_sel[2];

  OR4X2 U27 ( .A(count[2]), .B(count[3]), .C(count[5]), .D(count[6]), .Y(n253)
         );
  OAI21XL U3 ( .A0(n1), .A1(test_mode), .B0(n42), .Y(LD_SEI_w) );
  OAI21XL U6 ( .A0(n3), .A1(test_mode), .B0(n42), .Y(LD_SEZI_w) );
  AND3X2 U7 ( .A(mux_sel[1]), .B(mux_sel[0]), .C(mux_sel[2]), .Y(n4) );
  AND3X2 U8 ( .A(mux_sel[0]), .B(n31), .C(mux_sel[2]), .Y(n5) );
  NOR3X2 U9 ( .A(mux_sel[1]), .B(mux_sel[2]), .C(n32), .Y(n6) );
  NOR3X2 U10 ( .A(n32), .B(mux_sel[2]), .C(n31), .Y(n7) );
  NOR3X2 U11 ( .A(mux_sel[0]), .B(mux_sel[2]), .C(n31), .Y(n8) );
  AND3X2 U12 ( .A(mux_sel[1]), .B(n32), .C(mux_sel[2]), .Y(n9) );
  AND3X2 U13 ( .A(n32), .B(n31), .C(mux_sel[2]), .Y(n10) );
  NOR3X2 U14 ( .A(mux_sel[1]), .B(mux_sel[2]), .C(mux_sel[0]), .Y(n11) );
  NOR2X1 U15 ( .A(N83), .B(start), .Y(n12) );
  INVX1 U16 ( .A(n250), .Y(n29) );
  INVX1 U17 ( .A(reset), .Y(n19) );
  AOI22X1 U18 ( .A0(B4[15]), .A1(n7), .B0(B3[15]), .B1(n8), .Y(n212) );
  NAND4X1 U19 ( .A(n213), .B(n212), .C(n211), .D(n210), .Y(mux_tc_out[15]) );
  AOI22X1 U20 ( .A0(B6[15]), .A1(n5), .B0(B5[15]), .B1(n10), .Y(n211) );
  AOI22X1 U21 ( .A0(B2[15]), .A1(n6), .B0(B1[15]), .B1(n11), .Y(n213) );
  NAND4X1 U22 ( .A(n30), .B(n35), .C(n34), .D(n33), .Y(n250) );
  NOR3X1 U23 ( .A(n35), .B(n34), .C(n30), .Y(n41) );
  NOR2BX1 U24 ( .AN(n41), .B(n33), .Y(N125) );
  NOR2X1 U25 ( .A(n29), .B(n40), .Y(N109) );
  AOI31X1 U26 ( .A0(n35), .A1(n34), .A2(n30), .B0(n33), .Y(n40) );
  NAND4X1 U28 ( .A(n189), .B(n188), .C(n187), .D(n186), .Y(mux_tc_out[0]) );
  NAND4X1 U29 ( .A(n217), .B(n216), .C(n215), .D(n214), .Y(mux_tc_out[1]) );
  NAND4X1 U30 ( .A(n221), .B(n220), .C(n219), .D(n218), .Y(mux_tc_out[2]) );
  AOI22X1 U31 ( .A0(B2[2]), .A1(n6), .B0(B1[2]), .B1(n11), .Y(n221) );
  AOI22X1 U32 ( .A0(B4[2]), .A1(n7), .B0(B3[2]), .B1(n8), .Y(n220) );
  AOI22X1 U33 ( .A0(B6[2]), .A1(n5), .B0(B5[2]), .B1(n10), .Y(n219) );
  NAND4X1 U34 ( .A(n225), .B(n224), .C(n223), .D(n222), .Y(mux_tc_out[3]) );
  AOI22X1 U35 ( .A0(B2[3]), .A1(n6), .B0(B1[3]), .B1(n11), .Y(n225) );
  AOI22X1 U36 ( .A0(B4[3]), .A1(n7), .B0(B3[3]), .B1(n8), .Y(n224) );
  AOI22X1 U37 ( .A0(B6[3]), .A1(n5), .B0(B5[3]), .B1(n10), .Y(n223) );
  NAND4X1 U38 ( .A(n229), .B(n228), .C(n227), .D(n226), .Y(mux_tc_out[4]) );
  AOI22X1 U39 ( .A0(B2[4]), .A1(n6), .B0(B1[4]), .B1(n11), .Y(n229) );
  AOI22X1 U40 ( .A0(B4[4]), .A1(n7), .B0(B3[4]), .B1(n8), .Y(n228) );
  AOI22X1 U41 ( .A0(B6[4]), .A1(n5), .B0(B5[4]), .B1(n10), .Y(n227) );
  NAND4X1 U42 ( .A(n233), .B(n232), .C(n231), .D(n230), .Y(mux_tc_out[5]) );
  AOI22X1 U43 ( .A0(B2[5]), .A1(n6), .B0(B1[5]), .B1(n11), .Y(n233) );
  AOI22X1 U44 ( .A0(B4[5]), .A1(n7), .B0(B3[5]), .B1(n8), .Y(n232) );
  AOI22X1 U45 ( .A0(B6[5]), .A1(n5), .B0(B5[5]), .B1(n10), .Y(n231) );
  INVX1 U46 ( .A(mux_sel[0]), .Y(n32) );
  INVX1 U47 ( .A(mux_sel[1]), .Y(n31) );
  AOI22X1 U48 ( .A0(A1[2]), .A1(n4), .B0(A2[2]), .B1(n9), .Y(n218) );
  AOI22X1 U49 ( .A0(A1[3]), .A1(n4), .B0(A2[3]), .B1(n9), .Y(n222) );
  AOI22X1 U50 ( .A0(A1[4]), .A1(n4), .B0(A2[4]), .B1(n9), .Y(n226) );
  AOI22X1 U51 ( .A0(A1[5]), .A1(n4), .B0(A2[5]), .B1(n9), .Y(n230) );
  NAND4X1 U52 ( .A(n245), .B(n244), .C(n243), .D(n242), .Y(mux_tc_out[8]) );
  AOI22X1 U53 ( .A0(B2[8]), .A1(n6), .B0(B1[8]), .B1(n11), .Y(n245) );
  AOI22X1 U54 ( .A0(B4[8]), .A1(n7), .B0(B3[8]), .B1(n8), .Y(n244) );
  AOI22X1 U55 ( .A0(B6[8]), .A1(n5), .B0(B5[8]), .B1(n10), .Y(n243) );
  NAND4X1 U56 ( .A(n241), .B(n240), .C(n239), .D(n238), .Y(mux_tc_out[7]) );
  AOI22X1 U57 ( .A0(B2[7]), .A1(n6), .B0(B1[7]), .B1(n11), .Y(n241) );
  AOI22X1 U58 ( .A0(B4[7]), .A1(n7), .B0(B3[7]), .B1(n8), .Y(n240) );
  AOI22X1 U59 ( .A0(B6[7]), .A1(n5), .B0(B5[7]), .B1(n10), .Y(n239) );
  NAND4X1 U60 ( .A(n193), .B(n192), .C(n191), .D(n190), .Y(mux_tc_out[10]) );
  AOI22X1 U61 ( .A0(B2[10]), .A1(n6), .B0(B1[10]), .B1(n11), .Y(n193) );
  AOI22X1 U62 ( .A0(B4[10]), .A1(n7), .B0(B3[10]), .B1(n8), .Y(n192) );
  AOI22X1 U63 ( .A0(B6[10]), .A1(n5), .B0(B5[10]), .B1(n10), .Y(n191) );
  NAND4X1 U64 ( .A(n197), .B(n196), .C(n195), .D(n194), .Y(mux_tc_out[11]) );
  AOI22X1 U65 ( .A0(B2[11]), .A1(n6), .B0(B1[11]), .B1(n11), .Y(n197) );
  AOI22X1 U66 ( .A0(B4[11]), .A1(n7), .B0(B3[11]), .B1(n8), .Y(n196) );
  AOI22X1 U67 ( .A0(B6[11]), .A1(n5), .B0(B5[11]), .B1(n10), .Y(n195) );
  NAND4X1 U68 ( .A(n237), .B(n236), .C(n235), .D(n234), .Y(mux_tc_out[6]) );
  AOI22X1 U69 ( .A0(B2[6]), .A1(n6), .B0(B1[6]), .B1(n11), .Y(n237) );
  AOI22X1 U70 ( .A0(B4[6]), .A1(n7), .B0(B3[6]), .B1(n8), .Y(n236) );
  AOI22X1 U71 ( .A0(B6[6]), .A1(n5), .B0(B5[6]), .B1(n10), .Y(n235) );
  AOI22X1 U72 ( .A0(B6[9]), .A1(n5), .B0(B5[9]), .B1(n10), .Y(n247) );
  AOI22X1 U73 ( .A0(A1[8]), .A1(n4), .B0(A2[8]), .B1(n9), .Y(n242) );
  AOI22X1 U74 ( .A0(A1[7]), .A1(n4), .B0(A2[7]), .B1(n9), .Y(n238) );
  AOI22X1 U75 ( .A0(A1[6]), .A1(n4), .B0(A2[6]), .B1(n9), .Y(n234) );
  NAND4X1 U76 ( .A(n249), .B(n248), .C(n247), .D(n246), .Y(mux_tc_out[9]) );
  AOI22X1 U77 ( .A0(B2[9]), .A1(n6), .B0(B1[9]), .B1(n11), .Y(n249) );
  AOI22X1 U78 ( .A0(B4[9]), .A1(n7), .B0(B3[9]), .B1(n8), .Y(n248) );
  AOI22X1 U79 ( .A0(A1[9]), .A1(n4), .B0(A2[9]), .B1(n9), .Y(n246) );
  AOI22X1 U80 ( .A0(A1[10]), .A1(n4), .B0(A2[10]), .B1(n9), .Y(n190) );
  AOI22X1 U81 ( .A0(A1[11]), .A1(n4), .B0(A2[11]), .B1(n9), .Y(n194) );
  NAND4X1 U82 ( .A(n209), .B(n208), .C(n207), .D(n206), .Y(mux_tc_out[14]) );
  AOI22X1 U83 ( .A0(B2[14]), .A1(n6), .B0(B1[14]), .B1(n11), .Y(n209) );
  AOI22X1 U84 ( .A0(B4[14]), .A1(n7), .B0(B3[14]), .B1(n8), .Y(n208) );
  AOI22X1 U85 ( .A0(B6[14]), .A1(n5), .B0(B5[14]), .B1(n10), .Y(n207) );
  NAND4X1 U86 ( .A(n205), .B(n204), .C(n203), .D(n202), .Y(mux_tc_out[13]) );
  AOI22X1 U87 ( .A0(B2[13]), .A1(n6), .B0(B1[13]), .B1(n11), .Y(n205) );
  AOI22X1 U88 ( .A0(B4[13]), .A1(n7), .B0(B3[13]), .B1(n8), .Y(n204) );
  AOI22X1 U89 ( .A0(B6[13]), .A1(n5), .B0(B5[13]), .B1(n10), .Y(n203) );
  NAND4X1 U90 ( .A(n201), .B(n200), .C(n199), .D(n198), .Y(mux_tc_out[12]) );
  AOI22X1 U91 ( .A0(B2[12]), .A1(n6), .B0(B1[12]), .B1(n11), .Y(n201) );
  AOI22X1 U92 ( .A0(B4[12]), .A1(n7), .B0(B3[12]), .B1(n8), .Y(n200) );
  AOI22X1 U93 ( .A0(B6[12]), .A1(n5), .B0(B5[12]), .B1(n10), .Y(n199) );
  AOI22X1 U94 ( .A0(A1[12]), .A1(n4), .B0(A2[12]), .B1(n9), .Y(n198) );
  AOI22X1 U95 ( .A0(A1[13]), .A1(n4), .B0(A2[13]), .B1(n9), .Y(n202) );
  AOI22X1 U96 ( .A0(A1[14]), .A1(n4), .B0(A2[14]), .B1(n9), .Y(n206) );
  AOI22X1 U97 ( .A0(A1[15]), .A1(n4), .B0(A2[15]), .B1(n9), .Y(n210) );
  NAND4X1 U98 ( .A(n46), .B(n45), .C(n44), .D(n43), .Y(mux_fl_out[0]) );
  AOI22X1 U99 ( .A0(DQ2[0]), .A1(n6), .B0(DQ1[0]), .B1(n11), .Y(n46) );
  AOI22X1 U100 ( .A0(DQ4[0]), .A1(n7), .B0(DQ3[0]), .B1(n8), .Y(n45) );
  AOI22X1 U101 ( .A0(SR1[4]), .A1(n4), .B0(SR2[4]), .B1(n9), .Y(n79) );
  AOI22X1 U102 ( .A0(DQ6[4]), .A1(n5), .B0(DQ5[4]), .B1(n10), .Y(n163) );
  AOI22X1 U103 ( .A0(SR1[0]), .A1(n4), .B0(SR2[0]), .B1(n9), .Y(n43) );
  AOI22X1 U104 ( .A0(SR1[1]), .A1(n4), .B0(SR2[1]), .B1(n9), .Y(n51) );
  AOI22X1 U105 ( .A0(SR1[2]), .A1(n4), .B0(SR2[2]), .B1(n9), .Y(n55) );
  AOI22X1 U106 ( .A0(SR1[10]), .A1(n4), .B0(SR2[10]), .B1(n9), .Y(n47) );
  AOI22X1 U107 ( .A0(SR1[3]), .A1(n4), .B0(SR2[3]), .B1(n9), .Y(n75) );
  AOI22X1 U108 ( .A0(DQ4[1]), .A1(n7), .B0(DQ3[1]), .B1(n8), .Y(n53) );
  AOI22X1 U109 ( .A0(DQ4[2]), .A1(n7), .B0(DQ3[2]), .B1(n8), .Y(n73) );
  AOI22X1 U110 ( .A0(DQ4[10]), .A1(n7), .B0(DQ3[10]), .B1(n8), .Y(n49) );
  AOI22X1 U111 ( .A0(DQ4[3]), .A1(n7), .B0(DQ3[3]), .B1(n8), .Y(n77) );
  AOI22X1 U112 ( .A0(DQ4[4]), .A1(n7), .B0(DQ3[4]), .B1(n8), .Y(n164) );
  AOI22X1 U113 ( .A0(DQ2[1]), .A1(n6), .B0(DQ1[1]), .B1(n11), .Y(n54) );
  AOI22X1 U114 ( .A0(DQ6[0]), .A1(n5), .B0(DQ5[0]), .B1(n10), .Y(n44) );
  AOI22X1 U115 ( .A0(DQ6[1]), .A1(n5), .B0(DQ5[1]), .B1(n10), .Y(n52) );
  AOI22X1 U116 ( .A0(DQ6[2]), .A1(n5), .B0(DQ5[2]), .B1(n10), .Y(n72) );
  AOI22X1 U117 ( .A0(DQ6[3]), .A1(n5), .B0(DQ5[3]), .B1(n10), .Y(n76) );
  NAND4X1 U118 ( .A(n50), .B(n49), .C(n48), .D(n47), .Y(mux_fl_out[10]) );
  AOI22X1 U119 ( .A0(DQ2[10]), .A1(n6), .B0(DQ1[10]), .B1(n11), .Y(n50) );
  AOI22X1 U120 ( .A0(DQ6[10]), .A1(n5), .B0(DQ5[10]), .B1(n10), .Y(n48) );
  NAND4X1 U121 ( .A(n169), .B(n168), .C(n167), .D(n166), .Y(mux_fl_out[5]) );
  AOI22X1 U122 ( .A0(DQ2[5]), .A1(n6), .B0(DQ1[5]), .B1(n11), .Y(n169) );
  NAND4X1 U123 ( .A(n74), .B(n73), .C(n72), .D(n55), .Y(mux_fl_out[2]) );
  AOI22X1 U124 ( .A0(DQ2[2]), .A1(n6), .B0(DQ1[2]), .B1(n11), .Y(n74) );
  NAND4X1 U125 ( .A(n78), .B(n77), .C(n76), .D(n75), .Y(mux_fl_out[3]) );
  AOI22X1 U126 ( .A0(DQ2[3]), .A1(n6), .B0(DQ1[3]), .B1(n11), .Y(n78) );
  NAND4X1 U127 ( .A(n165), .B(n164), .C(n163), .D(n79), .Y(mux_fl_out[4]) );
  AOI22X1 U128 ( .A0(DQ2[4]), .A1(n6), .B0(DQ1[4]), .B1(n11), .Y(n165) );
  NAND4X1 U129 ( .A(n54), .B(n53), .C(n52), .D(n51), .Y(mux_fl_out[1]) );
  NOR4X1 U130 ( .A(count[4]), .B(count[7]), .C(count[6]), .D(count[5]), .Y(n37) );
  INVX1 U131 ( .A(count[1]), .Y(n35) );
  INVX1 U132 ( .A(count[3]), .Y(n33) );
  INVX1 U133 ( .A(count[0]), .Y(n30) );
  INVX1 U134 ( .A(count[2]), .Y(n34) );
  AOI22X1 U135 ( .A0(SR1[5]), .A1(n4), .B0(SR2[5]), .B1(n9), .Y(n166) );
  AOI22X1 U136 ( .A0(SR1[6]), .A1(n4), .B0(SR2[6]), .B1(n9), .Y(n170) );
  AOI22X1 U137 ( .A0(SR1[7]), .A1(n4), .B0(SR2[7]), .B1(n9), .Y(n174) );
  AOI22X1 U138 ( .A0(SR1[8]), .A1(n4), .B0(SR2[8]), .B1(n9), .Y(n178) );
  AOI22X1 U139 ( .A0(SR1[9]), .A1(n4), .B0(SR2[9]), .B1(n9), .Y(n182) );
  AOI22X1 U140 ( .A0(DQ6[5]), .A1(n5), .B0(DQ5[5]), .B1(n10), .Y(n167) );
  AOI22X1 U141 ( .A0(DQ6[6]), .A1(n5), .B0(DQ5[6]), .B1(n10), .Y(n171) );
  AOI22X1 U142 ( .A0(DQ6[7]), .A1(n5), .B0(DQ5[7]), .B1(n10), .Y(n175) );
  AOI22X1 U143 ( .A0(DQ6[8]), .A1(n5), .B0(DQ5[8]), .B1(n10), .Y(n179) );
  AOI22X1 U144 ( .A0(DQ6[9]), .A1(n5), .B0(DQ5[9]), .B1(n10), .Y(n183) );
  AOI22X1 U145 ( .A0(DQ4[5]), .A1(n7), .B0(DQ3[5]), .B1(n8), .Y(n168) );
  AOI22X1 U146 ( .A0(DQ4[6]), .A1(n7), .B0(DQ3[6]), .B1(n8), .Y(n172) );
  AOI22X1 U147 ( .A0(DQ4[7]), .A1(n7), .B0(DQ3[7]), .B1(n8), .Y(n176) );
  AOI22X1 U148 ( .A0(DQ4[8]), .A1(n7), .B0(DQ3[8]), .B1(n8), .Y(n180) );
  NOR3X1 U149 ( .A(n41), .B(count[3]), .C(n29), .Y(N106) );
  NOR3BX1 U150 ( .AN(count[4]), .B(n251), .C(n250), .Y(n38) );
  NAND3BX1 U151 ( .AN(count[7]), .B(count[6]), .C(count[5]), .Y(n251) );
  OAI31X1 U152 ( .A0(n20), .A1(count[6]), .A2(count[5]), .B0(count[7]), .Y(N83) );
  NOR2X1 U153 ( .A(n253), .B(n252), .Y(n39) );
  NAND4X1 U154 ( .A(count[7]), .B(count[4]), .C(n30), .D(n35), .Y(n252) );
  NAND4X1 U155 ( .A(n185), .B(n184), .C(n183), .D(n182), .Y(mux_fl_out[9]) );
  AOI22X1 U156 ( .A0(DQ2[9]), .A1(n6), .B0(DQ1[9]), .B1(n11), .Y(n185) );
  AOI22X1 U157 ( .A0(DQ4[9]), .A1(n7), .B0(DQ3[9]), .B1(n8), .Y(n184) );
  INVX1 U158 ( .A(n258), .Y(n25) );
  AOI22X1 U159 ( .A0(n12), .A1(count[3]), .B0(N88), .B1(N83), .Y(n258) );
  INVX1 U160 ( .A(n260), .Y(n27) );
  AOI22X1 U161 ( .A0(n12), .A1(count[5]), .B0(N90), .B1(N83), .Y(n260) );
  INVX1 U162 ( .A(n261), .Y(n28) );
  AOI22X1 U163 ( .A0(n12), .A1(count[6]), .B0(N91), .B1(N83), .Y(n261) );
  INVX1 U164 ( .A(n259), .Y(n26) );
  AOI22X1 U165 ( .A0(n12), .A1(count[4]), .B0(N89), .B1(N83), .Y(n259) );
  INVX1 U166 ( .A(n257), .Y(n24) );
  AOI22X1 U167 ( .A0(n12), .A1(count[2]), .B0(N87), .B1(N83), .Y(n257) );
  INVX1 U168 ( .A(n255), .Y(n22) );
  AOI22X1 U169 ( .A0(n12), .A1(count[7]), .B0(N92), .B1(N83), .Y(n255) );
  INVX1 U170 ( .A(n256), .Y(n23) );
  AOI22X1 U171 ( .A0(n12), .A1(count[1]), .B0(N86), .B1(N83), .Y(n256) );
  INVX1 U172 ( .A(n254), .Y(n21) );
  AOI22X1 U173 ( .A0(n12), .A1(count[0]), .B0(N85), .B1(N83), .Y(n254) );
  NAND4X1 U174 ( .A(n173), .B(n172), .C(n171), .D(n170), .Y(mux_fl_out[6]) );
  AOI22X1 U175 ( .A0(DQ2[6]), .A1(n6), .B0(DQ1[6]), .B1(n11), .Y(n173) );
  NAND4X1 U176 ( .A(n177), .B(n176), .C(n175), .D(n174), .Y(mux_fl_out[7]) );
  AOI22X1 U177 ( .A0(DQ2[7]), .A1(n6), .B0(DQ1[7]), .B1(n11), .Y(n177) );
  NAND4X1 U178 ( .A(n181), .B(n180), .C(n179), .D(n178), .Y(mux_fl_out[8]) );
  AOI22X1 U179 ( .A0(DQ2[8]), .A1(n6), .B0(DQ1[8]), .B1(n11), .Y(n181) );
  NOR4BX1 U180 ( .AN(count[0]), .B(count[3]), .C(count[2]), .D(count[1]), .Y(
        n36) );
  NAND2X1 U181 ( .A(test_mode), .B(clk), .Y(n42) );
  AOI22X1 U182 ( .A0(B6[0]), .A1(n5), .B0(B5[0]), .B1(n10), .Y(n187) );
  AOI22X1 U183 ( .A0(B4[0]), .A1(n7), .B0(B3[0]), .B1(n8), .Y(n188) );
  AOI22X1 U184 ( .A0(B2[0]), .A1(n6), .B0(B1[0]), .B1(n11), .Y(n189) );
  AOI22X1 U185 ( .A0(A1[0]), .A1(n4), .B0(A2[0]), .B1(n9), .Y(n186) );
  AOI22X1 U186 ( .A0(A1[1]), .A1(n4), .B0(A2[1]), .B1(n9), .Y(n214) );
  AOI22X1 U187 ( .A0(B6[1]), .A1(n5), .B0(B5[1]), .B1(n10), .Y(n215) );
  AOI22X1 U188 ( .A0(B4[1]), .A1(n7), .B0(B3[1]), .B1(n8), .Y(n216) );
  AOI22X1 U189 ( .A0(B2[1]), .A1(n6), .B0(B1[1]), .B1(n11), .Y(n217) );
  OAI2BB1X1 U190 ( .A0N(clk), .A1N(SHIFT_MANT_int), .B0(n42), .Y(SHIFT_MANT)
         );
  OAI2BB1X1 U191 ( .A0N(SHIFT_EXP_int), .A1N(clk), .B0(n42), .Y(SHIFT_EXP) );
  SEDFFXL SHIFT_MANT_int_reg ( .D(N109), .SI(SHIFT_EXP_int), .E(n19), .SE(
        test_se), .CK(clk), .Q(SHIFT_MANT_int) );
  SEDFFXL LD_SEZI_reg ( .D(n38), .SI(n59), .E(n19), .SE(test_se), .CK(clk), 
        .Q(n60), .QN(n3) );
  SEDFFXL LD_SEI_reg ( .D(n39), .SI(n17), .E(n19), .SE(test_se), .CK(clk), .Q(
        n59), .QN(n1) );
  SEDFFXL SHIFT_EXP_int_reg ( .D(N106), .SI(n60), .E(n19), .SE(test_se), .CK(
        clk), .Q(SHIFT_EXP_int) );
  SEDFFXL CLR_ACCUM_reg ( .D(n37), .SI(n14), .E(n19), .SE(test_se), .CK(clk), 
        .Q(CLR_ACCUM), .QN(n57) );
  SEDFFXL CLR_CARRY_reg ( .D(N125), .SI(n57), .E(n19), .SE(test_se), .CK(clk), 
        .Q(CLR_CARRY), .QN(n56) );
  SDFFRHQXL done_reg ( .D(n12), .SI(count[7]), .SE(test_se), .CK(clk), .RN(n19), .Q(done) );
  SEDFFXL LD_OUT_SR_int_reg ( .D(N125), .SI(n18), .E(n19), .SE(test_se), .CK(
        clk), .Q(LD_OUT_SR), .QN(n17) );
  SDFFRHQXL count_reg_0_ ( .D(n21), .SI(SHIFT_MANT_int), .SE(test_se), .CK(clk), .RN(n19), .Q(count[0]) );
  SDFFRHQXL count_reg_7_ ( .D(n22), .SI(count[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[7]) );
  SDFFRHQXL count_reg_1_ ( .D(n23), .SI(n30), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[1]) );
  SDFFRHQXL count_reg_2_ ( .D(n24), .SI(n35), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[2]) );
  SDFFRHQXL count_reg_4_ ( .D(n26), .SI(n33), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[4]) );
  SDFFRHQXL count_reg_6_ ( .D(n28), .SI(count[5]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[6]) );
  SDFFRHQXL count_reg_5_ ( .D(n27), .SI(count[4]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(count[5]) );
  SDFFRHQXL count_reg_3_ ( .D(n25), .SI(n34), .SE(test_se), .CK(clk), .RN(n19), 
        .Q(count[3]) );
  SDFFRHQXL mux_sel_reg_0_ ( .D(count[4]), .SI(done), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[0]) );
  SDFFRHQXL mux_sel_reg_1_ ( .D(count[5]), .SI(n32), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[1]) );
  SDFFRHQXL mux_sel_reg_2_ ( .D(count[6]), .SI(n31), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(mux_sel[2]) );
  SEDFFX1 INIT_SR_int_reg ( .D(n36), .SI(n13), .E(n19), .SE(test_se), .CK(clk), 
        .Q(INIT_SR), .QN(n18) );
  FMULT_0_test_1 FMULT_BS ( .clk(clk), .reset(reset), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .An(mux_tc_out), .SRn(mux_fl_out), .WAn(WAn), 
        .SHIFT_EXP(SHIFT_EXP), .SHIFT_MANT(SHIFT_MANT), .INIT_SR(INIT_SR), 
        .LD_OUT_SR(LD_OUT_SR), .test_si(n56), .test_so(n13), .test_se(test_se)
         );
  ACCUM_0_test_1 ACCUM_BS ( .a(WAn[0]), .clk(clk), .sei_en(LD_SEI_w), 
        .sezi_en(LD_SEZI_w), .m1_sel(CLR_CARRY), .m2_sel(CLR_ACCUM), .sei(SE), 
        .sezi(SEZ), .reset(reset), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_mode(
        test_mode), .scan_enable(1'b0), .test_si(test_si), .test_so(n14), 
        .test_se(test_se) );
  FMULT_ACCUM_0_DW01_inc_0 add_181 ( .A(count), .SUM({N92, N91, N90, N89, N88, 
        N87, N86, N85}) );
  AOI31X1 U1 ( .A0(n33), .A1(n34), .A2(n35), .B0(n2), .Y(n20) );
  INVX1 U2 ( .A(count[4]), .Y(n2) );
endmodule


module ADAP_PRED_REC_SIG_0_test_1 ( DQ, RATE, clk, dly_strb, reset, TR, 
        start_trig, SE, A2, SR, done, test_mode, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si2, test_si1, test_so2, 
        test_so1, test_se );
  input [15:0] DQ;
  input [1:0] RATE;
  output [14:0] SE;
  output [15:0] A2;
  output [15:0] SR;
  input clk, dly_strb, reset, TR, start_trig, test_mode, scan_enable, scan_in0,
         scan_in1, scan_in2, scan_in3, scan_in4, test_si2, test_si1, test_se;
  output done, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so2,
         test_so1;
  wire   PK0, SIGPK, PK1, PK2, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n16, n17, n18, n20, n21, n22;
  wire   [14:0] SEZ;
  wire   [10:0] SR0;
  wire   [10:0] SR1;
  wire   [10:0] DQ0;
  wire   [10:0] DQ1;
  wire   [15:0] B1;
  wire   [10:0] DQ2;
  wire   [15:0] B2;
  wire   [10:0] DQ3;
  wire   [15:0] B3;
  wire   [10:0] DQ4;
  wire   [15:0] B4;
  wire   [10:0] DQ5;
  wire   [15:0] B5;
  wire   [10:0] DQ6;
  wire   [15:0] B6;
  wire   [10:0] SR2;
  wire   [15:0] A1;
  wire   [15:0] A2_int;
  wire   [15:0] A2T;
  wire   [15:0] A2R_int;
  wire   [15:0] A1T;
  wire   [15:0] A1P;
  wire   [15:0] A1R;

  BUFX12 U1 ( .A(DQ[2]), .Y(n3) );
  BUFX4 U2 ( .A(DQ[7]), .Y(n8) );
  BUFX3 U3 ( .A(DQ[14]), .Y(n13) );
  BUFX20 U4 ( .A(DQ[3]), .Y(n4) );
  BUFX20 U5 ( .A(DQ[0]), .Y(n1) );
  CLKBUFX8 U6 ( .A(DQ[6]), .Y(n7) );
  CLKBUFX8 U7 ( .A(DQ[5]), .Y(n6) );
  BUFX8 U8 ( .A(DQ[4]), .Y(n5) );
  BUFX8 U9 ( .A(DQ[1]), .Y(n2) );
  BUFX3 U10 ( .A(DQ[11]), .Y(n10) );
  BUFX3 U11 ( .A(DQ[13]), .Y(n12) );
  BUFX3 U12 ( .A(DQ[12]), .Y(n11) );
  BUFX3 U13 ( .A(DQ[10]), .Y(n9) );
  BUFX3 U14 ( .A(DQ[15]), .Y(n14) );
  ADDC_0 addc1 ( .DQ({n14, n13, n12, n11, n10, n9, DQ[9:8], n8, n7, n6, n5, n4, 
        n3, n2, n1}), .SEZ(SEZ), .PK0(PK0), .SIGPK(SIGPK) );
  DELAY_RESET_STATE0_WIDTH1_1_test_1 delay1 ( .x(PK0), .reset(reset), .y(PK1), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si1), 
        .test_se(test_se) );
  DELAY_RESET_STATE0_WIDTH1_0_test_1 delay2 ( .x(PK1), .reset(reset), .y(PK2), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_se(test_se)
         );
  ADDB_0 addb1 ( .DQ({n14, n13, n12, n11, n10, n9, DQ[9:8], n8, n7, n6, n5, n4, 
        n3, n2, n1}), .SE(SE), .SR(SR) );
  FLOATB_0 floatb1 ( .SR(SR), .SR0(SR0) );
  DELAY_020_11_13_test_1 delay3 ( .x(SR0), .reset(reset), .y(SR1), .clk(
        dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(PK2), 
        .test_se(test_se) );
  FLOATA_0 floata1 ( .DQ({n14, n13, n12, n11, n10, n9, DQ[9:8], n8, n7, n6, n5, 
        n4, n3, n2, n1}), .DQ0(DQ0) );
  DELAYPREDIC_5_test_1 delaypredic1 ( .DQN(DQ0), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ1), .B(B1), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si(A1[15]), .test_so(n22), .test_se(test_se) );
  DELAYPREDIC_4_test_1 delaypredic2 ( .DQN(DQ1), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ2), .B(B2), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si(n22), .test_so(n21), .test_se(test_se) );
  DELAYPREDIC_3_test_1 delaypredic3 ( .DQN(DQ2), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ3), .B(B3), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si(n21), .test_so(n20), .test_se(test_se) );
  DELAYPREDIC_2_test_1 delaypredic4 ( .DQN(DQ3), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ4), .B(B4), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si2(test_si2), .test_si1(n20), .test_so2(n18), 
        .test_so1(test_so1), .test_se(test_se) );
  DELAYPREDIC_1_test_1 delaypredic5 ( .DQN(DQ4), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ5), .B(B5), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si(n18), .test_so(n17), .test_se(test_se) );
  DELAYPREDIC_0_test_1 delaypredic6 ( .DQN(DQ5), .DQ({n14, n13, n12, n11, n10, 
        n9, DQ[9:8], n8, n7, n6, n5, n4, n3, n2, n1}), .RATE(RATE), .TR(TR), 
        .reset(reset), .clk(dly_strb), .DQN1(DQ6), .B(B6), .scan_enable(1'b0), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .test_si(n17), .test_so(n16), .test_se(test_se) );
  DELAY_020_11_12_test_1 delay4 ( .x(SR1), .reset(reset), .y(SR2), .clk(
        dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_se(test_se)
         );
  UPA2_0 upa21 ( .PK0(PK0), .PK1(PK1), .PK2(PK2), .A1(A1), .A2(A2_int), 
        .SIGPK(SIGPK), .A2T(A2T) );
  LIMC_0 limc1 ( .A2T(A2T), .A2P(A2) );
  TRIGB_WIDTH16_13 trigb1 ( .TR(TR), .nP(A2), .nR(A2R_int) );
  DELAY_RESET_STATE0_WIDTH16_13_test_1 delay5 ( .x(A2R_int), .reset(reset), 
        .y(A2_int), .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si(SR2[10]), .test_se(test_se) );
  UPA1_0 upa11 ( .PK0(PK0), .PK1(PK1), .A1(A1), .SIGPK(SIGPK), .A1T(A1T) );
  LIMD_0 limd1 ( .A1T(A1T), .A2P(A2), .A1P(A1P) );
  TRIGB_WIDTH16_12 trigb2 ( .TR(TR), .nP(A1P), .nR(A1R) );
  DELAY_RESET_STATE0_WIDTH16_12_test_1 delay6 ( .x(A1R), .reset(reset), .y(A1), 
        .clk(dly_strb), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(A2_int[15]), .test_se(test_se) );
  FMULT_ACCUM_0_test_1 fmultaccum1 ( .reset(reset), .clk(clk), .start(
        start_trig), .done(done), .A1(A1), .A2(A2_int), .B1(B1), .B2(B2), .B3(
        B3), .B4(B4), .B5(B5), .B6(B6), .SR1(SR1), .SR2(SR2), .DQ1(DQ1), .DQ2(
        DQ2), .DQ3(DQ3), .DQ4(DQ4), .DQ5(DQ5), .DQ6(DQ6), .SE(SE), .SEZ(SEZ), 
        .test_mode(test_mode), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(
        1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(n16), .test_so(test_so2), .test_se(test_se) );
endmodule


module TONE_0 ( A2P, TDP );
  input [15:0] A2P;
  output TDP;
  wire   N0, N1, n1, n2, n3;
  assign TDP = N1;

  AND2X2 U7 ( .A(N0), .B(A2P[15]), .Y(N1) );
  AOI211XL U3 ( .A0(A2P[12]), .A1(A2P[11]), .B0(n3), .C0(A2P[13]), .Y(n2) );
  INVX1 U4 ( .A(n1), .Y(n3) );
  OAI21XL U5 ( .A0(A2P[10]), .A1(A2P[9]), .B0(A2P[12]), .Y(n1) );
  NAND3BX1 U6 ( .AN(n2), .B(A2P[14]), .C(A2P[15]), .Y(N0) );
endmodule


module TRIGB_0 ( TR, nP, nR );
  input [0:0] nP;
  output [0:0] nR;
  input TR;
  wire   nP_0_, nR_0_;
  assign nP_0_ = nP[0];
  assign nR[0] = nR_0_;

  NOR2BX1 U2 ( .AN(nP_0_), .B(TR), .Y(nR_0_) );
endmodule


module DELAY_WIDTH1_0_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [0:0] x;
  output [0:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   x_0_, y_0_, delay0_0_, delay1_0_, delay2_0_, delay3_0_, delay4_0_,
         delay5_0_, delay6_0_, n1;
  assign x_0_ = x[0];
  assign y[0] = y_0_;

  INVX1 U3 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6_0_), .SI(delay6_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y_0_) );
  SDFFRHQXL delay0_reg_0_ ( .D(x_0_), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0_0_) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0_0_), .SI(delay0_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1_0_) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1_0_), .SI(delay1_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2_0_) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2_0_), .SI(delay2_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3_0_) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3_0_), .SI(delay3_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4_0_) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4_0_), .SI(delay4_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5_0_) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5_0_), .SI(delay5_0_), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6_0_) );
endmodule


module TRANS_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [20:0] A;
  input [20:0] B;
  output [20:0] SUM;
  input CI;
  output CO;
  wire   carry_9_, carry_8_, carry_7_, carry_6_, carry_5_, carry_4_, carry_3_,
         carry_2_, carry_20_, carry_1_, carry_19_, carry_18_, carry_17_,
         carry_16_, carry_15_, carry_14_, carry_13_, carry_12_, carry_11_,
         carry_10_;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(carry_1_), .CO(carry_2_), .S(SUM[1])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry_8_), .CO(carry_9_), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry_7_), .CO(carry_8_), .S(SUM[7])
         );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry_16_), .CO(carry_17_), .S(
        SUM[16]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry_6_), .CO(carry_7_), .S(SUM[6])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry_15_), .CO(carry_16_), .S(
        SUM[15]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry_5_), .CO(carry_6_), .S(SUM[5])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry_14_), .CO(carry_15_), .S(
        SUM[14]) );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry_3_), .CO(carry_4_), .S(SUM[3])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry_18_), .CO(carry_19_), .S(
        SUM[18]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry_4_), .CO(carry_5_), .S(SUM[4])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry_2_), .CO(carry_3_), .S(SUM[2])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry_9_), .CO(carry_10_), .S(SUM[9])
         );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry_12_), .CO(carry_13_), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry_11_), .CO(carry_12_), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry_10_), .CO(carry_11_), .S(
        SUM[10]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry_13_), .CO(carry_14_), .S(
        SUM[13]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry_17_), .CO(carry_18_), .S(
        SUM[17]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry_19_), .CO(carry_20_), .S(
        SUM[19]) );
  XOR2X1 U1 ( .A(A[20]), .B(carry_20_), .Y(SUM[20]) );
  AND2X1 U2 ( .A(B[0]), .B(A[0]), .Y(carry_1_) );
endmodule


module TRANS_0 ( TD, YL, DQ, TR );
  input [18:0] YL;
  input [15:0] DQ;
  input TD;
  output TR;
  wire   N3, N4, DQTHR_9_, DQTHR_8_, DQTHR_7_, DQTHR_6_, DQTHR_5_, DQTHR_4_,
         DQTHR_3_, DQTHR_2_, DQTHR_1_, DQTHR_19_, DQTHR_18_, DQTHR_17_,
         DQTHR_16_, DQTHR_15_, DQTHR_14_, DQTHR_13_, DQTHR_12_, DQTHR_11_,
         DQTHR_10_, DQTHR_0_, n2, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73,
         n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87,
         n88, n89, n90, SYNOPSYS_UNCONNECTED__0;
  wire   [12:8] THR1;
  wire   [20:0] THR2;
  assign TR = N4;

  AND2X2 U11 ( .A(THR1[9]), .B(n8), .Y(THR2[9]) );
  AND2X2 U12 ( .A(THR1[8]), .B(n90), .Y(THR2[8]) );
  AND2X2 U33 ( .A(TD), .B(N3), .Y(N4) );
  NOR3X1 U3 ( .A(n58), .B(n2), .C(n87), .Y(THR2[16]) );
  OAI21XL U5 ( .A0(n58), .A1(n83), .B0(n9), .Y(THR2[13]) );
  OAI21XL U6 ( .A0(n58), .A1(n84), .B0(n90), .Y(THR2[14]) );
  NOR3X1 U7 ( .A(n58), .B(n2), .C(n85), .Y(THR2[15]) );
  INVX1 U8 ( .A(n8), .Y(n2) );
  NOR3BX1 U9 ( .AN(n9), .B(n7), .C(n82), .Y(THR2[4]) );
  NOR3X1 U13 ( .A(n58), .B(n2), .C(n89), .Y(THR2[17]) );
  NOR3BX1 U15 ( .AN(n8), .B(n7), .C(n81), .Y(THR2[3]) );
  NOR3BX1 U16 ( .AN(n90), .B(n7), .C(n80), .Y(THR2[2]) );
  NOR3BX1 U17 ( .AN(n8), .B(n7), .C(n86), .Y(THR2[0]) );
  NOR3BX1 U18 ( .AN(n8), .B(n7), .C(n88), .Y(THR2[1]) );
  NOR3BX1 U19 ( .AN(n90), .B(n7), .C(n83), .Y(THR2[5]) );
  NOR3BX1 U20 ( .AN(n8), .B(n7), .C(n84), .Y(THR2[6]) );
  NOR3BX1 U21 ( .AN(n9), .B(n7), .C(n85), .Y(THR2[7]) );
  NOR3X1 U22 ( .A(n58), .B(n2), .C(n76), .Y(THR2[18]) );
  NOR3X1 U24 ( .A(n58), .B(n2), .C(n77), .Y(THR2[19]) );
  OAI21XL U26 ( .A0(n30), .A1(n23), .B0(n24), .Y(n39) );
  NOR3X1 U27 ( .A(n58), .B(n2), .C(n79), .Y(THR2[20]) );
  CLKINVXL U29 ( .A(DQ[7]), .Y(n50) );
  OAI32X4 U30 ( .A0(n43), .A1(DQ[2]), .A2(n25), .B0(DQ[3]), .B1(n44), .Y(n29)
         );
  AOI2BB2XL U31 ( .B0(DQ[0]), .B1(n42), .A0N(n54), .A1N(DQTHR_1_), .Y(n28) );
  NOR2BX1 U32 ( .AN(YL[10]), .B(YL[15]), .Y(n62) );
  INVX1 U35 ( .A(DQ[5]), .Y(n52) );
  NAND2BXL U36 ( .AN(DQTHR_5_), .B(DQ[5]), .Y(n26) );
  INVX1 U37 ( .A(DQ[11]), .Y(n56) );
  MX2XL U38 ( .A(YL[14]), .B(YL[13]), .S0(YL[15]), .Y(n64) );
  MX2XL U39 ( .A(YL[13]), .B(YL[12]), .S0(YL[15]), .Y(n67) );
  MX2XL U40 ( .A(YL[11]), .B(YL[10]), .S0(YL[15]), .Y(n66) );
  MX2XL U41 ( .A(YL[12]), .B(YL[11]), .S0(YL[15]), .Y(n63) );
  NAND2XL U42 ( .A(DQ[14]), .B(n47), .Y(n15) );
  BUFX1 U43 ( .A(YL[18]), .Y(n7) );
  INVXL U44 ( .A(DQ[9]), .Y(n48) );
  INVX1 U45 ( .A(DQ[10]), .Y(n57) );
  INVXL U46 ( .A(DQ[6]), .Y(n51) );
  INVXL U47 ( .A(DQ[4]), .Y(n53) );
  INVXL U48 ( .A(DQ[8]), .Y(n49) );
  INVX1 U49 ( .A(n15), .Y(n55) );
  INVX1 U50 ( .A(DQTHR_13_), .Y(n46) );
  INVX1 U51 ( .A(DQTHR_12_), .Y(n45) );
  INVX1 U52 ( .A(DQTHR_14_), .Y(n47) );
  INVX1 U53 ( .A(DQTHR_3_), .Y(n44) );
  INVX1 U54 ( .A(DQTHR_2_), .Y(n43) );
  INVX1 U55 ( .A(DQTHR_0_), .Y(n42) );
  INVXL U56 ( .A(DQ[1]), .Y(n54) );
  NAND2X1 U57 ( .A(n70), .B(n59), .Y(n80) );
  NAND2X1 U58 ( .A(n72), .B(n59), .Y(n81) );
  MXI2X1 U59 ( .A(n70), .B(n69), .S0(n59), .Y(n84) );
  MX2X1 U60 ( .A(n78), .B(n75), .S0(n59), .Y(n83) );
  MX2X1 U61 ( .A(n65), .B(n73), .S0(n59), .Y(n82) );
  MX2X1 U62 ( .A(n62), .B(n63), .S0(n60), .Y(n70) );
  MX2X1 U63 ( .A(n66), .B(n67), .S0(n60), .Y(n72) );
  NAND2X1 U64 ( .A(n62), .B(n60), .Y(n65) );
  NAND2X1 U65 ( .A(n66), .B(n60), .Y(n78) );
  NAND2BX1 U66 ( .AN(THR1[10]), .B(n9), .Y(THR2[10]) );
  MXI2X1 U67 ( .A(n76), .B(n80), .S0(n7), .Y(THR1[10]) );
  NAND2BX1 U68 ( .AN(THR1[12]), .B(n8), .Y(THR2[12]) );
  MXI2X1 U69 ( .A(n79), .B(n82), .S0(n7), .Y(THR1[12]) );
  NAND2BX1 U70 ( .AN(THR1[11]), .B(n90), .Y(THR2[11]) );
  MXI2X1 U71 ( .A(n77), .B(n81), .S0(n7), .Y(THR1[11]) );
  MXI2X1 U72 ( .A(n89), .B(n88), .S0(n7), .Y(THR1[9]) );
  MXI2X1 U73 ( .A(n87), .B(n86), .S0(n7), .Y(THR1[8]) );
  MXI2X1 U74 ( .A(n72), .B(n71), .S0(n59), .Y(n85) );
  MXI2X1 U75 ( .A(n61), .B(n74), .S0(n59), .Y(n87) );
  INVX1 U76 ( .A(n73), .Y(n61) );
  OR2X2 U77 ( .A(n75), .B(n59), .Y(n89) );
  INVX1 U78 ( .A(n7), .Y(n58) );
  INVXL U79 ( .A(YL[17]), .Y(n59) );
  OR2XL U80 ( .A(n65), .B(YL[17]), .Y(n86) );
  OR2XL U81 ( .A(n78), .B(YL[17]), .Y(n88) );
  NAND2XL U82 ( .A(YL[17]), .B(n69), .Y(n76) );
  NAND2XL U83 ( .A(n74), .B(YL[17]), .Y(n79) );
  NAND2XL U84 ( .A(n71), .B(YL[17]), .Y(n77) );
  AND2X1 U85 ( .A(n68), .B(YL[16]), .Y(n71) );
  OAI21XL U86 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n9) );
  MXI2XL U87 ( .A(n68), .B(n67), .S0(YL[16]), .Y(n75) );
  OAI21XL U88 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n90) );
  MXI2XL U89 ( .A(n64), .B(n63), .S0(YL[16]), .Y(n73) );
  OAI21XL U90 ( .A0(YL[16]), .A1(YL[17]), .B0(n7), .Y(n8) );
  NOR2BX1 U91 ( .AN(YL[15]), .B(n60), .Y(n74) );
  MX2XL U92 ( .A(n64), .B(YL[15]), .S0(n60), .Y(n69) );
  NAND2BXL U93 ( .AN(YL[14]), .B(YL[15]), .Y(n68) );
  OR2X1 U94 ( .A(DQTHR_11_), .B(n56), .Y(n10) );
  AOI32X1 U95 ( .A0(DQTHR_10_), .A1(n57), .A2(n10), .B0(n56), .B1(DQTHR_11_), 
        .Y(n12) );
  OAI21XL U96 ( .A0(DQTHR_10_), .A1(n57), .B0(n10), .Y(n34) );
  NAND2BX1 U97 ( .AN(DQTHR_9_), .B(DQ[9]), .Y(n33) );
  AOI32X1 U98 ( .A0(n33), .A1(n49), .A2(DQTHR_8_), .B0(DQTHR_9_), .B1(n48), 
        .Y(n11) );
  AOI22X1 U99 ( .A0(n12), .A1(n34), .B0(n11), .B1(n12), .Y(n21) );
  NOR2BX1 U100 ( .AN(DQ[13]), .B(DQTHR_13_), .Y(n14) );
  AOI211X1 U101 ( .A0(n45), .A1(DQ[12]), .B0(n14), .C0(n55), .Y(n36) );
  NOR2X1 U102 ( .A(DQTHR_16_), .B(DQTHR_15_), .Y(n13) );
  OAI21XL U103 ( .A0(DQ[14]), .A1(n47), .B0(n13), .Y(n19) );
  OAI32X1 U104 ( .A0(n45), .A1(DQ[12]), .A2(n14), .B0(DQ[13]), .B1(n46), .Y(
        n18) );
  OAI22X1 U105 ( .A0(n19), .A1(n18), .B0(n19), .B1(n15), .Y(n20) );
  OAI2BB1X1 U106 ( .A0N(n21), .A1N(n36), .B0(n20), .Y(n40) );
  OR2X1 U107 ( .A(DQTHR_7_), .B(n50), .Y(n22) );
  AOI32X1 U108 ( .A0(DQTHR_6_), .A1(n51), .A2(n22), .B0(n50), .B1(DQTHR_7_), 
        .Y(n24) );
  OAI21XL U109 ( .A0(DQTHR_6_), .A1(n51), .B0(n22), .Y(n30) );
  AOI32X1 U110 ( .A0(n26), .A1(n53), .A2(DQTHR_4_), .B0(DQTHR_5_), .B1(n52), 
        .Y(n23) );
  AND2X1 U111 ( .A(DQ[3]), .B(n44), .Y(n25) );
  AOI21X1 U112 ( .A0(DQ[2]), .A1(n43), .B0(n25), .Y(n27) );
  OAI221XL U113 ( .A0(DQTHR_4_), .A1(n53), .B0(n27), .B1(n29), .C0(n26), .Y(
        n32) );
  AOI211X1 U114 ( .A0(DQTHR_1_), .A1(n54), .B0(n29), .C0(n28), .Y(n31) );
  NOR3X1 U115 ( .A(n32), .B(n31), .C(n30), .Y(n38) );
  OAI21XL U116 ( .A0(DQTHR_8_), .A1(n49), .B0(n33), .Y(n35) );
  NOR3BX1 U117 ( .AN(n36), .B(n35), .C(n34), .Y(n37) );
  OAI32X1 U118 ( .A0(n40), .A1(n39), .A2(n38), .B0(n37), .B1(n40), .Y(n41) );
  NOR4BX1 U119 ( .AN(n41), .B(DQTHR_19_), .C(DQTHR_18_), .D(DQTHR_17_), .Y(N3)
         );
  TRANS_0_DW01_add_0 add_62 ( .A(THR2), .B({1'b0, THR2[20:1]}), .CI(1'b0), 
        .SUM({DQTHR_19_, DQTHR_18_, DQTHR_17_, DQTHR_16_, DQTHR_15_, DQTHR_14_, 
        DQTHR_13_, DQTHR_12_, DQTHR_11_, DQTHR_10_, DQTHR_9_, DQTHR_8_, 
        DQTHR_7_, DQTHR_6_, DQTHR_5_, DQTHR_4_, DQTHR_3_, DQTHR_2_, DQTHR_1_, 
        DQTHR_0_, SYNOPSYS_UNCONNECTED__0}) );
  INVX1 U1 ( .A(YL[16]), .Y(n60) );
endmodule


module TON_TRAN_DET_0_test_1 ( A2P, reset, YL, DQ, TDP, TR, clk, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_mode, scan_enable, test_so, 
        test_se );
  input [15:0] A2P;
  input [18:0] YL;
  input [15:0] DQ;
  input reset, clk, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4,
         test_mode, scan_enable, test_se;
  output TDP, TR, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4,
         test_so;
  wire   w_tdr, w_td;
  assign test_so = w_td;

  TONE_0 ton_tran_det_TONE ( .A2P(A2P), .TDP(TDP) );
  TRIGB_0 ton_tran_det_TRIGB ( .TR(TR), .nP(TDP), .nR(w_tdr) );
  DELAY_WIDTH1_0_test_1 ton_tran_det_DELAY ( .x(w_tdr), .reset(reset), .y(w_td), .clk(clk), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(
        1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(YL[18]), .test_se(
        test_se) );
  TRANS_0 ton_tran_det_TRANS ( .TD(w_td), .YL(YL), .DQ(DQ), .TR(TR) );
endmodule


module FUNCTF_0 ( I, RATE, FI );
  input [4:0] I;
  input [1:0] RATE;
  output [2:0] FI;
  wire   n1, FI_1_, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48,
         n49, n50, n51, n52, n53, n54;
  assign FI[1] = FI_1_;

  XOR2XL U2 ( .A(I[1]), .B(I[0]), .Y(n12) );
  NOR2XL U3 ( .A(n1), .B(RATE[1]), .Y(n13) );
  AND2X1 U4 ( .A(RATE[1]), .B(n1), .Y(n47) );
  INVXL U5 ( .A(RATE[0]), .Y(n1) );
  AND2X1 U6 ( .A(RATE[1]), .B(RATE[0]), .Y(n14) );
  INVXL U7 ( .A(I[3]), .Y(n7) );
  INVXL U8 ( .A(I[1]), .Y(n9) );
  XOR2XL U9 ( .A(n9), .B(I[4]), .Y(n36) );
  XNOR2XL U10 ( .A(I[2]), .B(I[4]), .Y(n38) );
  XOR2XL U11 ( .A(n7), .B(I[4]), .Y(n15) );
  NOR3X1 U12 ( .A(n14), .B(n47), .C(n13), .Y(n52) );
  NAND2X1 U13 ( .A(n54), .B(n53), .Y(FI[2]) );
  AOI33X1 U14 ( .A0(n51), .A1(n50), .A2(n8), .B0(n49), .B1(n48), .B2(n47), .Y(
        n54) );
  AOI31X1 U15 ( .A0(n6), .A1(n5), .A2(n52), .B0(n10), .Y(n53) );
  NAND4X1 U16 ( .A(n43), .B(n44), .C(n42), .D(n41), .Y(FI[0]) );
  NAND3X1 U17 ( .A(n51), .B(n50), .C(n13), .Y(n42) );
  AOI22X1 U18 ( .A0(n52), .A1(n40), .B0(n47), .B1(n48), .Y(n41) );
  OAI22X1 U19 ( .A0(n39), .A1(n38), .B0(n6), .B1(n37), .Y(n40) );
  INVX1 U20 ( .A(n46), .Y(FI_1_) );
  AOI221X1 U21 ( .A0(n50), .A1(n8), .B0(n49), .B1(n47), .C0(n3), .Y(n46) );
  INVX1 U22 ( .A(n45), .Y(n3) );
  AOI31X1 U23 ( .A0(n4), .A1(n5), .A2(n52), .B0(n10), .Y(n45) );
  INVX1 U24 ( .A(n43), .Y(n8) );
  INVX1 U25 ( .A(n44), .Y(n10) );
  AOI22X1 U26 ( .A0(n36), .A1(n16), .B0(n15), .B1(n4), .Y(n39) );
  OAI21XL U27 ( .A0(n36), .A1(n16), .B0(n5), .Y(n37) );
  INVX1 U28 ( .A(n15), .Y(n5) );
  XOR2X1 U29 ( .A(n9), .B(n7), .Y(n50) );
  INVX1 U30 ( .A(n36), .Y(n4) );
  INVX1 U31 ( .A(n38), .Y(n6) );
  NAND2X1 U32 ( .A(n14), .B(n12), .Y(n44) );
  NAND2X1 U33 ( .A(n13), .B(n11), .Y(n43) );
  XOR2X1 U34 ( .A(I[3]), .B(I[2]), .Y(n11) );
  XOR2X1 U35 ( .A(I[0]), .B(I[4]), .Y(n16) );
  XOR2X1 U36 ( .A(I[0]), .B(I[2]), .Y(n48) );
  XOR2X1 U37 ( .A(I[1]), .B(I[2]), .Y(n49) );
  XOR2X1 U38 ( .A(I[0]), .B(I[3]), .Y(n51) );
endmodule


module FILTA_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [11:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X2 U1_11 ( .A(A[11]), .B(B[11]), .C(carry[11]), .Y(SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTA_0 ( FI, DMS, DMSP );
  input [2:0] FI;
  input [11:0] DMS;
  output [11:0] DMSP;
  wire   DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_11_,
         DIFSX_0_, N9, N13, N11, N10, N0, n1, n2, n3, n4, n5, n6, n7, n8,
         SYNOPSYS_UNCONNECTED__0;
  wire   [12:10] add_0_root_sub_0_root_sub_64_carry;
  wire   [11:5] sub_1_root_sub_0_root_sub_64_carry;
  assign N0 = DMS[0];

  XNOR2X1 U3 ( .A(N13), .B(add_0_root_sub_0_root_sub_64_carry[12]), .Y(
        DIFSX_11_) );
  ADDFX2 U4 ( .A(N10), .B(FI[1]), .CI(add_0_root_sub_0_root_sub_64_carry[10]), 
        .CO(add_0_root_sub_0_root_sub_64_carry[11]), .S(DIFSX_5_) );
  ADDFX2 U5 ( .A(N11), .B(FI[2]), .CI(add_0_root_sub_0_root_sub_64_carry[11]), 
        .CO(add_0_root_sub_0_root_sub_64_carry[12]), .S(DIFSX_6_) );
  INVX1 U6 ( .A(DMS[5]), .Y(n2) );
  INVX1 U7 ( .A(DMS[7]), .Y(n4) );
  INVX1 U8 ( .A(DMS[8]), .Y(n5) );
  INVX1 U9 ( .A(DMS[9]), .Y(n6) );
  INVX1 U10 ( .A(DMS[10]), .Y(n7) );
  INVX1 U11 ( .A(DMS[6]), .Y(n3) );
  INVX1 U12 ( .A(DMS[11]), .Y(n8) );
  AND2X1 U13 ( .A(N9), .B(FI[0]), .Y(add_0_root_sub_0_root_sub_64_carry[10])
         );
  XOR2X1 U14 ( .A(FI[0]), .B(N9), .Y(DIFSX_4_) );
  AND2X1 U15 ( .A(sub_1_root_sub_0_root_sub_64_carry[11]), .B(n8), .Y(N13) );
  XOR2X1 U16 ( .A(n8), .B(sub_1_root_sub_0_root_sub_64_carry[11]), .Y(N11) );
  AND2X1 U17 ( .A(sub_1_root_sub_0_root_sub_64_carry[10]), .B(n7), .Y(
        sub_1_root_sub_0_root_sub_64_carry[11]) );
  XOR2X1 U18 ( .A(n7), .B(sub_1_root_sub_0_root_sub_64_carry[10]), .Y(N10) );
  AND2X1 U19 ( .A(sub_1_root_sub_0_root_sub_64_carry[9]), .B(n6), .Y(
        sub_1_root_sub_0_root_sub_64_carry[10]) );
  XOR2X1 U20 ( .A(n6), .B(sub_1_root_sub_0_root_sub_64_carry[9]), .Y(N9) );
  AND2X1 U21 ( .A(sub_1_root_sub_0_root_sub_64_carry[8]), .B(n5), .Y(
        sub_1_root_sub_0_root_sub_64_carry[9]) );
  XOR2X1 U22 ( .A(n5), .B(sub_1_root_sub_0_root_sub_64_carry[8]), .Y(DIFSX_3_)
         );
  AND2X1 U23 ( .A(sub_1_root_sub_0_root_sub_64_carry[7]), .B(n4), .Y(
        sub_1_root_sub_0_root_sub_64_carry[8]) );
  XOR2X1 U24 ( .A(n4), .B(sub_1_root_sub_0_root_sub_64_carry[7]), .Y(DIFSX_2_)
         );
  AND2X1 U25 ( .A(sub_1_root_sub_0_root_sub_64_carry[6]), .B(n3), .Y(
        sub_1_root_sub_0_root_sub_64_carry[7]) );
  XOR2X1 U26 ( .A(n3), .B(sub_1_root_sub_0_root_sub_64_carry[6]), .Y(DIFSX_1_)
         );
  AND2X1 U27 ( .A(sub_1_root_sub_0_root_sub_64_carry[5]), .B(n2), .Y(
        sub_1_root_sub_0_root_sub_64_carry[6]) );
  XOR2X1 U28 ( .A(n2), .B(sub_1_root_sub_0_root_sub_64_carry[5]), .Y(DIFSX_0_)
         );
  NOR2X1 U29 ( .A(DMS[4]), .B(DMS[3]), .Y(n1) );
  NOR4BX1 U30 ( .AN(n1), .B(DMS[1]), .C(N0), .D(DMS[2]), .Y(
        sub_1_root_sub_0_root_sub_64_carry[5]) );
  FILTA_0_DW01_add_1 add_80 ( .A({1'b0, DIFSX_11_, DIFSX_11_, DIFSX_11_, 
        DIFSX_11_, DIFSX_11_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, 
        DIFSX_1_, DIFSX_0_}), .B({1'b0, DMS[11:1], N0}), .CI(1'b0), .SUM({
        SYNOPSYS_UNCONNECTED__0, DMSP}) );
endmodule


module DELAY_RESET_STATE0_WIDTH12_0_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [11:0] x;
  output [11:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [11:0] delay0;
  wire   [11:0] delay1;
  wire   [11:0] delay2;
  wire   [11:0] delay3;
  wire   [11:0] delay4;
  wire   [11:0] delay5;
  wire   [11:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U4 ( .A(reset), .Y(n2) );
  INVX1 U5 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[11]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[10]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[7]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[6]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[3]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[4]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[1]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[2]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[11]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(y[0]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[5]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[11]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[11]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[11]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[11]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module FILTB_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [13:0] A;
  input [13:0] B;
  output [13:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [13:2] carry;

  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR3X2 U1_13 ( .A(A[13]), .B(B[13]), .C(carry[13]), .Y(SUM[13]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTB_0 ( FI, DML, DMLP );
  input [2:0] FI;
  input [13:0] DML;
  output [13:0] DMLP;
  wire   DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_13_,
         DIFSX_0_, N15, N13, N12, N11, N0, n1, n2, n3, n4, n5, n6, n7, n8;
  wire   [14:12] add_0_root_sub_0_root_sub_44_carry;
  wire   [13:7] sub_1_root_sub_0_root_sub_44_carry;
  assign N0 = DML[0];

  XNOR2X1 U3 ( .A(N15), .B(add_0_root_sub_0_root_sub_44_carry[14]), .Y(
        DIFSX_13_) );
  ADDFX2 U4 ( .A(N12), .B(FI[1]), .CI(add_0_root_sub_0_root_sub_44_carry[12]), 
        .CO(add_0_root_sub_0_root_sub_44_carry[13]), .S(DIFSX_5_) );
  ADDFX2 U5 ( .A(N13), .B(FI[2]), .CI(add_0_root_sub_0_root_sub_44_carry[13]), 
        .CO(add_0_root_sub_0_root_sub_44_carry[14]), .S(DIFSX_6_) );
  INVX1 U6 ( .A(DML[9]), .Y(n4) );
  INVX1 U7 ( .A(DML[10]), .Y(n5) );
  INVX1 U8 ( .A(DML[7]), .Y(n2) );
  INVX1 U9 ( .A(DML[8]), .Y(n3) );
  INVX1 U10 ( .A(DML[11]), .Y(n6) );
  INVX1 U11 ( .A(DML[12]), .Y(n7) );
  INVX1 U12 ( .A(DML[13]), .Y(n8) );
  AND2X1 U13 ( .A(N11), .B(FI[0]), .Y(add_0_root_sub_0_root_sub_44_carry[12])
         );
  XOR2X1 U14 ( .A(FI[0]), .B(N11), .Y(DIFSX_4_) );
  AND2X1 U15 ( .A(sub_1_root_sub_0_root_sub_44_carry[13]), .B(n8), .Y(N15) );
  XOR2X1 U16 ( .A(n8), .B(sub_1_root_sub_0_root_sub_44_carry[13]), .Y(N13) );
  AND2X1 U17 ( .A(sub_1_root_sub_0_root_sub_44_carry[12]), .B(n7), .Y(
        sub_1_root_sub_0_root_sub_44_carry[13]) );
  XOR2X1 U18 ( .A(n7), .B(sub_1_root_sub_0_root_sub_44_carry[12]), .Y(N12) );
  AND2X1 U19 ( .A(sub_1_root_sub_0_root_sub_44_carry[11]), .B(n6), .Y(
        sub_1_root_sub_0_root_sub_44_carry[12]) );
  XOR2X1 U20 ( .A(n6), .B(sub_1_root_sub_0_root_sub_44_carry[11]), .Y(N11) );
  AND2X1 U21 ( .A(sub_1_root_sub_0_root_sub_44_carry[10]), .B(n5), .Y(
        sub_1_root_sub_0_root_sub_44_carry[11]) );
  XOR2X1 U22 ( .A(n5), .B(sub_1_root_sub_0_root_sub_44_carry[10]), .Y(DIFSX_3_) );
  AND2X1 U23 ( .A(sub_1_root_sub_0_root_sub_44_carry[9]), .B(n4), .Y(
        sub_1_root_sub_0_root_sub_44_carry[10]) );
  XOR2X1 U24 ( .A(n4), .B(sub_1_root_sub_0_root_sub_44_carry[9]), .Y(DIFSX_2_)
         );
  AND2X1 U25 ( .A(sub_1_root_sub_0_root_sub_44_carry[8]), .B(n3), .Y(
        sub_1_root_sub_0_root_sub_44_carry[9]) );
  XOR2X1 U26 ( .A(n3), .B(sub_1_root_sub_0_root_sub_44_carry[8]), .Y(DIFSX_1_)
         );
  AND2X1 U27 ( .A(sub_1_root_sub_0_root_sub_44_carry[7]), .B(n2), .Y(
        sub_1_root_sub_0_root_sub_44_carry[8]) );
  XOR2X1 U28 ( .A(n2), .B(sub_1_root_sub_0_root_sub_44_carry[7]), .Y(DIFSX_0_)
         );
  NOR4X1 U29 ( .A(DML[6]), .B(DML[5]), .C(DML[4]), .D(DML[3]), .Y(n1) );
  NOR4BX1 U30 ( .AN(n1), .B(DML[2]), .C(N0), .D(DML[1]), .Y(
        sub_1_root_sub_0_root_sub_44_carry[7]) );
  FILTB_0_DW01_add_1 add_60 ( .A({DIFSX_13_, DIFSX_13_, DIFSX_13_, DIFSX_13_, 
        DIFSX_13_, DIFSX_13_, DIFSX_13_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .B({DML[13:1], N0}), .CI(
        1'b0), .SUM(DMLP) );
endmodule


module DELAY_RESET_STATE0_WIDTH14_0_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [13:0] x;
  output [13:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [13:0] delay0;
  wire   [13:0] delay1;
  wire   [13:0] delay2;
  wire   [13:0] delay3;
  wire   [13:0] delay4;
  wire   [13:0] delay5;
  wire   [13:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n3) );
  INVX1 U5 ( .A(reset), .Y(n2) );
  INVX1 U6 ( .A(reset), .Y(n1) );
  SDFFRHQXL delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n1), .Q(y[13]) );
  SDFFRHQXL delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(y[12]) );
  SDFFRHQXL delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n3), .Q(y[11]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[2]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[4]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[5]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[6]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[10]) );
  SDFFRHQXL delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[9]) );
  SDFFRHQXL delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[8]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[7]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n2), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[0]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n1), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n2), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n3), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[13]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[13]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[13]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[13]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[0]) );
endmodule


module SUBTC_0_DW01_sub_1 ( A, B, CI, DIFF, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] DIFF;
  input CI;
  output CO;
  wire   n1, DIFF_14_, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16;
  wire   [14:3] carry;
  assign DIFF[0] = B[0];
  assign DIFF[14] = DIFF_14_;

  ADDFX2 U2_2 ( .A(A[2]), .B(n14), .CI(n1), .CO(carry[3]), .S(DIFF[2]) );
  ADDFX2 U2_3 ( .A(A[3]), .B(n13), .CI(carry[3]), .CO(carry[4]), .S(DIFF[3])
         );
  ADDFX2 U2_5 ( .A(A[5]), .B(n11), .CI(carry[5]), .CO(carry[6]), .S(DIFF[5])
         );
  ADDFX2 U2_4 ( .A(A[4]), .B(n12), .CI(carry[4]), .CO(carry[5]), .S(DIFF[4])
         );
  ADDFX2 U2_6 ( .A(A[6]), .B(n10), .CI(carry[6]), .CO(carry[7]), .S(DIFF[6])
         );
  ADDFX2 U2_12 ( .A(A[12]), .B(n4), .CI(carry[12]), .CO(carry[13]), .S(
        DIFF[12]) );
  ADDFX2 U2_8 ( .A(A[8]), .B(n8), .CI(carry[8]), .CO(carry[9]), .S(DIFF[8]) );
  ADDFX2 U2_9 ( .A(A[9]), .B(n7), .CI(carry[9]), .CO(carry[10]), .S(DIFF[9])
         );
  ADDFX2 U2_11 ( .A(A[11]), .B(n5), .CI(carry[11]), .CO(carry[12]), .S(
        DIFF[11]) );
  ADDFX2 U2_10 ( .A(A[10]), .B(n6), .CI(carry[10]), .CO(carry[11]), .S(
        DIFF[10]) );
  ADDFX2 U2_7 ( .A(A[7]), .B(n9), .CI(carry[7]), .CO(carry[8]), .S(DIFF[7]) );
  ADDFX2 U2_13 ( .A(A[13]), .B(n3), .CI(carry[13]), .CO(carry[14]), .S(
        DIFF[13]) );
  NOR2X1 U1 ( .A(B[1]), .B(B[0]), .Y(n1) );
  INVX1 U2 ( .A(carry[14]), .Y(DIFF_14_) );
  XOR2X1 U3 ( .A(n15), .B(n16), .Y(DIFF[1]) );
  INVX1 U4 ( .A(B[13]), .Y(n3) );
  INVX1 U5 ( .A(B[7]), .Y(n9) );
  INVX1 U6 ( .A(B[10]), .Y(n6) );
  INVX1 U7 ( .A(B[11]), .Y(n5) );
  INVX1 U8 ( .A(B[9]), .Y(n7) );
  INVX1 U9 ( .A(B[8]), .Y(n8) );
  INVX1 U10 ( .A(B[12]), .Y(n4) );
  INVX1 U11 ( .A(B[6]), .Y(n10) );
  INVX1 U12 ( .A(B[4]), .Y(n12) );
  INVX1 U13 ( .A(B[5]), .Y(n11) );
  INVX1 U14 ( .A(B[0]), .Y(n16) );
  INVX1 U15 ( .A(B[1]), .Y(n15) );
  INVX1 U16 ( .A(B[3]), .Y(n13) );
  INVX1 U17 ( .A(B[2]), .Y(n14) );
endmodule


module SUBTC_0 ( DMSP, DMLP, TDP, Y, AX );
  input [11:0] DMSP;
  input [13:0] DMLP;
  input [12:0] Y;
  input TDP;
  output AX;
  wire   N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         N33, N34, N9, N8, N7, N6, N5, N4, N15, N14, N13, N12, N11, N10,
         lt_64_A_10_, lt_64_A_7_, lt_64_A_6_, lt_64_A_5_, lt_64_A_4_,
         lt_64_A_3_, lt_64_A_1_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,
         n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n56, n57, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, SYNOPSYS_UNCONNECTED__0;
  wire   [14:1] DIF;
  wire   [12:2] sub_61_carry;
  assign N9 = DMSP[5];
  assign N8 = DMSP[4];
  assign N7 = DMSP[3];
  assign N6 = DMSP[2];
  assign N5 = DMSP[1];
  assign N4 = DMSP[0];
  assign N15 = DMSP[11];
  assign N14 = DMSP[10];
  assign N13 = DMSP[9];
  assign N12 = DMSP[8];
  assign N11 = DMSP[7];
  assign N10 = DMSP[6];

  NAND2X1 U3 ( .A(DMLP[8]), .B(n72), .Y(n23) );
  OAI211X1 U4 ( .A0(n31), .A1(n56), .B0(n67), .C0(n18), .Y(n35) );
  NOR2X1 U5 ( .A(N19), .B(DIF[1]), .Y(sub_61_carry[2]) );
  OAI21XL U6 ( .A0(n27), .A1(n20), .B0(n21), .Y(n34) );
  NAND3BX1 U7 ( .AN(TDP), .B(N33), .C(N34), .Y(AX) );
  INVX1 U8 ( .A(DIF[14]), .Y(n57) );
  INVX1 U9 ( .A(DIF[1]), .Y(n3) );
  INVX1 U10 ( .A(n15), .Y(N33) );
  AOI22X1 U11 ( .A0(DIF[13]), .A1(n57), .B0(N32), .B1(DIF[14]), .Y(n67) );
  AOI22X1 U12 ( .A0(DIF[9]), .A1(n57), .B0(N28), .B1(DIF[14]), .Y(n76) );
  AOI22X1 U13 ( .A0(DIF[11]), .A1(n57), .B0(N30), .B1(DIF[14]), .Y(n65) );
  AOI22X1 U14 ( .A0(DIF[12]), .A1(n57), .B0(N31), .B1(DIF[14]), .Y(n66) );
  AOI22X1 U15 ( .A0(DIF[8]), .A1(n57), .B0(N27), .B1(DIF[14]), .Y(n75) );
  AOI22X1 U16 ( .A0(DIF[2]), .A1(n57), .B0(N21), .B1(DIF[14]), .Y(n69) );
  INVX1 U17 ( .A(n64), .Y(lt_64_A_10_) );
  AOI22X1 U18 ( .A0(DIF[10]), .A1(n57), .B0(N29), .B1(DIF[14]), .Y(n64) );
  INVX1 U19 ( .A(n71), .Y(lt_64_A_4_) );
  AOI22X1 U20 ( .A0(DIF[4]), .A1(n57), .B0(N23), .B1(DIF[14]), .Y(n71) );
  INVX1 U21 ( .A(n73), .Y(lt_64_A_6_) );
  AOI22X1 U22 ( .A0(DIF[6]), .A1(n57), .B0(N25), .B1(DIF[14]), .Y(n73) );
  XOR2X1 U23 ( .A(DIF[13]), .B(n1), .Y(N32) );
  NAND2X1 U24 ( .A(sub_61_carry[12]), .B(n14), .Y(n1) );
  INVX1 U25 ( .A(n70), .Y(lt_64_A_3_) );
  AOI22X1 U26 ( .A0(DIF[3]), .A1(n57), .B0(N22), .B1(DIF[14]), .Y(n70) );
  INVX1 U27 ( .A(DIF[9]), .Y(n11) );
  INVX1 U28 ( .A(DIF[7]), .Y(n9) );
  INVX1 U29 ( .A(DIF[10]), .Y(n12) );
  INVX1 U30 ( .A(DIF[8]), .Y(n10) );
  INVX1 U31 ( .A(DIF[11]), .Y(n13) );
  INVX1 U32 ( .A(DIF[12]), .Y(n14) );
  INVX1 U33 ( .A(n68), .Y(lt_64_A_1_) );
  AOI22X1 U34 ( .A0(DIF[1]), .A1(n57), .B0(N20), .B1(DIF[14]), .Y(n68) );
  INVX1 U35 ( .A(n72), .Y(lt_64_A_5_) );
  AOI22X1 U36 ( .A0(DIF[5]), .A1(n57), .B0(N24), .B1(DIF[14]), .Y(n72) );
  INVX1 U37 ( .A(n74), .Y(lt_64_A_7_) );
  AOI22X1 U38 ( .A0(DIF[7]), .A1(n57), .B0(N26), .B1(DIF[14]), .Y(n74) );
  NAND2X1 U39 ( .A(n66), .B(n65), .Y(n16) );
  INVX1 U40 ( .A(DIF[4]), .Y(n6) );
  INVX1 U41 ( .A(DIF[5]), .Y(n7) );
  INVX1 U42 ( .A(DIF[6]), .Y(n8) );
  INVX1 U43 ( .A(DIF[3]), .Y(n5) );
  INVX1 U44 ( .A(DIF[2]), .Y(n4) );
  INVX1 U45 ( .A(DMLP[10]), .Y(n40) );
  AOI22X1 U46 ( .A0(N19), .A1(n57), .B0(N19), .B1(DIF[14]), .Y(n63) );
  INVX1 U47 ( .A(n17), .Y(n56) );
  INVX1 U48 ( .A(DMLP[13]), .Y(n41) );
  INVX1 U49 ( .A(DMLP[7]), .Y(n37) );
  INVX1 U50 ( .A(DMLP[9]), .Y(n39) );
  INVX1 U51 ( .A(N19), .Y(n2) );
  INVX1 U52 ( .A(DMLP[8]), .Y(n38) );
  INVX1 U53 ( .A(DMLP[4]), .Y(n36) );
  XOR2X1 U54 ( .A(n14), .B(sub_61_carry[12]), .Y(N31) );
  AND2X1 U55 ( .A(sub_61_carry[11]), .B(n13), .Y(sub_61_carry[12]) );
  XOR2X1 U56 ( .A(n13), .B(sub_61_carry[11]), .Y(N30) );
  AND2X1 U57 ( .A(sub_61_carry[10]), .B(n12), .Y(sub_61_carry[11]) );
  XOR2X1 U58 ( .A(n12), .B(sub_61_carry[10]), .Y(N29) );
  AND2X1 U59 ( .A(sub_61_carry[9]), .B(n11), .Y(sub_61_carry[10]) );
  XOR2X1 U60 ( .A(n11), .B(sub_61_carry[9]), .Y(N28) );
  AND2X1 U61 ( .A(sub_61_carry[8]), .B(n10), .Y(sub_61_carry[9]) );
  XOR2X1 U62 ( .A(n10), .B(sub_61_carry[8]), .Y(N27) );
  AND2X1 U63 ( .A(sub_61_carry[7]), .B(n9), .Y(sub_61_carry[8]) );
  XOR2X1 U64 ( .A(n9), .B(sub_61_carry[7]), .Y(N26) );
  AND2X1 U65 ( .A(sub_61_carry[6]), .B(n8), .Y(sub_61_carry[7]) );
  XOR2X1 U66 ( .A(n8), .B(sub_61_carry[6]), .Y(N25) );
  AND2X1 U67 ( .A(sub_61_carry[5]), .B(n7), .Y(sub_61_carry[6]) );
  XOR2X1 U68 ( .A(n7), .B(sub_61_carry[5]), .Y(N24) );
  AND2X1 U69 ( .A(sub_61_carry[4]), .B(n6), .Y(sub_61_carry[5]) );
  XOR2X1 U70 ( .A(n6), .B(sub_61_carry[4]), .Y(N23) );
  AND2X1 U71 ( .A(sub_61_carry[3]), .B(n5), .Y(sub_61_carry[4]) );
  XOR2X1 U72 ( .A(n5), .B(sub_61_carry[3]), .Y(N22) );
  AND2X1 U73 ( .A(sub_61_carry[2]), .B(n4), .Y(sub_61_carry[3]) );
  XOR2X1 U74 ( .A(n4), .B(sub_61_carry[2]), .Y(N21) );
  XOR2X1 U75 ( .A(n3), .B(n2), .Y(N20) );
  AOI211X1 U76 ( .A0(Y[9]), .A1(Y[10]), .B0(Y[12]), .C0(Y[11]), .Y(n15) );
  NOR2X1 U77 ( .A(n41), .B(lt_64_A_10_), .Y(n31) );
  AOI21X1 U78 ( .A0(n41), .A1(lt_64_A_10_), .B0(n16), .Y(n18) );
  AND2X1 U79 ( .A(DMLP[12]), .B(n76), .Y(n30) );
  OAI32X1 U80 ( .A0(n30), .A1(DMLP[11]), .A2(n75), .B0(n76), .B1(DMLP[12]), 
        .Y(n17) );
  NAND2BX1 U81 ( .AN(lt_64_A_7_), .B(DMLP[10]), .Y(n19) );
  AOI32X1 U82 ( .A0(lt_64_A_6_), .A1(n39), .A2(n19), .B0(n40), .B1(lt_64_A_7_), 
        .Y(n21) );
  OAI21XL U83 ( .A0(lt_64_A_6_), .A1(n39), .B0(n19), .Y(n27) );
  AOI32X1 U84 ( .A0(n23), .A1(n37), .A2(lt_64_A_4_), .B0(lt_64_A_5_), .B1(n38), 
        .Y(n20) );
  NOR2BX1 U85 ( .AN(DMLP[6]), .B(lt_64_A_3_), .Y(n22) );
  AOI21X1 U86 ( .A0(DMLP[5]), .A1(n69), .B0(n22), .Y(n24) );
  OAI32X1 U87 ( .A0(n69), .A1(DMLP[5]), .A2(n22), .B0(DMLP[6]), .B1(n70), .Y(
        n26) );
  OAI221XL U88 ( .A0(lt_64_A_4_), .A1(n37), .B0(n24), .B1(n26), .C0(n23), .Y(
        n29) );
  AOI2BB2X1 U89 ( .B0(DMLP[3]), .B1(n63), .A0N(n36), .A1N(lt_64_A_1_), .Y(n25)
         );
  AOI211X1 U90 ( .A0(lt_64_A_1_), .A1(n36), .B0(n26), .C0(n25), .Y(n28) );
  NOR3X1 U91 ( .A(n29), .B(n28), .C(n27), .Y(n33) );
  AOI211X1 U92 ( .A0(DMLP[11]), .A1(n75), .B0(n31), .C0(n30), .Y(n32) );
  OAI32X1 U93 ( .A0(n35), .A1(n34), .A2(n33), .B0(n32), .B1(n35), .Y(N34) );
  SUBTC_0_DW01_sub_1 sub_0_root_sub_0_root_sub_59 ( .A({1'b1, 1'b0, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 1'b0, 1'b0}), .B({1'b0, 
        1'b0, DMLP}), .CI(1'b0), .DIFF({SYNOPSYS_UNCONNECTED__0, DIF, N19}) );
endmodule


module FILTC_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [9:0] A;
  input [9:0] B;
  output [9:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [9:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  XOR3X2 U1_9 ( .A(A[9]), .B(B[9]), .C(carry[9]), .Y(SUM[9]) );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTC_0 ( AX, AP, APP );
  input [9:0] AP;
  output [9:0] APP;
  input AX;
  wire   DIFSX_9_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_,
         N9, N11, N0, n1, n2, n3, n4, n5, n6, n7;
  wire   [9:4] sub_1_root_sub_0_root_sub_68_carry;
  assign N0 = AP[0];

  NAND2XL U3 ( .A(N9), .B(AX), .Y(n1) );
  NOR4XL U4 ( .A(AP[3]), .B(AP[2]), .C(AP[1]), .D(N0), .Y(
        sub_1_root_sub_0_root_sub_68_carry[4]) );
  INVXL U5 ( .A(AP[7]), .Y(n5) );
  INVXL U6 ( .A(AP[4]), .Y(n2) );
  INVXL U7 ( .A(AP[5]), .Y(n3) );
  INVXL U8 ( .A(AP[6]), .Y(n4) );
  XOR2X1 U9 ( .A(N11), .B(n1), .Y(DIFSX_9_) );
  INVXL U11 ( .A(AP[9]), .Y(n7) );
  XOR2X1 U12 ( .A(AX), .B(N9), .Y(DIFSX_5_) );
  AND2X1 U13 ( .A(n7), .B(sub_1_root_sub_0_root_sub_68_carry[9]), .Y(N11) );
  XOR2X1 U14 ( .A(n7), .B(sub_1_root_sub_0_root_sub_68_carry[9]), .Y(N9) );
  AND2X1 U15 ( .A(sub_1_root_sub_0_root_sub_68_carry[8]), .B(n6), .Y(
        sub_1_root_sub_0_root_sub_68_carry[9]) );
  XOR2X1 U16 ( .A(n6), .B(sub_1_root_sub_0_root_sub_68_carry[8]), .Y(DIFSX_4_)
         );
  AND2X1 U17 ( .A(sub_1_root_sub_0_root_sub_68_carry[7]), .B(n5), .Y(
        sub_1_root_sub_0_root_sub_68_carry[8]) );
  XOR2X1 U18 ( .A(n5), .B(sub_1_root_sub_0_root_sub_68_carry[7]), .Y(DIFSX_3_)
         );
  AND2X1 U19 ( .A(sub_1_root_sub_0_root_sub_68_carry[6]), .B(n4), .Y(
        sub_1_root_sub_0_root_sub_68_carry[7]) );
  XOR2X1 U20 ( .A(n4), .B(sub_1_root_sub_0_root_sub_68_carry[6]), .Y(DIFSX_2_)
         );
  AND2X1 U21 ( .A(sub_1_root_sub_0_root_sub_68_carry[5]), .B(n3), .Y(
        sub_1_root_sub_0_root_sub_68_carry[6]) );
  XOR2X1 U22 ( .A(n3), .B(sub_1_root_sub_0_root_sub_68_carry[5]), .Y(DIFSX_1_)
         );
  AND2X1 U23 ( .A(sub_1_root_sub_0_root_sub_68_carry[4]), .B(n2), .Y(
        sub_1_root_sub_0_root_sub_68_carry[5]) );
  XOR2X1 U24 ( .A(n2), .B(sub_1_root_sub_0_root_sub_68_carry[4]), .Y(DIFSX_0_)
         );
  INVX1 U1 ( .A(AP[8]), .Y(n6) );
  FILTC_0_DW01_add_1 add_88 ( .A({DIFSX_9_, DIFSX_9_, DIFSX_9_, DIFSX_9_, 
        DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .B({
        AP[9:1], N0}), .CI(1'b0), .SUM(APP) );
endmodule


module TRIGA_0 ( TR, APP, APR );
  input [9:0] APP;
  output [9:0] APR;
  input TR;


  NOR2BX1 U3 ( .AN(APP[5]), .B(TR), .Y(APR[5]) );
  NOR2BX1 U4 ( .AN(APP[6]), .B(TR), .Y(APR[6]) );
  NOR2BX1 U5 ( .AN(APP[7]), .B(TR), .Y(APR[7]) );
  OR2X2 U6 ( .A(TR), .B(APP[8]), .Y(APR[8]) );
  NOR2BX1 U7 ( .AN(APP[1]), .B(TR), .Y(APR[1]) );
  NOR2BX1 U8 ( .AN(APP[2]), .B(TR), .Y(APR[2]) );
  NOR2BX1 U9 ( .AN(APP[3]), .B(TR), .Y(APR[3]) );
  NOR2BX1 U10 ( .AN(APP[4]), .B(TR), .Y(APR[4]) );
  NOR2BX1 U11 ( .AN(APP[9]), .B(TR), .Y(APR[9]) );
  NOR2BX1 U12 ( .AN(APP[0]), .B(TR), .Y(APR[0]) );
endmodule


module LIMA_0 ( AP, AL );
  input [9:0] AP;
  output [6:0] AL;
  wire   AP_8_, AL_5_, AL_4_, AL_3_, AL_2_, AL_1_, AL_0_, n1, n2, n3, n4;
  assign AL[6] = AP_8_;
  assign AP_8_ = AP[8];
  assign AL[5] = AL_5_;
  assign AL[4] = AL_4_;
  assign AL[3] = AL_3_;
  assign AL[2] = AL_2_;
  assign AL[1] = AL_1_;
  assign AL[0] = AL_0_;

  AND2X2 U3 ( .A(n3), .B(AP[5]), .Y(AL_3_) );
  AND2X2 U4 ( .A(n3), .B(AP[2]), .Y(AL_0_) );
  AND2X2 U5 ( .A(n3), .B(AP[6]), .Y(AL_4_) );
  AND2X2 U6 ( .A(n3), .B(AP[7]), .Y(AL_5_) );
  INVX1 U7 ( .A(n1), .Y(AL_2_) );
  NAND2BX1 U9 ( .AN(n4), .B(AP[4]), .Y(n1) );
  NAND2BX1 U10 ( .AN(n4), .B(AP[3]), .Y(n2) );
  CLKINVX4 U1 ( .A(n2), .Y(AL_1_) );
  NAND2BX2 U2 ( .AN(AP[9]), .B(AP_8_), .Y(n3) );
  INVX1 U8 ( .A(n3), .Y(n4) );
endmodule


module DELAY_RESET_STATE0_WIDTH10_0_test_1 ( x, reset, y, clk, scan_enable, 
        scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [9:0] x;
  output [9:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3;
  wire   [9:0] delay0;
  wire   [9:0] delay1;
  wire   [9:0] delay2;
  wire   [9:0] delay3;
  wire   [9:0] delay4;
  wire   [9:0] delay5;
  wire   [9:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n2) );
  INVX1 U4 ( .A(reset), .Y(n1) );
  INVX1 U5 ( .A(reset), .Y(n3) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[9]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(y[0]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[3]) );
  SDFFRHQXL delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[6]) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[4]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(delay0[1]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n1), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n2), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[9]), .SE(test_se), .CK(
        clk), .RN(n3), .Q(delay6[0]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(delay0[8]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[5]) );
  SDFFRHQXL delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[7]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n2), .Q(y[2]) );
  SDFFRHQX2 delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n3), .Q(y[9]) );
  SDFFRHQX2 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n1), .Q(y[8]) );
endmodule


module ADAP_SPED_CTL_0_test_1 ( I, RATE, TDP, Y, TR, reset, CLK, AL, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_so, test_se );
  input [4:0] I;
  input [1:0] RATE;
  input [12:0] Y;
  output [6:0] AL;
  input TDP, TR, reset, CLK, scan_enable, scan_in0, scan_in1, scan_in2,
         scan_in3, scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so;
  wire   AX;
  wire   [2:0] FI;
  wire   [11:0] DMS;
  wire   [11:0] DMSP;
  wire   [13:0] DML;
  wire   [13:0] DMLP;
  wire   [9:0] AP;
  wire   [9:0] APP;
  wire   [9:0] APR;
  assign test_so = DMS[11];

  FUNCTF_0 func ( .I(I), .RATE(RATE), .FI(FI) );
  FILTA_0 filt ( .FI(FI), .DMS(DMS), .DMSP(DMSP) );
  DELAY_RESET_STATE0_WIDTH12_0_test_1 del ( .x(DMSP), .reset(reset), .y(DMS), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(AP[9]), 
        .test_se(test_se) );
  FILTB_0 filt_b ( .FI(FI), .DML(DML), .DMLP(DMLP) );
  DELAY_RESET_STATE0_WIDTH14_0_test_1 del2 ( .x(DMLP), .reset(reset), .y(DML), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), 
        .test_se(test_se) );
  SUBTC_0 sub1 ( .DMSP(DMSP), .DMLP(DMLP), .TDP(TDP), .Y(Y), .AX(AX) );
  FILTC_0 filt_c ( .AX(AX), .AP(AP), .APP(APP) );
  TRIGA_0 trig ( .TR(TR), .APP(APP), .APR(APR) );
  LIMA_0 lim ( .AP(AP), .AL(AL) );
  DELAY_RESET_STATE0_WIDTH10_0_test_1 del3 ( .x(APR), .reset(reset), .y(AP), 
        .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(DML[13]), 
        .test_se(test_se) );
endmodule


module FUNCTW_0 ( I, RATE, WI );
  input [4:0] I;
  input [1:0] RATE;
  output [11:0] WI;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n18, n19, n20, n21, n22, n23, n24, n25, n26, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99,
         n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134;

  AND2X2 U38 ( .A(n82), .B(n19), .Y(n101) );
  NOR2XL U3 ( .A(n1), .B(RATE[0]), .Y(n83) );
  NAND2XL U4 ( .A(RATE[0]), .B(RATE[1]), .Y(n122) );
  NAND2XL U5 ( .A(RATE[0]), .B(n1), .Y(n111) );
  INVXL U6 ( .A(RATE[1]), .Y(n1) );
  XNOR2XL U7 ( .A(I[2]), .B(I[4]), .Y(n132) );
  XOR2XL U8 ( .A(I[2]), .B(I[3]), .Y(n89) );
  XOR2XL U9 ( .A(n16), .B(I[3]), .Y(n82) );
  XOR2XL U10 ( .A(n16), .B(I[4]), .Y(n21) );
  INVXL U11 ( .A(I[1]), .Y(n16) );
  INVX1 U12 ( .A(n104), .Y(n18) );
  NOR3X1 U13 ( .A(n83), .B(n19), .C(n20), .Y(n104) );
  INVX1 U14 ( .A(n111), .Y(n19) );
  INVX1 U15 ( .A(n122), .Y(n20) );
  INVX1 U16 ( .A(n128), .Y(n2) );
  INVX1 U17 ( .A(WI[11]), .Y(n11) );
  NAND3X1 U18 ( .A(n134), .B(n11), .C(n133), .Y(WI[9]) );
  NAND3X1 U19 ( .A(n4), .B(n6), .C(n9), .Y(n133) );
  OAI21XL U20 ( .A0(n13), .A1(n126), .B0(n11), .Y(WI[10]) );
  NAND4X1 U21 ( .A(n87), .B(n115), .C(n86), .D(n85), .Y(WI[1]) );
  NAND4BXL U22 ( .AN(n100), .B(n119), .C(n97), .D(n96), .Y(WI[3]) );
  AOI31X1 U23 ( .A0(n14), .A1(n13), .A2(n117), .B0(n15), .Y(n97) );
  NAND3X1 U24 ( .A(n103), .B(n110), .C(n102), .Y(WI[4]) );
  NAND4X1 U26 ( .A(n109), .B(n112), .C(n108), .D(n107), .Y(WI[5]) );
  OAI211X1 U27 ( .A0(n7), .A1(n105), .B0(n6), .C0(n104), .Y(n108) );
  OAI31X1 U28 ( .A0(n8), .A1(n6), .A2(n4), .B0(n114), .Y(n91) );
  INVX1 U29 ( .A(n127), .Y(n9) );
  AOI211X1 U30 ( .A0(n2), .A1(n9), .B0(n95), .C0(n125), .Y(n96) );
  OAI32X1 U31 ( .A0(n7), .A1(n18), .A2(n6), .B0(n2), .B1(n8), .Y(n95) );
  NAND3X1 U32 ( .A(n88), .B(n6), .C(n98), .Y(n86) );
  INVX1 U33 ( .A(n131), .Y(n5) );
  INVX1 U34 ( .A(n88), .Y(n8) );
  AOI221X1 U35 ( .A0(n5), .A1(n7), .B0(n19), .B1(n13), .C0(n106), .Y(n107) );
  NAND2X1 U36 ( .A(n7), .B(n4), .Y(n128) );
  NAND2X1 U37 ( .A(n88), .B(n2), .Y(n112) );
  NOR3X1 U39 ( .A(n128), .B(n127), .C(n6), .Y(n129) );
  NAND2X1 U40 ( .A(n122), .B(n126), .Y(n106) );
  AOI21X1 U41 ( .A0(n13), .A1(n101), .B0(n15), .Y(n110) );
  AOI22X1 U42 ( .A0(n98), .A1(n104), .B0(n9), .B1(n7), .Y(n103) );
  NAND2X1 U43 ( .A(n122), .B(n121), .Y(n123) );
  INVX1 U44 ( .A(n109), .Y(n15) );
  XOR2X1 U45 ( .A(n4), .B(n6), .Y(n81) );
  NAND2X1 U47 ( .A(n12), .B(n119), .Y(WI[11]) );
  INVX1 U48 ( .A(n90), .Y(n12) );
  OAI211X1 U49 ( .A0(n132), .A1(n131), .B0(n12), .C0(n130), .Y(WI[8]) );
  AOI211X1 U50 ( .A0(n10), .A1(n13), .B0(n20), .C0(n129), .Y(n130) );
  INVX1 U51 ( .A(n126), .Y(n10) );
  NAND4X1 U52 ( .A(n112), .B(n121), .C(n99), .D(n92), .Y(WI[2]) );
  AOI211X1 U53 ( .A0(n94), .A1(n5), .B0(n91), .C0(n90), .Y(n92) );
  NAND4BXL U54 ( .AN(n120), .B(n119), .C(n134), .D(n118), .Y(WI[6]) );
  OAI221XL U55 ( .A0(n112), .A1(n132), .B0(n111), .B1(n14), .C0(n110), .Y(n120) );
  NAND3BX1 U56 ( .AN(n125), .B(n12), .C(n124), .Y(WI[7]) );
  AOI31X1 U57 ( .A0(n9), .A1(n128), .A2(n132), .B0(n123), .Y(n124) );
  NAND4X1 U58 ( .A(n93), .B(n99), .C(n23), .D(n22), .Y(WI[0]) );
  NAND3X1 U59 ( .A(n81), .B(n7), .C(n88), .Y(n23) );
  AOI222X1 U60 ( .A0(n5), .A1(n132), .B0(n117), .B1(n13), .C0(n98), .C1(n9), 
        .Y(n22) );
  NAND2X1 U61 ( .A(n104), .B(n26), .Y(n127) );
  AOI211X1 U62 ( .A0(n101), .A1(n116), .B0(n91), .C0(n106), .Y(n85) );
  NOR2X1 U63 ( .A(n18), .B(n26), .Y(n88) );
  NAND3X1 U64 ( .A(n9), .B(n81), .C(n94), .Y(n115) );
  NAND2X1 U65 ( .A(n21), .B(n9), .Y(n131) );
  OAI31X1 U66 ( .A0(n127), .A1(n132), .A2(n94), .B0(n93), .Y(n125) );
  INVX1 U67 ( .A(n94), .Y(n7) );
  INVX1 U68 ( .A(n132), .Y(n6) );
  INVX1 U69 ( .A(n116), .Y(n13) );
  NOR2X1 U70 ( .A(n111), .B(n82), .Y(n117) );
  NAND2X1 U71 ( .A(n117), .B(n89), .Y(n126) );
  NOR2X1 U72 ( .A(n7), .B(n21), .Y(n98) );
  NAND2X1 U73 ( .A(n20), .B(n25), .Y(n99) );
  NAND3X1 U74 ( .A(n116), .B(n89), .C(n101), .Y(n121) );
  NAND3BX1 U75 ( .AN(n113), .B(n84), .C(n83), .Y(n109) );
  INVX1 U76 ( .A(n21), .Y(n4) );
  NAND3X1 U77 ( .A(n83), .B(n113), .C(n84), .Y(n93) );
  NAND2X1 U78 ( .A(n109), .B(n24), .Y(n90) );
  NAND4X1 U79 ( .A(n14), .B(n19), .C(n82), .D(n13), .Y(n24) );
  NAND4X1 U80 ( .A(n132), .B(n104), .C(n7), .D(n105), .Y(n87) );
  NAND2X1 U81 ( .A(n4), .B(n26), .Y(n105) );
  INVX1 U82 ( .A(n89), .Y(n14) );
  NAND2BX1 U83 ( .AN(n84), .B(n83), .Y(n114) );
  NOR2X1 U84 ( .A(n113), .B(n114), .Y(n100) );
  OR2X2 U85 ( .A(n25), .B(n122), .Y(n119) );
  AOI21X1 U86 ( .A0(n117), .A1(n116), .B0(n3), .Y(n118) );
  INVX1 U87 ( .A(n115), .Y(n3) );
  NAND2BX1 U88 ( .AN(n114), .B(n113), .Y(n134) );
  XOR2X1 U89 ( .A(I[0]), .B(I[3]), .Y(n116) );
  XOR2X1 U90 ( .A(I[1]), .B(I[2]), .Y(n113) );
  XNOR2X1 U91 ( .A(I[0]), .B(I[4]), .Y(n94) );
  XNOR2X1 U93 ( .A(I[0]), .B(I[2]), .Y(n84) );
  XOR2X1 U94 ( .A(I[0]), .B(I[1]), .Y(n25) );
  XOR2XL U1 ( .A(I[3]), .B(I[4]), .Y(n26) );
  AOI221X1 U2 ( .A0(n20), .A1(n25), .B0(n14), .B1(n101), .C0(n100), .Y(n102)
         );
endmodule


module FILTD_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [12:2] carry;

  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X2 U1_12 ( .A(A[12]), .B(B[12]), .C(carry[12]), .Y(SUM[12]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTD_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [17:0] A;
  input [17:0] B;
  output [17:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [16:7] carry;

  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(n1), .CO(carry[7]), .S(SUM[6]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  XOR3X2 U1_16 ( .A(A[16]), .B(B[16]), .C(carry[16]), .Y(SUM[16]) );
  AND2X2 U1 ( .A(B[5]), .B(A[5]), .Y(n1) );
  XOR2X1 U2 ( .A(B[5]), .B(A[5]), .Y(SUM[5]) );
endmodule


module FILTD_0 ( WI, Y, YUT );
  input [11:0] WI;
  input [12:0] Y;
  output [12:0] YUT;
  wire   DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_,
         DIFSX_2_, DIFSX_1_, DIFSX_12_, DIFSX_10_, DIFSX_0_, N9, N8, N7, N6,
         N5, N17, N12, N11, N10, N0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3,
         SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5;
  wire   [12:5] sub_43_carry;
  assign N0 = Y[0];

  CLKINVXL U3 ( .A(Y[7]), .Y(n5) );
  INVXL U4 ( .A(Y[5]), .Y(n3) );
  NAND2X1 U5 ( .A(sub_43_carry[12]), .B(n10), .Y(n1) );
  INVX1 U6 ( .A(n1), .Y(N17) );
  INVXL U7 ( .A(Y[10]), .Y(n8) );
  INVXL U8 ( .A(Y[11]), .Y(n9) );
  INVXL U9 ( .A(Y[8]), .Y(n6) );
  INVXL U10 ( .A(Y[9]), .Y(n7) );
  INVXL U11 ( .A(Y[6]), .Y(n4) );
  INVXL U12 ( .A(Y[12]), .Y(n10) );
  XOR2X1 U13 ( .A(n10), .B(sub_43_carry[12]), .Y(N12) );
  AND2X1 U14 ( .A(sub_43_carry[11]), .B(n9), .Y(sub_43_carry[12]) );
  XOR2X1 U15 ( .A(n9), .B(sub_43_carry[11]), .Y(N11) );
  AND2X1 U16 ( .A(sub_43_carry[10]), .B(n8), .Y(sub_43_carry[11]) );
  XOR2X1 U17 ( .A(n8), .B(sub_43_carry[10]), .Y(N10) );
  AND2X1 U18 ( .A(sub_43_carry[9]), .B(n7), .Y(sub_43_carry[10]) );
  XOR2X1 U19 ( .A(n7), .B(sub_43_carry[9]), .Y(N9) );
  AND2X1 U20 ( .A(sub_43_carry[8]), .B(n6), .Y(sub_43_carry[9]) );
  XOR2X1 U21 ( .A(n6), .B(sub_43_carry[8]), .Y(N8) );
  AND2X1 U22 ( .A(sub_43_carry[7]), .B(n5), .Y(sub_43_carry[8]) );
  XOR2X1 U23 ( .A(n5), .B(sub_43_carry[7]), .Y(N7) );
  AND2X1 U24 ( .A(sub_43_carry[6]), .B(n4), .Y(sub_43_carry[7]) );
  XOR2X1 U25 ( .A(n4), .B(sub_43_carry[6]), .Y(N6) );
  AND2X1 U26 ( .A(sub_43_carry[5]), .B(n3), .Y(sub_43_carry[6]) );
  XOR2X1 U27 ( .A(n3), .B(sub_43_carry[5]), .Y(N5) );
  NOR2X1 U28 ( .A(Y[4]), .B(Y[3]), .Y(n2) );
  NOR4BX1 U29 ( .AN(n2), .B(Y[1]), .C(N0), .D(Y[2]), .Y(sub_43_carry[5]) );
  FILTD_0_DW01_add_1 add_60 ( .A({Y[12:1], N0}), .B({DIFSX_12_, DIFSX_12_, 
        DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_}), .CI(1'b0), .SUM(YUT) );
  FILTD_0_DW01_add_0 add_43 ( .A({1'b0, WI, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}), 
        .B({N17, n1, n1, n1, n1, N12, N11, N10, N9, N8, N7, N6, N5, 1'b0, 1'b0, 
        1'b0, 1'b0, N0}), .CI(1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, DIFSX_12_, 
        DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, 
        DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3, 
        SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5}) );
endmodule


module LIMB_0 ( YUP, YUT );
  output [12:0] YUP;
  input [12:0] YUT;
  wire   GEUL_13_, GELL_13_, n1, n2, n3, n4;

  AND2X2 U10 ( .A(YUT[8]), .B(n4), .Y(YUP[8]) );
  AND2X2 U11 ( .A(YUT[7]), .B(n4), .Y(YUP[7]) );
  AND2X2 U12 ( .A(YUT[6]), .B(n4), .Y(YUP[6]) );
  AND2X2 U14 ( .A(YUT[4]), .B(n4), .Y(YUP[4]) );
  AND2X2 U15 ( .A(YUT[3]), .B(n4), .Y(YUP[3]) );
  AND2X2 U16 ( .A(YUT[2]), .B(n4), .Y(YUP[2]) );
  AND2X2 U17 ( .A(YUT[1]), .B(n4), .Y(YUP[1]) );
  AND2X2 U19 ( .A(YUT[11]), .B(n4), .Y(YUP[11]) );
  AND2X2 U21 ( .A(YUT[0]), .B(n4), .Y(YUP[0]) );
  NOR2BX1 U3 ( .AN(GEUL_13_), .B(GELL_13_), .Y(n4) );
  INVX1 U4 ( .A(GELL_13_), .Y(n3) );
  OAI2BB1X1 U5 ( .A0N(YUT[5]), .A1N(n4), .B0(n3), .Y(YUP[5]) );
  OAI2BB1X1 U6 ( .A0N(YUT[9]), .A1N(GEUL_13_), .B0(n3), .Y(YUP[9]) );
  OAI2BB2X1 U7 ( .B0(GEUL_13_), .B1(GELL_13_), .A0N(YUT[10]), .A1N(n4), .Y(
        YUP[10]) );
  OAI2BB2X1 U8 ( .B0(GEUL_13_), .B1(GELL_13_), .A0N(YUT[12]), .A1N(n4), .Y(
        YUP[12]) );
  OAI21XL U9 ( .A0(YUT[11]), .A1(YUT[10]), .B0(YUT[12]), .Y(GEUL_13_) );
  OR4X1 U13 ( .A(YUT[6]), .B(YUT[5]), .C(YUT[8]), .D(YUT[7]), .Y(n2) );
  OR2X1 U18 ( .A(YUT[12]), .B(YUT[11]), .Y(n1) );
  AOI211X1 U20 ( .A0(YUT[9]), .A1(n2), .B0(n1), .C0(YUT[10]), .Y(GELL_13_) );
endmodule


module DELAY_0220_13_0_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [12:0] x;
  output [12:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n15, n16, n17, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n19, n20;
  wire   [12:0] delay0;
  wire   [12:0] delay1;
  wire   [12:0] delay2;
  wire   [12:0] delay3;
  wire   [12:0] delay4;
  wire   [12:0] delay5;
  wire   [12:0] delay6;

  INVX1 U3 ( .A(reset), .Y(n15) );
  INVX1 U4 ( .A(reset), .Y(n17) );
  INVX1 U6 ( .A(reset), .Y(n16) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[0]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(delay0[1]) );
  SDFFSXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .SN(n15), .Q(delay0[9]), .QN(n20) );
  SDFFSXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .SN(n15), .Q(delay0[5]), .QN(n19) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(delay0[11]), .SE(test_se), .CK(clk), .RN(n15), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), .RN(n16), .Q(delay0[11]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(n20), .SE(test_se), .CK(clk), .RN(
        n15), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(n19), .SE(test_se), .CK(clk), .RN(
        n15), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(delay0[2]) );
  SDFFSXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(clk), .SN(n16), .Q(delay1[9]), .QN(n14) );
  SDFFSXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay2[9]), .QN(n13) );
  SDFFSXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(clk), .SN(n16), .Q(delay3[9]), .QN(n12) );
  SDFFSXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay4[9]), .QN(n11) );
  SDFFSXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(clk), .SN(n16), .Q(delay5[9]), .QN(n10) );
  SDFFSXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay6[9]), .QN(n9) );
  SDFFSXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay1[5]), .QN(n8) );
  SDFFSXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay2[5]), .QN(n7) );
  SDFFSXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(clk), .SN(n16), .Q(delay3[5]), .QN(n6) );
  SDFFSXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay4[5]), .QN(n5) );
  SDFFSXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(clk), .SN(n16), .Q(delay5[5]), .QN(n4) );
  SDFFSXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(clk), .SN(n15), .Q(delay6[5]), .QN(n3) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(delay1[11]), .SE(test_se), 
        .CK(clk), .RN(n16), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(delay2[11]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(delay3[11]), .SE(test_se), 
        .CK(clk), .RN(n15), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(delay4[11]), .SE(test_se), 
        .CK(clk), .RN(n16), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(delay5[11]), .SE(test_se), 
        .CK(clk), .RN(n16), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(delay6[11]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay1[11]) );
  SDFFRHQXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay2[11]) );
  SDFFRHQXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), 
        .CK(clk), .RN(n15), .Q(delay3[11]) );
  SDFFRHQXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), 
        .CK(clk), .RN(n16), .Q(delay4[11]) );
  SDFFRHQXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay5[11]) );
  SDFFRHQXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), 
        .CK(clk), .RN(n17), .Q(delay6[11]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(n11), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(n10), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(n9), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(n3), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay1[3]) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay2[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay4[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay2[2]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay3[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(delay5[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay6[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n15), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay1[0]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay2[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[12]), .SE(test_se), .CK(
        clk), .RN(n16), .Q(delay6[0]) );
  SDFFRHQX2 delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[4]) );
  SDFFRHQX2 delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[7]) );
  SDFFRHQX2 delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n15), .Q(y[3]) );
  SDFFRHQX2 delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[1]) );
  SDFFSHQX1 delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .SN(n15), .Q(y[9]) );
  SDFFRHQX1 delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .RN(n15), .Q(y[11]) );
  SDFFRHQX2 delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[6]) );
  SDFFRHQX1 delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n17), .Q(y[12]) );
  SDFFRHQX2 delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[12]), .SE(test_se), .CK(
        clk), .RN(n17), .Q(y[0]) );
  SDFFSHQX1 delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .SN(n15), .Q(y[5]) );
  SDFFRHQX2 delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(y[2]) );
  SDFFRHQX1 delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n17), .Q(y[10]) );
  SDFFRHQX1 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n16), .Q(y[8]) );
endmodule


module FILTE_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [15:0] A;
  input [15:0] B;
  output [15:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [13:2] carry;

  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  XOR2X1 U3 ( .A(B[13]), .B(carry[13]), .Y(SUM[13]) );
endmodule


module FILTE_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [18:0] A;
  input [18:0] B;
  output [18:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [18:2] carry;

  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X2 U1_18 ( .A(A[18]), .B(B[18]), .C(carry[18]), .Y(SUM[18]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module FILTE_0 ( YUP, YL, YLP );
  input [12:0] YUP;
  input [18:0] YL;
  output [18:0] YLP;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N14, N13, N12, N11, N10, N1, N0,
         DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_,
         DIFSX_2_, DIFSX_1_, DIFSX_18_, DIFSX_12_, DIFSX_11_, DIFSX_10_,
         DIFSX_0_, n1, n2, n3, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1;
  wire   [18:6] sub_51_carry;

  NOR2BX1 U3 ( .AN(sub_51_carry[11]), .B(YL[11]), .Y(sub_51_carry[12]) );
  NOR2BX1 U4 ( .AN(sub_51_carry[13]), .B(YL[13]), .Y(sub_51_carry[14]) );
  NOR2BX1 U5 ( .AN(sub_51_carry[15]), .B(YL[15]), .Y(sub_51_carry[16]) );
  INVX1 U8 ( .A(YL[10]), .Y(n7) );
  INVX1 U9 ( .A(YL[11]), .Y(n8) );
  INVX1 U10 ( .A(YL[12]), .Y(n9) );
  INVX1 U11 ( .A(YL[13]), .Y(n10) );
  INVX1 U12 ( .A(YL[14]), .Y(n11) );
  INVX1 U14 ( .A(YL[7]), .Y(n3) );
  INVX1 U15 ( .A(N14), .Y(N13) );
  INVXL U18 ( .A(YL[17]), .Y(n14) );
  INVXL U19 ( .A(YL[15]), .Y(n12) );
  INVXL U20 ( .A(YL[18]), .Y(n15) );
  AND2X1 U21 ( .A(sub_51_carry[18]), .B(n15), .Y(N14) );
  XOR2X1 U22 ( .A(n15), .B(sub_51_carry[18]), .Y(N12) );
  AND2X1 U23 ( .A(sub_51_carry[17]), .B(n14), .Y(sub_51_carry[18]) );
  XOR2X1 U24 ( .A(n14), .B(sub_51_carry[17]), .Y(N11) );
  AND2X1 U25 ( .A(sub_51_carry[16]), .B(n13), .Y(sub_51_carry[17]) );
  XOR2X1 U26 ( .A(n13), .B(sub_51_carry[16]), .Y(N10) );
  XOR2X1 U27 ( .A(n12), .B(sub_51_carry[15]), .Y(N9) );
  AND2X1 U28 ( .A(sub_51_carry[14]), .B(n11), .Y(sub_51_carry[15]) );
  XOR2X1 U29 ( .A(n11), .B(sub_51_carry[14]), .Y(N8) );
  XOR2X1 U30 ( .A(n10), .B(sub_51_carry[13]), .Y(N7) );
  AND2X1 U31 ( .A(sub_51_carry[12]), .B(n9), .Y(sub_51_carry[13]) );
  XOR2X1 U32 ( .A(n9), .B(sub_51_carry[12]), .Y(N6) );
  XOR2X1 U33 ( .A(n8), .B(sub_51_carry[11]), .Y(N5) );
  AND2X1 U34 ( .A(sub_51_carry[10]), .B(n7), .Y(sub_51_carry[11]) );
  XOR2X1 U35 ( .A(n7), .B(sub_51_carry[10]), .Y(N4) );
  AND2X1 U36 ( .A(sub_51_carry[9]), .B(n6), .Y(sub_51_carry[10]) );
  XOR2X1 U37 ( .A(n6), .B(sub_51_carry[9]), .Y(N3) );
  AND2X1 U38 ( .A(sub_51_carry[8]), .B(n5), .Y(sub_51_carry[9]) );
  XOR2X1 U39 ( .A(n5), .B(sub_51_carry[8]), .Y(N2) );
  AND2X1 U40 ( .A(sub_51_carry[7]), .B(n3), .Y(sub_51_carry[8]) );
  XOR2X1 U41 ( .A(n3), .B(sub_51_carry[7]), .Y(N1) );
  AND2X1 U42 ( .A(sub_51_carry[6]), .B(n2), .Y(sub_51_carry[7]) );
  XOR2X1 U43 ( .A(n2), .B(sub_51_carry[6]), .Y(N0) );
  NOR3X1 U44 ( .A(YL[3]), .B(YL[5]), .C(YL[4]), .Y(n1) );
  NOR4BX1 U45 ( .AN(n1), .B(YL[2]), .C(YL[0]), .D(YL[1]), .Y(sub_51_carry[6])
         );
  FILTE_0_DW01_add_0 add_51 ( .A({1'b0, 1'b0, 1'b0, YUP}), .B({1'b0, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, DIFSX_18_, 
        DIFSX_12_, DIFSX_11_, DIFSX_10_, DIFSX_9_, DIFSX_8_, DIFSX_7_, 
        DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, DIFSX_2_, DIFSX_1_, DIFSX_0_})
         );
  FILTE_0_DW01_add_1 add_56 ( .A(YL), .B({DIFSX_18_, DIFSX_18_, DIFSX_18_, 
        DIFSX_18_, DIFSX_18_, DIFSX_18_, DIFSX_12_, DIFSX_11_, DIFSX_10_, 
        DIFSX_9_, DIFSX_8_, DIFSX_7_, DIFSX_6_, DIFSX_5_, DIFSX_4_, DIFSX_3_, 
        DIFSX_2_, DIFSX_1_, DIFSX_0_}), .CI(1'b0), .SUM(YLP) );
  INVXL U1 ( .A(YL[6]), .Y(n2) );
  INVX1 U2 ( .A(YL[8]), .Y(n5) );
  INVXL U6 ( .A(YL[9]), .Y(n6) );
  INVX1 U7 ( .A(YL[16]), .Y(n13) );
endmodule


module DELAY_08800_19_0_test_1 ( x, reset, y, clk, scan_enable, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, test_si, test_se );
  input [18:0] x;
  output [18:0] y;
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n24, n25, n1, n18, n19, n20, n22, n23, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17;
  wire   [18:0] delay0;
  wire   [18:0] delay1;
  wire   [18:0] delay2;
  wire   [18:0] delay3;
  wire   [18:0] delay4;
  wire   [18:0] delay5;
  wire   [18:0] delay6;

  CLKBUFX8 U3 ( .A(n24), .Y(y[15]) );
  INVX4 U4 ( .A(n25), .Y(n1) );
  CLKINVX8 U5 ( .A(n1), .Y(y[12]) );
  INVX1 U6 ( .A(reset), .Y(n20) );
  INVX1 U8 ( .A(reset), .Y(n22) );
  INVX1 U9 ( .A(reset), .Y(n23) );
  INVX1 U10 ( .A(reset), .Y(n19) );
  INVX1 U11 ( .A(reset), .Y(n18) );
  SDFFRHQX2 delay7_reg_12_ ( .D(delay6[12]), .SI(y[11]), .SE(test_se), .CK(clk), .RN(n19), .Q(n25) );
  SDFFRHQXL delay7_reg_4_ ( .D(delay6[4]), .SI(y[3]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[4]) );
  SDFFRHQXL delay7_reg_5_ ( .D(delay6[5]), .SI(y[4]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[5]) );
  SDFFRHQXL delay7_reg_3_ ( .D(delay6[3]), .SI(y[2]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[3]) );
  SDFFRHQXL delay7_reg_2_ ( .D(delay6[2]), .SI(y[1]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[2]) );
  SDFFRHQXL delay7_reg_1_ ( .D(delay6[1]), .SI(y[0]), .SE(test_se), .CK(clk), 
        .RN(n22), .Q(y[1]) );
  SDFFRHQXL delay7_reg_0_ ( .D(delay6[0]), .SI(delay6[18]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(y[0]) );
  SDFFSXL delay0_reg_15_ ( .D(x[15]), .SI(delay0[14]), .SE(test_se), .CK(clk), 
        .SN(n18), .Q(delay0[15]), .QN(n17) );
  SDFFSXL delay0_reg_11_ ( .D(x[11]), .SI(delay0[10]), .SE(test_se), .CK(clk), 
        .SN(n20), .Q(delay0[11]), .QN(n16) );
  SDFFRHQXL delay0_reg_18_ ( .D(x[18]), .SI(delay0[17]), .SE(test_se), .CK(clk), .RN(n18), .Q(delay0[18]) );
  SDFFRHQXL delay0_reg_17_ ( .D(x[17]), .SI(delay0[16]), .SE(test_se), .CK(clk), .RN(n22), .Q(delay0[17]) );
  SDFFRHQXL delay0_reg_16_ ( .D(x[16]), .SI(n17), .SE(test_se), .CK(clk), .RN(
        n23), .Q(delay0[16]) );
  SDFFRHQXL delay0_reg_14_ ( .D(x[14]), .SI(delay0[13]), .SE(test_se), .CK(clk), .RN(n23), .Q(delay0[14]) );
  SDFFRHQXL delay0_reg_13_ ( .D(x[13]), .SI(delay0[12]), .SE(test_se), .CK(clk), .RN(n20), .Q(delay0[13]) );
  SDFFRHQXL delay0_reg_12_ ( .D(x[12]), .SI(n16), .SE(test_se), .CK(clk), .RN(
        n19), .Q(delay0[12]) );
  SDFFRHQXL delay0_reg_10_ ( .D(x[10]), .SI(delay0[9]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[10]) );
  SDFFRHQXL delay0_reg_9_ ( .D(x[9]), .SI(delay0[8]), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[9]) );
  SDFFRHQXL delay0_reg_8_ ( .D(x[8]), .SI(delay0[7]), .SE(test_se), .CK(clk), 
        .RN(n22), .Q(delay0[8]) );
  SDFFRHQXL delay0_reg_7_ ( .D(x[7]), .SI(delay0[6]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[7]) );
  SDFFRHQXL delay0_reg_6_ ( .D(x[6]), .SI(delay0[5]), .SE(test_se), .CK(clk), 
        .RN(n23), .Q(delay0[6]) );
  SDFFRHQXL delay0_reg_5_ ( .D(x[5]), .SI(delay0[4]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay0[5]) );
  SDFFRHQXL delay0_reg_4_ ( .D(x[4]), .SI(delay0[3]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[4]) );
  SDFFRHQXL delay0_reg_3_ ( .D(x[3]), .SI(delay0[2]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay0[3]) );
  SDFFRHQXL delay0_reg_2_ ( .D(x[2]), .SI(delay0[1]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay0[2]) );
  SDFFRHQXL delay0_reg_1_ ( .D(x[1]), .SI(delay0[0]), .SE(test_se), .CK(clk), 
        .RN(n23), .Q(delay0[1]) );
  SDFFRHQXL delay0_reg_0_ ( .D(x[0]), .SI(test_si), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay0[0]) );
  SDFFSXL delay1_reg_15_ ( .D(delay0[15]), .SI(delay1[14]), .SE(test_se), .CK(
        clk), .SN(n22), .Q(delay1[15]), .QN(n15) );
  SDFFSXL delay2_reg_15_ ( .D(delay1[15]), .SI(delay2[14]), .SE(test_se), .CK(
        clk), .SN(n19), .Q(delay2[15]), .QN(n14) );
  SDFFSXL delay3_reg_15_ ( .D(delay2[15]), .SI(delay3[14]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay3[15]), .QN(n13) );
  SDFFSXL delay4_reg_15_ ( .D(delay3[15]), .SI(delay4[14]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay4[15]), .QN(n12) );
  SDFFSXL delay5_reg_15_ ( .D(delay4[15]), .SI(delay5[14]), .SE(test_se), .CK(
        clk), .SN(n22), .Q(delay5[15]), .QN(n11) );
  SDFFSXL delay6_reg_15_ ( .D(delay5[15]), .SI(delay6[14]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay6[15]), .QN(n10) );
  SDFFSXL delay1_reg_11_ ( .D(delay0[11]), .SI(delay1[10]), .SE(test_se), .CK(
        clk), .SN(n23), .Q(delay1[11]), .QN(n9) );
  SDFFSXL delay2_reg_11_ ( .D(delay1[11]), .SI(delay2[10]), .SE(test_se), .CK(
        clk), .SN(n20), .Q(delay2[11]), .QN(n8) );
  SDFFSXL delay3_reg_11_ ( .D(delay2[11]), .SI(delay3[10]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay3[11]), .QN(n7) );
  SDFFSXL delay4_reg_11_ ( .D(delay3[11]), .SI(delay4[10]), .SE(test_se), .CK(
        clk), .SN(n22), .Q(delay4[11]), .QN(n6) );
  SDFFSXL delay5_reg_11_ ( .D(delay4[11]), .SI(delay5[10]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay5[11]), .QN(n5) );
  SDFFSXL delay6_reg_11_ ( .D(delay5[11]), .SI(delay6[10]), .SE(test_se), .CK(
        clk), .SN(n18), .Q(delay6[11]), .QN(n4) );
  SDFFRHQXL delay2_reg_3_ ( .D(delay1[3]), .SI(delay2[2]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[3]) );
  SDFFRHQXL delay5_reg_3_ ( .D(delay4[3]), .SI(delay5[2]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[3]) );
  SDFFRHQXL delay6_reg_3_ ( .D(delay5[3]), .SI(delay6[2]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[3]) );
  SDFFRHQXL delay1_reg_2_ ( .D(delay0[2]), .SI(delay1[1]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay1[2]) );
  SDFFRHQXL delay2_reg_2_ ( .D(delay1[2]), .SI(delay2[1]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[2]) );
  SDFFRHQXL delay4_reg_2_ ( .D(delay3[2]), .SI(delay4[1]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay4[2]) );
  SDFFRHQXL delay5_reg_2_ ( .D(delay4[2]), .SI(delay5[1]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[2]) );
  SDFFRHQXL delay1_reg_1_ ( .D(delay0[1]), .SI(delay1[0]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[1]) );
  SDFFRHQXL delay2_reg_1_ ( .D(delay1[1]), .SI(delay2[0]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[1]) );
  SDFFRHQXL delay3_reg_1_ ( .D(delay2[1]), .SI(delay3[0]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[1]) );
  SDFFRHQXL delay4_reg_1_ ( .D(delay3[1]), .SI(delay4[0]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[1]) );
  SDFFRHQXL delay5_reg_1_ ( .D(delay4[1]), .SI(delay5[0]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[1]) );
  SDFFRHQXL delay6_reg_1_ ( .D(delay5[1]), .SI(delay6[0]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[1]) );
  SDFFRHQXL delay1_reg_0_ ( .D(delay0[0]), .SI(delay0[18]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay1[0]) );
  SDFFRHQXL delay3_reg_0_ ( .D(delay2[0]), .SI(delay2[18]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[0]) );
  SDFFRHQXL delay4_reg_0_ ( .D(delay3[0]), .SI(delay3[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay4[0]) );
  SDFFRHQXL delay5_reg_0_ ( .D(delay4[0]), .SI(delay4[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay5[0]) );
  SDFFRHQXL delay6_reg_0_ ( .D(delay5[0]), .SI(delay5[18]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[0]) );
  SDFFRHQXL delay1_reg_18_ ( .D(delay0[18]), .SI(delay1[17]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay1[18]) );
  SDFFRHQXL delay2_reg_18_ ( .D(delay1[18]), .SI(delay2[17]), .SE(test_se), 
        .CK(clk), .RN(n22), .Q(delay2[18]) );
  SDFFRHQXL delay3_reg_18_ ( .D(delay2[18]), .SI(delay3[17]), .SE(test_se), 
        .CK(clk), .RN(n22), .Q(delay3[18]) );
  SDFFRHQXL delay4_reg_18_ ( .D(delay3[18]), .SI(delay4[17]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay4[18]) );
  SDFFRHQXL delay5_reg_18_ ( .D(delay4[18]), .SI(delay5[17]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay5[18]) );
  SDFFRHQXL delay6_reg_18_ ( .D(delay5[18]), .SI(delay6[17]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay6[18]) );
  SDFFRHQXL delay1_reg_17_ ( .D(delay0[17]), .SI(delay1[16]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay1[17]) );
  SDFFRHQXL delay2_reg_17_ ( .D(delay1[17]), .SI(delay2[16]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay2[17]) );
  SDFFRHQXL delay3_reg_17_ ( .D(delay2[17]), .SI(delay3[16]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay3[17]) );
  SDFFRHQXL delay4_reg_17_ ( .D(delay3[17]), .SI(delay4[16]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay4[17]) );
  SDFFRHQXL delay5_reg_17_ ( .D(delay4[17]), .SI(delay5[16]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay5[17]) );
  SDFFRHQXL delay6_reg_17_ ( .D(delay5[17]), .SI(delay6[16]), .SE(test_se), 
        .CK(clk), .RN(n18), .Q(delay6[17]) );
  SDFFRHQXL delay1_reg_16_ ( .D(delay0[16]), .SI(n15), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay1[16]) );
  SDFFRHQXL delay2_reg_16_ ( .D(delay1[16]), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay2[16]) );
  SDFFRHQXL delay3_reg_16_ ( .D(delay2[16]), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay3[16]) );
  SDFFRHQXL delay4_reg_16_ ( .D(delay3[16]), .SI(n12), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay4[16]) );
  SDFFRHQXL delay5_reg_16_ ( .D(delay4[16]), .SI(n11), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay5[16]) );
  SDFFRHQXL delay6_reg_16_ ( .D(delay5[16]), .SI(n10), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay6[16]) );
  SDFFRHQXL delay1_reg_14_ ( .D(delay0[14]), .SI(delay1[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay1[14]) );
  SDFFRHQXL delay2_reg_14_ ( .D(delay1[14]), .SI(delay2[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay2[14]) );
  SDFFRHQXL delay3_reg_14_ ( .D(delay2[14]), .SI(delay3[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay3[14]) );
  SDFFRHQXL delay4_reg_14_ ( .D(delay3[14]), .SI(delay4[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay4[14]) );
  SDFFRHQXL delay5_reg_14_ ( .D(delay4[14]), .SI(delay5[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay5[14]) );
  SDFFRHQXL delay6_reg_14_ ( .D(delay5[14]), .SI(delay6[13]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay6[14]) );
  SDFFRHQXL delay1_reg_13_ ( .D(delay0[13]), .SI(delay1[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay1[13]) );
  SDFFRHQXL delay2_reg_13_ ( .D(delay1[13]), .SI(delay2[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay2[13]) );
  SDFFRHQXL delay3_reg_13_ ( .D(delay2[13]), .SI(delay3[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay3[13]) );
  SDFFRHQXL delay4_reg_13_ ( .D(delay3[13]), .SI(delay4[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay4[13]) );
  SDFFRHQXL delay5_reg_13_ ( .D(delay4[13]), .SI(delay5[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay5[13]) );
  SDFFRHQXL delay6_reg_13_ ( .D(delay5[13]), .SI(delay6[12]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay6[13]) );
  SDFFRHQXL delay1_reg_12_ ( .D(delay0[12]), .SI(n9), .SE(test_se), .CK(clk), 
        .RN(n18), .Q(delay1[12]) );
  SDFFRHQXL delay2_reg_12_ ( .D(delay1[12]), .SI(n8), .SE(test_se), .CK(clk), 
        .RN(n23), .Q(delay2[12]) );
  SDFFRHQXL delay3_reg_12_ ( .D(delay2[12]), .SI(n7), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay3[12]) );
  SDFFRHQXL delay4_reg_12_ ( .D(delay3[12]), .SI(n6), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(delay4[12]) );
  SDFFRHQXL delay5_reg_12_ ( .D(delay4[12]), .SI(n5), .SE(test_se), .CK(clk), 
        .RN(n22), .Q(delay5[12]) );
  SDFFRHQXL delay6_reg_12_ ( .D(delay5[12]), .SI(n4), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(delay6[12]) );
  SDFFRHQXL delay1_reg_10_ ( .D(delay0[10]), .SI(delay1[9]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay1[10]) );
  SDFFRHQXL delay2_reg_10_ ( .D(delay1[10]), .SI(delay2[9]), .SE(test_se), 
        .CK(clk), .RN(n19), .Q(delay2[10]) );
  SDFFRHQXL delay3_reg_10_ ( .D(delay2[10]), .SI(delay3[9]), .SE(test_se), 
        .CK(clk), .RN(n20), .Q(delay3[10]) );
  SDFFRHQXL delay4_reg_10_ ( .D(delay3[10]), .SI(delay4[9]), .SE(test_se), 
        .CK(clk), .RN(n22), .Q(delay4[10]) );
  SDFFRHQXL delay5_reg_10_ ( .D(delay4[10]), .SI(delay5[9]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay5[10]) );
  SDFFRHQXL delay6_reg_10_ ( .D(delay5[10]), .SI(delay6[9]), .SE(test_se), 
        .CK(clk), .RN(n23), .Q(delay6[10]) );
  SDFFRHQXL delay1_reg_9_ ( .D(delay0[9]), .SI(delay1[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay1[9]) );
  SDFFRHQXL delay2_reg_9_ ( .D(delay1[9]), .SI(delay2[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay2[9]) );
  SDFFRHQXL delay3_reg_9_ ( .D(delay2[9]), .SI(delay3[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay3[9]) );
  SDFFRHQXL delay4_reg_9_ ( .D(delay3[9]), .SI(delay4[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay4[9]) );
  SDFFRHQXL delay5_reg_9_ ( .D(delay4[9]), .SI(delay5[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay5[9]) );
  SDFFRHQXL delay6_reg_9_ ( .D(delay5[9]), .SI(delay6[8]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay6[9]) );
  SDFFRHQXL delay1_reg_8_ ( .D(delay0[8]), .SI(delay1[7]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay1[8]) );
  SDFFRHQXL delay2_reg_8_ ( .D(delay1[8]), .SI(delay2[7]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay2[8]) );
  SDFFRHQXL delay3_reg_8_ ( .D(delay2[8]), .SI(delay3[7]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay3[8]) );
  SDFFRHQXL delay4_reg_8_ ( .D(delay3[8]), .SI(delay4[7]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay4[8]) );
  SDFFRHQXL delay5_reg_8_ ( .D(delay4[8]), .SI(delay5[7]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[8]) );
  SDFFRHQXL delay6_reg_8_ ( .D(delay5[8]), .SI(delay6[7]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay6[8]) );
  SDFFRHQXL delay1_reg_7_ ( .D(delay0[7]), .SI(delay1[6]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay1[7]) );
  SDFFRHQXL delay2_reg_7_ ( .D(delay1[7]), .SI(delay2[6]), .SE(test_se), .CK(
        clk), .RN(n23), .Q(delay2[7]) );
  SDFFRHQXL delay3_reg_7_ ( .D(delay2[7]), .SI(delay3[6]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay3[7]) );
  SDFFRHQXL delay4_reg_7_ ( .D(delay3[7]), .SI(delay4[6]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay4[7]) );
  SDFFRHQXL delay5_reg_7_ ( .D(delay4[7]), .SI(delay5[6]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[7]) );
  SDFFRHQXL delay6_reg_7_ ( .D(delay5[7]), .SI(delay6[6]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay6[7]) );
  SDFFRHQXL delay1_reg_6_ ( .D(delay0[6]), .SI(delay1[5]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay1[6]) );
  SDFFRHQXL delay2_reg_6_ ( .D(delay1[6]), .SI(delay2[5]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay2[6]) );
  SDFFRHQXL delay3_reg_6_ ( .D(delay2[6]), .SI(delay3[5]), .SE(test_se), .CK(
        clk), .RN(n23), .Q(delay3[6]) );
  SDFFRHQXL delay4_reg_6_ ( .D(delay3[6]), .SI(delay4[5]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay4[6]) );
  SDFFRHQXL delay5_reg_6_ ( .D(delay4[6]), .SI(delay5[5]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay5[6]) );
  SDFFRHQXL delay6_reg_6_ ( .D(delay5[6]), .SI(delay6[5]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay6[6]) );
  SDFFRHQXL delay1_reg_5_ ( .D(delay0[5]), .SI(delay1[4]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay1[5]) );
  SDFFRHQXL delay2_reg_5_ ( .D(delay1[5]), .SI(delay2[4]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay2[5]) );
  SDFFRHQXL delay3_reg_5_ ( .D(delay2[5]), .SI(delay3[4]), .SE(test_se), .CK(
        clk), .RN(n23), .Q(delay3[5]) );
  SDFFRHQXL delay4_reg_5_ ( .D(delay3[5]), .SI(delay4[4]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay4[5]) );
  SDFFRHQXL delay5_reg_5_ ( .D(delay4[5]), .SI(delay5[4]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[5]) );
  SDFFRHQXL delay6_reg_5_ ( .D(delay5[5]), .SI(delay6[4]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay6[5]) );
  SDFFRHQXL delay1_reg_4_ ( .D(delay0[4]), .SI(delay1[3]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay1[4]) );
  SDFFRHQXL delay2_reg_4_ ( .D(delay1[4]), .SI(delay2[3]), .SE(test_se), .CK(
        clk), .RN(n19), .Q(delay2[4]) );
  SDFFRHQXL delay3_reg_4_ ( .D(delay2[4]), .SI(delay3[3]), .SE(test_se), .CK(
        clk), .RN(n22), .Q(delay3[4]) );
  SDFFRHQXL delay4_reg_4_ ( .D(delay3[4]), .SI(delay4[3]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay4[4]) );
  SDFFRHQXL delay5_reg_4_ ( .D(delay4[4]), .SI(delay5[3]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay5[4]) );
  SDFFRHQXL delay6_reg_4_ ( .D(delay5[4]), .SI(delay6[3]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay6[4]) );
  SDFFRHQXL delay1_reg_3_ ( .D(delay0[3]), .SI(delay1[2]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay1[3]) );
  SDFFRHQXL delay3_reg_3_ ( .D(delay2[3]), .SI(delay3[2]), .SE(test_se), .CK(
        clk), .RN(n18), .Q(delay3[3]) );
  SDFFRHQXL delay4_reg_3_ ( .D(delay3[3]), .SI(delay4[2]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay4[3]) );
  SDFFRHQXL delay3_reg_2_ ( .D(delay2[2]), .SI(delay3[1]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay3[2]) );
  SDFFRHQXL delay6_reg_2_ ( .D(delay5[2]), .SI(delay6[1]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay6[2]) );
  SDFFRHQXL delay2_reg_0_ ( .D(delay1[0]), .SI(delay1[18]), .SE(test_se), .CK(
        clk), .RN(n20), .Q(delay2[0]) );
  SDFFSHQXL delay7_reg_15_ ( .D(delay6[15]), .SI(y[14]), .SE(test_se), .CK(clk), .SN(n22), .Q(n24) );
  SDFFRHQX4 delay7_reg_18_ ( .D(delay6[18]), .SI(y[17]), .SE(test_se), .CK(clk), .RN(n20), .Q(y[18]) );
  SDFFRHQX4 delay7_reg_17_ ( .D(delay6[17]), .SI(y[16]), .SE(test_se), .CK(clk), .RN(n22), .Q(y[17]) );
  SDFFSHQX4 delay7_reg_11_ ( .D(delay6[11]), .SI(y[10]), .SE(test_se), .CK(clk), .SN(n18), .Q(y[11]) );
  SDFFRHQX4 delay7_reg_10_ ( .D(delay6[10]), .SI(y[9]), .SE(test_se), .CK(clk), 
        .RN(n22), .Q(y[10]) );
  SDFFRHQX4 delay7_reg_6_ ( .D(delay6[6]), .SI(y[5]), .SE(test_se), .CK(clk), 
        .RN(n20), .Q(y[6]) );
  SDFFRHQX4 delay7_reg_7_ ( .D(delay6[7]), .SI(y[6]), .SE(test_se), .CK(clk), 
        .RN(n23), .Q(y[7]) );
  SDFFRHQX4 delay7_reg_16_ ( .D(delay6[16]), .SI(y[15]), .SE(test_se), .CK(clk), .RN(n23), .Q(y[16]) );
  SDFFRHQX4 delay7_reg_14_ ( .D(delay6[14]), .SI(y[13]), .SE(test_se), .CK(clk), .RN(n23), .Q(y[14]) );
  SDFFRHQX4 delay7_reg_13_ ( .D(delay6[13]), .SI(y[12]), .SE(test_se), .CK(clk), .RN(n23), .Q(y[13]) );
  SDFFRHQX4 delay7_reg_9_ ( .D(delay6[9]), .SI(y[8]), .SE(test_se), .CK(clk), 
        .RN(n22), .Q(y[9]) );
  SDFFRHQX4 delay7_reg_8_ ( .D(delay6[8]), .SI(y[7]), .SE(test_se), .CK(clk), 
        .RN(n19), .Q(y[8]) );
endmodule


module MIX_0_DW01_sub_3 ( A, B, CI, DIFF, CO );
  input [14:0] A;
  input [14:0] B;
  output [14:0] DIFF;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n15, n16, n17, n18, n19,
         n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n37, n38, n39, n40, n42, n45, n46, n50, n51, n53, n55, n56, n58, n60,
         n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n75,
         n77, n78, n80, n82, n83, n84, n86, n88, n89, n91, n102, n103, n104,
         n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, DIFF_0_,
         DIFF_1_, DIFF_2_, DIFF_3_, DIFF_4_, DIFF_5_, DIFF_6_, DIFF_7_,
         DIFF_8_, DIFF_9_, DIFF_10_, DIFF_11_, DIFF_12_, DIFF_13_, B_0_, B_1_,
         B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_, B_11_, B_12_,
         A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_, A_10_,
         A_11_, A_12_, n167, n168, n169, n170, n171, n172, n173, n174, n12,
         n13, n14;
  assign DIFF[0] = DIFF_0_;
  assign DIFF[1] = DIFF_1_;
  assign DIFF[2] = DIFF_2_;
  assign DIFF[3] = DIFF_3_;
  assign DIFF[4] = DIFF_4_;
  assign DIFF[5] = DIFF_5_;
  assign DIFF[6] = DIFF_6_;
  assign DIFF[7] = DIFF_7_;
  assign DIFF[8] = DIFF_8_;
  assign DIFF[9] = DIFF_9_;
  assign DIFF[10] = DIFF_10_;
  assign DIFF[11] = DIFF_11_;
  assign DIFF[12] = DIFF_12_;
  assign DIFF[13] = DIFF_13_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];

  AOI21X4 U3 ( .A0(n24), .A1(n15), .B0(n16), .Y(DIFF_13_) );
  OAI21X4 U45 ( .A0(n51), .A1(n45), .B0(n46), .Y(n40) );
  AOI21X4 U55 ( .A0(n172), .A1(n58), .B0(n53), .Y(n51) );
  AOI21X4 U72 ( .A0(n63), .A1(n71), .B0(n64), .Y(n62) );
  OAI21X4 U87 ( .A0(n84), .A1(n72), .B0(n73), .Y(n71) );
  NAND2X1 U135 ( .A(n109), .B(A_5_), .Y(n66) );
  NAND2XL U136 ( .A(n172), .B(n55), .Y(n7) );
  NAND2BX1 U137 ( .AN(n65), .B(n66), .Y(n9) );
  OAI21XL U138 ( .A0(n14), .A1(n50), .B0(n12), .Y(n167) );
  NAND2BX1 U140 ( .AN(n68), .B(n69), .Y(n10) );
  NAND2BX1 U141 ( .AN(n45), .B(n46), .Y(n6) );
  AOI21XL U142 ( .A0(n61), .A1(n32), .B0(n33), .Y(n31) );
  AOI21X4 U144 ( .A0(n1), .A1(n174), .B0(n86), .Y(n84) );
  AOI21X2 U146 ( .A0(n83), .A1(n171), .B0(n80), .Y(n78) );
  INVX2 U147 ( .A(n84), .Y(n83) );
  INVX2 U148 ( .A(n82), .Y(n80) );
  NAND2BX1 U149 ( .AN(n17), .B(n18), .Y(n2) );
  AOI21X2 U150 ( .A0(n27), .A1(n40), .B0(n28), .Y(n26) );
  XNOR2X1 U151 ( .A(n168), .B(n89), .Y(DIFF_1_) );
  INVX8 U154 ( .A(B_9_), .Y(n105) );
  NOR2X2 U155 ( .A(n105), .B(A_9_), .Y(n34) );
  XOR2X1 U161 ( .A(n70), .B(n10), .Y(DIFF_4_) );
  NAND2X1 U163 ( .A(n113), .B(A_1_), .Y(n88) );
  OR2X2 U164 ( .A(n113), .B(A_1_), .Y(n174) );
  XOR2X1 U166 ( .A(n38), .B(n5), .Y(DIFF_9_) );
  OR2X2 U167 ( .A(n107), .B(A_7_), .Y(n172) );
  INVX1 U170 ( .A(B_11_), .Y(n103) );
  OAI21X1 U171 ( .A0(n65), .A1(n69), .B0(n66), .Y(n64) );
  INVX1 U172 ( .A(B_12_), .Y(n102) );
  NAND2X1 U173 ( .A(n103), .B(A_11_), .Y(n23) );
  NOR2X1 U174 ( .A(n103), .B(A_11_), .Y(n22) );
  INVX4 U176 ( .A(B_4_), .Y(n110) );
  NOR2X2 U177 ( .A(n34), .B(n29), .Y(n27) );
  NAND2X1 U182 ( .A(n107), .B(A_7_), .Y(n55) );
  NOR2X1 U183 ( .A(n65), .B(n68), .Y(n63) );
  XOR2X1 U184 ( .A(n83), .B(n169), .Y(DIFF_2_) );
  OAI21X2 U185 ( .A0(n70), .A1(n68), .B0(n69), .Y(n67) );
  XOR2X2 U186 ( .A(n78), .B(n11), .Y(DIFF_3_) );
  INVX1 U189 ( .A(n88), .Y(n86) );
  OR2X2 U190 ( .A(n108), .B(A_6_), .Y(n170) );
  XOR2X1 U191 ( .A(n31), .B(n4), .Y(DIFF_10_) );
  NOR2X2 U193 ( .A(n110), .B(A_4_), .Y(n68) );
  NAND2X2 U194 ( .A(n110), .B(A_4_), .Y(n69) );
  NAND2X1 U196 ( .A(n105), .B(A_9_), .Y(n37) );
  OAI21X1 U199 ( .A0(n37), .A1(n29), .B0(n30), .Y(n28) );
  NOR2X1 U200 ( .A(n17), .B(n22), .Y(n15) );
  AOI21X4 U201 ( .A0(n173), .A1(n80), .B0(n75), .Y(n73) );
  INVX2 U202 ( .A(n77), .Y(n75) );
  NOR2BX1 U203 ( .AN(n39), .B(n34), .Y(n32) );
  NAND2XL U204 ( .A(n102), .B(A_12_), .Y(n18) );
  CLKINVX2 U205 ( .A(n71), .Y(n70) );
  OAI21X4 U206 ( .A0(n25), .A1(n62), .B0(n26), .Y(n24) );
  NAND2BX1 U207 ( .AN(n34), .B(n37), .Y(n5) );
  NAND2X2 U208 ( .A(n171), .B(n173), .Y(n72) );
  NAND2XL U209 ( .A(n173), .B(n77), .Y(n11) );
  AND2X2 U210 ( .A(n174), .B(n88), .Y(n168) );
  NAND2BX1 U211 ( .AN(n29), .B(n30), .Y(n4) );
  NAND2X1 U212 ( .A(n111), .B(A_3_), .Y(n77) );
  OAI21XL U215 ( .A0(n42), .A1(n34), .B0(n37), .Y(n33) );
  XOR2X1 U218 ( .A(n19), .B(n2), .Y(DIFF_12_) );
  AOI21XL U219 ( .A0(n24), .A1(n91), .B0(n21), .Y(n19) );
  XNOR2X1 U220 ( .A(n24), .B(n3), .Y(DIFF_11_) );
  NAND2XL U221 ( .A(n91), .B(n23), .Y(n3) );
  INVXL U222 ( .A(n22), .Y(n91) );
  NAND2XL U223 ( .A(n170), .B(n60), .Y(n8) );
  AND2X1 U224 ( .A(n171), .B(n82), .Y(n169) );
  INVXL U225 ( .A(n23), .Y(n21) );
  XNOR2X1 U226 ( .A(n114), .B(A_0_), .Y(DIFF_0_) );
  OR2X4 U227 ( .A(n111), .B(A_3_), .Y(n173) );
  AOI21XL U229 ( .A0(n61), .A1(n39), .B0(n13), .Y(n38) );
  NAND2X2 U230 ( .A(n27), .B(n39), .Y(n25) );
  INVX4 U4 ( .A(n60), .Y(n58) );
  NOR2X1 U5 ( .A(n102), .B(A_12_), .Y(n17) );
  INVX4 U8 ( .A(B_3_), .Y(n111) );
  INVX4 U10 ( .A(B_1_), .Y(n113) );
  NAND2X2 U11 ( .A(n108), .B(A_6_), .Y(n60) );
  INVX4 U22 ( .A(B_0_), .Y(n114) );
  INVX4 U1 ( .A(B_6_), .Y(n108) );
  AOI21XL U2 ( .A0(n172), .A1(n58), .B0(n53), .Y(n12) );
  CLKINVX3 U6 ( .A(n55), .Y(n53) );
  DLY1X1 U7 ( .A(n40), .Y(n13) );
  XOR2X2 U9 ( .A(n56), .B(n7), .Y(DIFF_7_) );
  XNOR2X2 U12 ( .A(n67), .B(n9), .Y(DIFF_5_) );
  XNOR2X1 U13 ( .A(n167), .B(n6), .Y(DIFF_8_) );
  INVX1 U14 ( .A(n61), .Y(n14) );
  INVX1 U15 ( .A(n13), .Y(n42) );
  INVX2 U16 ( .A(n89), .Y(n1) );
  NOR2X4 U17 ( .A(n50), .B(n45), .Y(n39) );
  NAND2X2 U18 ( .A(n170), .B(n172), .Y(n50) );
  NOR2X2 U19 ( .A(n114), .B(A_0_), .Y(n89) );
  OR2X2 U20 ( .A(n112), .B(A_2_), .Y(n171) );
  CLKINVX3 U21 ( .A(B_8_), .Y(n106) );
  INVX4 U23 ( .A(B_2_), .Y(n112) );
  NOR2X2 U24 ( .A(n109), .B(A_5_), .Y(n65) );
  INVX4 U25 ( .A(n62), .Y(n61) );
  INVX4 U26 ( .A(B_10_), .Y(n104) );
  INVX2 U27 ( .A(B_7_), .Y(n107) );
  INVX1 U28 ( .A(B_5_), .Y(n109) );
  NAND2X2 U29 ( .A(n112), .B(A_2_), .Y(n82) );
  NOR2X2 U30 ( .A(n106), .B(A_8_), .Y(n45) );
  NAND2X1 U31 ( .A(n106), .B(A_8_), .Y(n46) );
  NAND2X1 U32 ( .A(n104), .B(A_10_), .Y(n30) );
  NOR2X2 U33 ( .A(n104), .B(A_10_), .Y(n29) );
  OAI21XL U34 ( .A0(n17), .A1(n23), .B0(n18), .Y(n16) );
  XNOR2X1 U35 ( .A(n61), .B(n8), .Y(DIFF_6_) );
  AOI21X1 U36 ( .A0(n61), .A1(n170), .B0(n58), .Y(n56) );
endmodule


module MIX_0_DW01_add_10 ( A, B, CI, SUM, CO );
  input [14:0] A;
  input [14:0] B;
  output [14:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n12, n15, n16, n18, n20, n21, n22, n23,
         n25, n27, n28, n30, n32, n33, n34, n36, n38, n39, n40, n41, n43, n45,
         n46, n48, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n66, n68, n69, n70, n71, n73, n81, SUM_1_, SUM_2_,
         SUM_3_, n156, SUM_5_, n155, SUM_7_, SUM_8_, SUM_9_, SUM_10_, SUM_11_,
         SUM_12_, B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_,
         B_10_, B_11_, B_12_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_,
         A_8_, A_9_, A_10_, A_11_, A_12_, n135, SUM_6_, n137, n138, n139,
         SUM_4_, n141, n142, n143, n144, SUM_0_, n146, n147, n148, n149, n150,
         n151, n152, n153, n154;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[5] = SUM_5_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign SUM[6] = SUM_6_;
  assign SUM[4] = SUM_4_;
  assign SUM[0] = SUM_0_;

  XOR2X4 U1 ( .A(n16), .B(n1), .Y(SUM_12_) );
  NAND2X4 U2 ( .A(n137), .B(n15), .Y(n1) );
  XNOR2X4 U6 ( .A(n139), .B(n2), .Y(SUM_11_) );
  AOI21X4 U7 ( .A0(n139), .A1(n147), .B0(n18), .Y(n16) );
  XOR2X4 U14 ( .A(n28), .B(n3), .Y(SUM_10_) );
  XNOR2X4 U24 ( .A(n33), .B(n4), .Y(SUM_9_) );
  AOI21X4 U25 ( .A0(n33), .A1(n152), .B0(n30), .Y(n28) );
  XNOR2X4 U32 ( .A(n39), .B(n5), .Y(SUM_8_) );
  OAI21X4 U69 ( .A0(n60), .A1(n58), .B0(n59), .Y(n57) );
  NOR2X4 U72 ( .A(B_4_), .B(A_4_), .Y(n58) );
  NAND2X4 U73 ( .A(B_4_), .B(A_4_), .Y(n59) );
  OAI21X4 U76 ( .A0(n64), .A1(n62), .B0(n63), .Y(n61) );
  AOI21X4 U82 ( .A0(n69), .A1(n151), .B0(n66), .Y(n64) );
  OAI21X4 U103 ( .A0(n40), .A1(n52), .B0(n41), .Y(n39) );
  AOI21X2 U104 ( .A0(n39), .A1(n150), .B0(n36), .Y(n34) );
  CLKINVX3 U105 ( .A(n143), .Y(SUM_2_) );
  NAND2X1 U106 ( .A(B_12_), .B(A_12_), .Y(n15) );
  XOR2X1 U107 ( .A(n144), .B(n69), .Y(n143) );
  AND2X2 U108 ( .A(n63), .B(n135), .Y(n142) );
  INVX1 U109 ( .A(n62), .Y(n135) );
  AOI21X2 U110 ( .A0(n48), .A1(n149), .B0(n43), .Y(n41) );
  INVX1 U111 ( .A(n50), .Y(n48) );
  NOR2BXL U112 ( .AN(n59), .B(n58), .Y(n141) );
  AND2X2 U113 ( .A(n56), .B(n81), .Y(n146) );
  INVX1 U114 ( .A(n55), .Y(n81) );
  NAND2BX1 U115 ( .AN(n70), .B(n71), .Y(n12) );
  NAND2X2 U116 ( .A(n147), .B(n20), .Y(n2) );
  NAND2BX2 U117 ( .AN(B_11_), .B(n148), .Y(n147) );
  NAND2X2 U118 ( .A(n149), .B(n153), .Y(n40) );
  OR2X4 U119 ( .A(B_6_), .B(A_6_), .Y(n153) );
  NOR2X2 U120 ( .A(n55), .B(n58), .Y(n53) );
  OAI21X2 U121 ( .A0(n55), .A1(n59), .B0(n56), .Y(n54) );
  OR2X4 U122 ( .A(B_9_), .B(A_9_), .Y(n152) );
  XOR2X4 U123 ( .A(n46), .B(n6), .Y(SUM_7_) );
  AOI21X2 U124 ( .A0(n154), .A1(n30), .B0(n25), .Y(n23) );
  AOI21X2 U125 ( .A0(n53), .A1(n61), .B0(n54), .Y(n52) );
  CLKINVX3 U126 ( .A(n52), .Y(n51) );
  NAND2X1 U127 ( .A(B_8_), .B(A_8_), .Y(n38) );
  NOR2X2 U128 ( .A(B_5_), .B(A_5_), .Y(n55) );
  NAND2X1 U129 ( .A(B_5_), .B(A_5_), .Y(n56) );
  NAND2X1 U130 ( .A(B_9_), .B(A_9_), .Y(n32) );
  OR2XL U131 ( .A(B_0_), .B(A_0_), .Y(n138) );
  NOR2X2 U132 ( .A(B_3_), .B(A_3_), .Y(n62) );
  NAND2X1 U133 ( .A(B_3_), .B(A_3_), .Y(n63) );
  NAND2XL U134 ( .A(B_2_), .B(A_2_), .Y(n68) );
  OR2X2 U135 ( .A(B_2_), .B(A_2_), .Y(n151) );
  NAND2X2 U136 ( .A(n154), .B(n27), .Y(n3) );
  INVX2 U137 ( .A(n27), .Y(n25) );
  NAND2X1 U138 ( .A(B_10_), .B(A_10_), .Y(n27) );
  BUFX8 U139 ( .A(n155), .Y(SUM_6_) );
  OR2X4 U140 ( .A(B_8_), .B(A_8_), .Y(n150) );
  INVX2 U141 ( .A(n68), .Y(n66) );
  NAND2X2 U142 ( .A(B_11_), .B(A_11_), .Y(n20) );
  INVX1 U143 ( .A(n45), .Y(n43) );
  INVX1 U144 ( .A(n32), .Y(n30) );
  OR2X2 U145 ( .A(B_10_), .B(A_10_), .Y(n154) );
  INVX1 U146 ( .A(n20), .Y(n18) );
  NAND2X1 U147 ( .A(n151), .B(n68), .Y(n144) );
  XNOR2X2 U148 ( .A(n142), .B(n64), .Y(SUM_3_) );
  XNOR2X1 U149 ( .A(n60), .B(n141), .Y(n156) );
  XNOR2X2 U150 ( .A(n51), .B(n7), .Y(n155) );
  NAND2X1 U151 ( .A(n152), .B(n32), .Y(n4) );
  OR2X2 U152 ( .A(B_12_), .B(A_12_), .Y(n137) );
  OAI21X2 U153 ( .A0(n70), .A1(n73), .B0(n71), .Y(n69) );
  AOI21X2 U154 ( .A0(n51), .A1(n153), .B0(n48), .Y(n46) );
  NAND2X1 U155 ( .A(n153), .B(n50), .Y(n7) );
  BUFX4 U156 ( .A(n21), .Y(n139) );
  OAI21XL U157 ( .A0(n22), .A1(n34), .B0(n23), .Y(n21) );
  BUFX8 U158 ( .A(n156), .Y(SUM_4_) );
  CLKINVX3 U159 ( .A(n61), .Y(n60) );
  NAND2X2 U160 ( .A(n150), .B(n38), .Y(n5) );
  OR2X4 U161 ( .A(B_7_), .B(A_7_), .Y(n149) );
  NAND2X1 U162 ( .A(B_6_), .B(A_6_), .Y(n50) );
  NAND2XL U163 ( .A(n149), .B(n45), .Y(n6) );
  NOR2XL U164 ( .A(B_1_), .B(A_1_), .Y(n70) );
  AND2X1 U166 ( .A(n138), .B(n73), .Y(SUM_0_) );
  INVX1 U167 ( .A(n38), .Y(n36) );
  XOR2X4 U168 ( .A(n57), .B(n146), .Y(SUM_5_) );
  XOR2XL U169 ( .A(n12), .B(n73), .Y(SUM_1_) );
  NAND2XL U170 ( .A(B_1_), .B(A_1_), .Y(n71) );
  NAND2X1 U171 ( .A(B_7_), .B(A_7_), .Y(n45) );
  NAND2XL U172 ( .A(B_0_), .B(A_0_), .Y(n73) );
  NAND2X1 U173 ( .A(n154), .B(n152), .Y(n22) );
  INVX4 U174 ( .A(n34), .Y(n33) );
  INVX1 U3 ( .A(A_11_), .Y(n148) );
endmodule


module MIX_0_DW_mult_uns_7 ( a, b, product );
  input [13:0] a;
  input [6:0] b;
  output [20:0] product;
  wire   n20, n22, n23, n24, n27, n28, n30, n31, n33, n36, n37, n38, n39, n40,
         n41, n46, n47, n48, n49, n50, n51, n52, n53, n55, n56, n59, n60, n61,
         n62, n64, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,
         n79, n80, n81, n82, n83, n84, n85, n86, n88, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n119, n120, n121,
         n122, n138, n140, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178, n179, n180, n181, n182, n183, n184,
         n185, n186, n187, n188, n189, n190, n191, n192, n193, n194, n195,
         n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, n206,
         n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217,
         n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228,
         n229, n230, n231, n232, n233, n234, n235, n236, n237, n238, n239,
         n240, n241, n242, n243, n244, n245, n246, n247, n248, n249, n250,
         n251, n252, n253, n254, n255, n256, n257, n258, n259, n260, n261,
         n262, n263, n264, n265, n266, n267, n268, n269, n270, n271, n272,
         n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, n283,
         n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294,
         n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305,
         n306, n307, n308, n309, n310, n311, n312, n313, n314, n315, n316,
         n317, n318, n319, n320, n321, n322, n323, n324, n325, n326, n327,
         n328, n329, a_13_, a_12_, a_11_, a_10_, a_9_, a_8_, a_7_, a_6_, a_5_,
         a_4_, a_3_, a_2_, a_1_, n343, b_6_, n345, n346, n347, n348, n349,
         n350, n355, n357, n358, n359, n360, n361, product_6_, product_7_,
         product_8_, product_9_, product_10_, product_11_, product_12_,
         product_13_, product_14_, product_15_, product_16_, product_17_,
         product_18_, product_19_, product_20_, b_0_, b_2_, b_4_, n393, n394,
         n395, n396, n397, n398, n399, n400, n401, n402, n403, n404, n405,
         n406, n407, n408, n409, n410, n411, n412, n413, n414, n415, n416,
         n417, n418, n419, n420, n421, n422, n423, n424;
  assign a_13_ = a[13];
  assign a_12_ = a[12];
  assign a_11_ = a[11];
  assign a_10_ = a[10];
  assign a_9_ = a[9];
  assign a_8_ = a[8];
  assign a_7_ = a[7];
  assign a_6_ = a[6];
  assign a_5_ = a[5];
  assign a_4_ = a[4];
  assign a_3_ = a[3];
  assign a_2_ = a[2];
  assign a_1_ = a[1];
  assign n343 = a[0];
  assign b_6_ = b[6];
  assign n359 = b[5];
  assign n360 = b[3];
  assign n361 = b[1];
  assign product[6] = product_6_;
  assign product[7] = product_7_;
  assign product[8] = product_8_;
  assign product[9] = product_9_;
  assign product[10] = product_10_;
  assign product[11] = product_11_;
  assign product[12] = product_12_;
  assign product[13] = product_13_;
  assign product[14] = product_14_;
  assign product[15] = product_15_;
  assign product[16] = product_16_;
  assign product[17] = product_17_;
  assign product[18] = product_18_;
  assign product[19] = product_19_;
  assign product[20] = product_20_;
  assign b_0_ = b[0];
  assign b_2_ = b[2];
  assign b_4_ = b[4];

  ADDFX2 U10 ( .A(n145), .B(n144), .CI(n38), .CO(n37), .S(product_19_) );
  NOR2X4 U57 ( .A(n165), .B(n168), .Y(n67) );
  AOI21X4 U69 ( .A0(n76), .A1(n84), .B0(n77), .Y(n75) );
  XOR2X4 U76 ( .A(n83), .B(n31), .Y(product_11_) );
  NOR2X4 U80 ( .A(n177), .B(n180), .Y(n81) );
  OAI21X4 U84 ( .A0(n85), .A1(n102), .B0(n86), .Y(n84) );
  XOR2X4 U93 ( .A(n96), .B(n33), .Y(product_9_) );
  NOR2X4 U95 ( .A(n94), .B(n99), .Y(n92) );
  OAI21X4 U96 ( .A0(n94), .A1(n100), .B0(n95), .Y(n93) );
  NOR2X4 U99 ( .A(n185), .B(n188), .Y(n94) );
  NOR2X4 U107 ( .A(n189), .B(n192), .Y(n99) );
  NAND2X4 U108 ( .A(n189), .B(n192), .Y(n100) );
  AOI21X4 U111 ( .A0(n103), .A1(n111), .B0(n104), .Y(n102) );
  NOR2X4 U112 ( .A(n105), .B(n108), .Y(n103) );
  OAI21X4 U113 ( .A0(n105), .A1(n109), .B0(n106), .Y(n104) );
  NOR2X4 U116 ( .A(n193), .B(n196), .Y(n105) );
  NOR2X4 U122 ( .A(n197), .B(n200), .Y(n108) );
  OAI21X4 U125 ( .A0(n114), .A1(n112), .B0(n113), .Y(n111) );
  ADDFHX4 U160 ( .A(n219), .B(n232), .CI(n246), .CO(n174), .S(n175) );
  ADDFHX4 U164 ( .A(n221), .B(n234), .CI(n248), .CO(n182), .S(n183) );
  ADDFHX4 U165 ( .A(n190), .B(n187), .CI(n262), .CO(n184), .S(n185) );
  ADDFHX4 U166 ( .A(n222), .B(n397), .CI(n249), .CO(n186), .S(n187) );
  ADDFHX4 U167 ( .A(n263), .B(n194), .CI(n191), .CO(n188), .S(n189) );
  ADDFHX4 U169 ( .A(n264), .B(n198), .CI(n195), .CO(n192), .S(n193) );
  ADDFHX4 U171 ( .A(n238), .B(n202), .CI(n199), .CO(n196), .S(n197) );
  XNOR2X4 U258 ( .A(a_8_), .B(n422), .Y(n305) );
  XNOR2X2 U323 ( .A(a_7_), .B(n422), .Y(n306) );
  OAI22XL U324 ( .A0(n281), .A1(n400), .B0(n280), .B1(n401), .Y(n221) );
  OAI22X2 U325 ( .A0(n305), .A1(n418), .B0(n306), .B1(n419), .Y(n248) );
  ADDFHX2 U326 ( .A(n220), .B(n233), .CI(n247), .CO(n178), .S(n179) );
  OAI22X1 U327 ( .A0(n304), .A1(n418), .B0(n305), .B1(n419), .Y(n247) );
  XNOR2X1 U328 ( .A(a_3_), .B(n421), .Y(n325) );
  CLKINVX3 U329 ( .A(n75), .Y(n74) );
  XOR2X2 U330 ( .A(n69), .B(n28), .Y(product_14_) );
  NAND2X2 U331 ( .A(n347), .B(n417), .Y(n402) );
  CLKBUFX8 U332 ( .A(n360), .Y(n422) );
  INVXL U333 ( .A(n111), .Y(n110) );
  ADDFX2 U334 ( .A(n228), .B(n161), .CI(n156), .CO(n153), .S(n154) );
  OAI21XL U335 ( .A0(n47), .A1(n75), .B0(n48), .Y(n46) );
  OAI22X2 U336 ( .A0(n22), .A1(n291), .B0(n292), .B1(n349), .Y(n233) );
  OAI22X2 U337 ( .A0(n22), .A1(n290), .B0(n291), .B1(n349), .Y(n232) );
  OAI22X1 U338 ( .A0(n22), .A1(n289), .B0(n290), .B1(n349), .Y(n231) );
  OAI22X1 U339 ( .A0(n316), .A1(n402), .B0(n315), .B1(n355), .Y(n258) );
  AOI2BB1X2 U340 ( .A0N(n75), .A1N(n72), .B0(n71), .Y(n69) );
  OAI22X1 U341 ( .A0(n319), .A1(n355), .B0(n320), .B1(n402), .Y(n262) );
  NAND2BX1 U342 ( .AN(n67), .B(n68), .Y(n28) );
  OAI22X1 U343 ( .A0(n316), .A1(n355), .B0(n317), .B1(n402), .Y(n259) );
  NAND2X1 U344 ( .A(n160), .B(n164), .Y(n59) );
  OAI22XL U345 ( .A0(n301), .A1(n20), .B0(n302), .B1(n350), .Y(n244) );
  AOI21X1 U346 ( .A0(n402), .A1(n355), .B0(n358), .Y(n163) );
  OAI2BB1X1 U347 ( .A0N(n153), .A1N(n150), .B0(n412), .Y(n409) );
  NAND2BX4 U348 ( .AN(n81), .B(n82), .Y(n31) );
  OAI2BB1X1 U349 ( .A0N(n111), .A1N(n393), .B0(n109), .Y(n107) );
  INVX1 U350 ( .A(n108), .Y(n393) );
  AOI31X1 U351 ( .A0(n394), .A1(n74), .A2(n61), .B0(n55), .Y(n53) );
  INVX1 U352 ( .A(n56), .Y(n394) );
  OAI22X1 U353 ( .A0(n400), .A1(n274), .B0(n273), .B1(n403), .Y(n214) );
  INVX2 U354 ( .A(n399), .Y(n400) );
  NAND2BX1 U355 ( .AN(n78), .B(n79), .Y(n30) );
  AOI21X4 U356 ( .A0(n101), .A1(n97), .B0(n98), .Y(n96) );
  INVX3 U357 ( .A(n102), .Y(n101) );
  INVX2 U358 ( .A(n99), .Y(n97) );
  NAND2BX1 U359 ( .AN(n51), .B(n52), .Y(n404) );
  OAI2BB1X1 U360 ( .A0N(n418), .A1N(n419), .B0(n422), .Y(n241) );
  OAI22X4 U361 ( .A0(n323), .A1(n402), .B0(n322), .B1(n355), .Y(n265) );
  NAND2XL U362 ( .A(n61), .B(n49), .Y(n47) );
  NOR2BX1 U363 ( .AN(n424), .B(n22), .Y(n240) );
  CLKINVX3 U364 ( .A(n416), .Y(n22) );
  NOR2X2 U365 ( .A(n173), .B(n176), .Y(n78) );
  NAND2BX1 U366 ( .AN(n39), .B(n40), .Y(n24) );
  OAI21X1 U367 ( .A0(n78), .A1(n82), .B0(n79), .Y(n77) );
  NAND2BX1 U368 ( .AN(n416), .B(n345), .Y(n349) );
  XOR2X1 U369 ( .A(n102), .B(n408), .Y(product_8_) );
  AOI32X1 U370 ( .A0(n413), .A1(n270), .A2(n210), .B0(n269), .B1(n256), .Y(
        n122) );
  XOR2X1 U371 ( .A(n60), .B(n27), .Y(product_15_) );
  AOI22X1 U372 ( .A0(n46), .A1(n412), .B0(n153), .B1(n150), .Y(n41) );
  OAI2BB1X1 U373 ( .A0N(n349), .A1N(n22), .B0(n423), .Y(n226) );
  OAI22X2 U374 ( .A0(n320), .A1(n417), .B0(n321), .B1(n402), .Y(n263) );
  OAI22X1 U375 ( .A0(n283), .A1(n401), .B0(n348), .B1(n284), .Y(n224) );
  NAND2X2 U376 ( .A(n401), .B(b_6_), .Y(n348) );
  OAI22X2 U377 ( .A0(n318), .A1(n417), .B0(n319), .B1(n402), .Y(n261) );
  XNOR2X2 U378 ( .A(n46), .B(n409), .Y(product_17_) );
  OAI22X2 U379 ( .A0(n303), .A1(n418), .B0(n304), .B1(n419), .Y(n246) );
  OAI22X2 U380 ( .A0(n321), .A1(n417), .B0(n322), .B1(n402), .Y(n264) );
  OAI22X2 U381 ( .A0(n306), .A1(n418), .B0(n307), .B1(n419), .Y(n249) );
  BUFX8 U382 ( .A(n235), .Y(n397) );
  OAI22X2 U383 ( .A0(n294), .A1(n420), .B0(n293), .B1(n22), .Y(n235) );
  XNOR2X2 U384 ( .A(a_4_), .B(n423), .Y(n294) );
  ADDFHX4 U385 ( .A(n225), .B(n265), .CI(n252), .CO(n198), .S(n199) );
  XNOR2X2 U386 ( .A(a_4_), .B(n421), .Y(n324) );
  INVX2 U387 ( .A(n236), .Y(n395) );
  CLKINVX4 U388 ( .A(n395), .Y(n396) );
  XNOR2X2 U389 ( .A(n74), .B(n406), .Y(product_13_) );
  OAI22X1 U390 ( .A0(n309), .A1(n419), .B0(n308), .B1(n418), .Y(n251) );
  XNOR2X2 U391 ( .A(a_5_), .B(n421), .Y(n323) );
  OAI22X1 U392 ( .A0(n295), .A1(n420), .B0(n294), .B1(n22), .Y(n236) );
  OAI22X1 U393 ( .A0(n282), .A1(n400), .B0(n281), .B1(n401), .Y(n222) );
  XNOR2X2 U394 ( .A(a_6_), .B(n421), .Y(n322) );
  AOI21X2 U395 ( .A0(n119), .A1(n414), .B0(n415), .Y(n114) );
  XNOR2X1 U396 ( .A(a_10_), .B(n422), .Y(n303) );
  INVX1 U397 ( .A(n72), .Y(n70) );
  ADDFHX2 U398 ( .A(n186), .B(n183), .CI(n261), .CO(n180), .S(n181) );
  ADDFHX2 U399 ( .A(n182), .B(n179), .CI(n260), .CO(n176), .S(n177) );
  ADDFHX2 U400 ( .A(n178), .B(n175), .CI(n259), .CO(n172), .S(n173) );
  ADDFX2 U401 ( .A(n174), .B(n258), .CI(n171), .CO(n168), .S(n169) );
  XOR2X2 U402 ( .A(n91), .B(n407), .Y(product_10_) );
  INVX1 U403 ( .A(n105), .Y(n140) );
  NOR2X1 U404 ( .A(n207), .B(n268), .Y(n120) );
  ADDFHX1 U405 ( .A(n240), .B(n267), .CI(n254), .CO(n204), .S(n205) );
  OAI22X2 U406 ( .A0(n325), .A1(n402), .B0(n324), .B1(n417), .Y(n267) );
  OAI22X1 U407 ( .A0(n310), .A1(n419), .B0(n309), .B1(n418), .Y(n252) );
  NOR2X2 U408 ( .A(n169), .B(n172), .Y(n72) );
  AOI21X2 U409 ( .A0(n93), .A1(n411), .B0(n88), .Y(n86) );
  NAND2X1 U410 ( .A(n173), .B(n176), .Y(n79) );
  NAND2X1 U411 ( .A(n169), .B(n172), .Y(n73) );
  XOR2X1 U412 ( .A(n53), .B(n404), .Y(product_16_) );
  ADDFHX2 U413 ( .A(n266), .B(n405), .CI(n203), .CO(n200), .S(n201) );
  BUFX3 U414 ( .A(n253), .Y(n405) );
  NOR2X2 U415 ( .A(n72), .B(n67), .Y(n61) );
  NAND2X2 U416 ( .A(n197), .B(n200), .Y(n109) );
  CLKBUFX8 U417 ( .A(n349), .Y(n420) );
  CLKINVX3 U418 ( .A(n348), .Y(n399) );
  INVX1 U419 ( .A(n359), .Y(n398) );
  XNOR2X2 U420 ( .A(a_3_), .B(n423), .Y(n295) );
  OAI22X4 U421 ( .A0(n293), .A1(n420), .B0(n292), .B1(n22), .Y(n234) );
  NAND2X2 U422 ( .A(n418), .B(n346), .Y(n350) );
  OAI21X1 U423 ( .A0(n122), .A1(n120), .B0(n121), .Y(n119) );
  NAND2X1 U424 ( .A(n411), .B(n90), .Y(n407) );
  OAI22X1 U425 ( .A0(n317), .A1(n417), .B0(n318), .B1(n402), .Y(n260) );
  XNOR2X4 U426 ( .A(a_12_), .B(n421), .Y(n316) );
  XNOR2X2 U427 ( .A(a_5_), .B(n422), .Y(n308) );
  XNOR2X2 U428 ( .A(a_5_), .B(n423), .Y(n293) );
  XNOR2X2 U429 ( .A(a_9_), .B(n422), .Y(n304) );
  OAI22X1 U430 ( .A0(n312), .A1(n419), .B0(n311), .B1(n418), .Y(n254) );
  BUFX8 U432 ( .A(n403), .Y(n401) );
  XNOR2XL U433 ( .A(n423), .B(b_6_), .Y(n403) );
  OAI22X2 U434 ( .A0(n296), .A1(n420), .B0(n295), .B1(n22), .Y(n237) );
  ADDFHX1 U435 ( .A(n223), .B(n396), .CI(n250), .CO(n190), .S(n191) );
  NAND2X2 U437 ( .A(n138), .B(n95), .Y(n33) );
  OAI22XL U438 ( .A0(n279), .A1(n400), .B0(n278), .B1(n401), .Y(n219) );
  OAI22XL U439 ( .A0(n277), .A1(n401), .B0(n278), .B1(n400), .Y(n218) );
  ADDFHX1 U440 ( .A(n217), .B(n230), .CI(n257), .CO(n166), .S(n167) );
  OAI22X1 U441 ( .A0(n315), .A1(n402), .B0(n358), .B1(n417), .Y(n257) );
  OAI22X1 U442 ( .A0(n288), .A1(n22), .B0(n289), .B1(n420), .Y(n230) );
  OAI22XL U443 ( .A0(n287), .A1(n22), .B0(n288), .B1(n420), .Y(n229) );
  OAI21X2 U444 ( .A0(n67), .A1(n73), .B0(n68), .Y(n62) );
  XNOR2X2 U445 ( .A(a_7_), .B(n421), .Y(n321) );
  INVX1 U446 ( .A(a_2_), .Y(n282) );
  XNOR2X1 U447 ( .A(a_6_), .B(n423), .Y(n292) );
  XNOR2X1 U448 ( .A(a_10_), .B(n421), .Y(n318) );
  XNOR2X1 U449 ( .A(a_11_), .B(n421), .Y(n317) );
  XNOR2X2 U450 ( .A(a_13_), .B(n421), .Y(n315) );
  BUFX3 U451 ( .A(n343), .Y(n424) );
  NAND2X1 U452 ( .A(n181), .B(n184), .Y(n90) );
  INVX1 U453 ( .A(n62), .Y(n64) );
  NAND2X1 U454 ( .A(n97), .B(n100), .Y(n408) );
  NAND2X1 U455 ( .A(n70), .B(n73), .Y(n406) );
  NAND2BX1 U456 ( .AN(n56), .B(n59), .Y(n27) );
  XNOR2X1 U457 ( .A(a_2_), .B(n423), .Y(n296) );
  XNOR2X1 U458 ( .A(a_1_), .B(n423), .Y(n297) );
  XOR2X1 U459 ( .A(n421), .B(b_0_), .Y(n347) );
  BUFX3 U460 ( .A(n350), .Y(n419) );
  OR2X2 U462 ( .A(n153), .B(n150), .Y(n412) );
  CLKBUFX8 U463 ( .A(n359), .Y(n423) );
  XOR2X2 U464 ( .A(n110), .B(n36), .Y(product_6_) );
  OAI22X1 U465 ( .A0(n297), .A1(n420), .B0(n296), .B1(n22), .Y(n238) );
  OAI22X1 U466 ( .A0(n297), .A1(n22), .B0(n420), .B1(n298), .Y(n239) );
  XOR2X1 U467 ( .A(n422), .B(b_4_), .Y(n416) );
  XNOR2X2 U468 ( .A(n80), .B(n30), .Y(product_12_) );
  OAI21XL U469 ( .A0(n64), .A1(n56), .B0(n59), .Y(n55) );
  OAI22X1 U470 ( .A0(n324), .A1(n402), .B0(n323), .B1(n417), .Y(n266) );
  OAI22XL U471 ( .A0(n311), .A1(n419), .B0(n310), .B1(n418), .Y(n253) );
  XNOR2X2 U472 ( .A(a_8_), .B(n421), .Y(n320) );
  AOI21X2 U473 ( .A0(n74), .A1(n61), .B0(n62), .Y(n60) );
  OAI21X2 U474 ( .A0(n83), .A1(n81), .B0(n82), .Y(n80) );
  NOR2X2 U475 ( .A(n78), .B(n81), .Y(n76) );
  OAI22X1 U476 ( .A0(n302), .A1(n418), .B0(n303), .B1(n419), .Y(n245) );
  ADDFHX2 U477 ( .A(n224), .B(n237), .CI(n251), .CO(n194), .S(n195) );
  AND2X2 U478 ( .A(n140), .B(n106), .Y(n410) );
  XOR2X4 U479 ( .A(n107), .B(n410), .Y(product_7_) );
  ADDFX2 U480 ( .A(n243), .B(n166), .CI(n162), .CO(n159), .S(n160) );
  NAND2BXL U481 ( .AN(n424), .B(n423), .Y(n299) );
  NAND2BXL U482 ( .AN(n424), .B(n421), .Y(n329) );
  NAND2BX1 U483 ( .AN(n108), .B(n109), .Y(n36) );
  NOR2X2 U484 ( .A(n160), .B(n164), .Y(n56) );
  OAI22XL U485 ( .A0(n301), .A1(n419), .B0(n300), .B1(n418), .Y(n243) );
  OAI22XL U486 ( .A0(n327), .A1(n417), .B0(n402), .B1(n328), .Y(n270) );
  AND2X2 U487 ( .A(n205), .B(n206), .Y(n415) );
  XNOR2X1 U488 ( .A(a_10_), .B(n423), .Y(n288) );
  OAI22X1 U489 ( .A0(n280), .A1(n400), .B0(n279), .B1(n401), .Y(n220) );
  NOR2XL U490 ( .A(n271), .B(n400), .Y(n211) );
  INVXL U491 ( .A(n73), .Y(n71) );
  OAI22XL U492 ( .A0(n286), .A1(n22), .B0(n287), .B1(n420), .Y(n228) );
  OR2X2 U493 ( .A(n205), .B(n206), .Y(n414) );
  OAI22XL U494 ( .A0(n285), .A1(n420), .B0(n22), .B1(n398), .Y(n147) );
  ADDHX1 U495 ( .A(n209), .B(n255), .CO(n206), .S(n207) );
  NAND2BXL U496 ( .AN(n424), .B(n422), .Y(n314) );
  XNOR2X1 U497 ( .A(a_3_), .B(n422), .Y(n310) );
  XNOR2X1 U498 ( .A(a_4_), .B(n422), .Y(n309) );
  ADDFX1 U499 ( .A(n163), .B(n215), .CI(n242), .CO(n155), .S(n156) );
  OAI22XL U500 ( .A0(n274), .A1(n401), .B0(n275), .B1(n400), .Y(n215) );
  OAI22XL U501 ( .A0(n300), .A1(n419), .B0(n418), .B1(n357), .Y(n242) );
  XNOR2X1 U502 ( .A(a_1_), .B(n422), .Y(n312) );
  XNOR2X1 U503 ( .A(a_2_), .B(n422), .Y(n311) );
  ADDFHX1 U504 ( .A(n218), .B(n231), .CI(n245), .CO(n170), .S(n171) );
  OAI22X2 U505 ( .A0(n308), .A1(n419), .B0(n307), .B1(n418), .Y(n250) );
  INVXL U506 ( .A(n421), .Y(n358) );
  INVXL U507 ( .A(n422), .Y(n357) );
  INVXL U508 ( .A(n163), .Y(n157) );
  XNOR2X1 U509 ( .A(n143), .B(n211), .Y(n23) );
  ADDFXL U510 ( .A(n226), .B(n147), .CI(n212), .CO(n143), .S(n144) );
  OAI22XL U511 ( .A0(n272), .A1(n400), .B0(n271), .B1(n401), .Y(n212) );
  INVXL U512 ( .A(n94), .Y(n138) );
  AOI21XL U513 ( .A0(n49), .A1(n62), .B0(n50), .Y(n48) );
  OAI21XL U514 ( .A0(n51), .A1(n59), .B0(n52), .Y(n50) );
  INVX1 U515 ( .A(n90), .Y(n88) );
  NOR2X1 U516 ( .A(n56), .B(n51), .Y(n49) );
  INVXL U517 ( .A(n100), .Y(n98) );
  NOR2X1 U518 ( .A(n154), .B(n159), .Y(n51) );
  NAND2X1 U519 ( .A(n201), .B(n204), .Y(n113) );
  NOR2X2 U520 ( .A(n201), .B(n204), .Y(n112) );
  NAND2X2 U521 ( .A(n177), .B(n180), .Y(n82) );
  INVXL U522 ( .A(a_6_), .Y(n278) );
  OR2X4 U523 ( .A(n181), .B(n184), .Y(n411) );
  NAND2X2 U524 ( .A(n165), .B(n168), .Y(n68) );
  NAND2X1 U525 ( .A(n154), .B(n159), .Y(n52) );
  NAND2X2 U526 ( .A(n185), .B(n188), .Y(n95) );
  NAND2X2 U527 ( .A(n193), .B(n196), .Y(n106) );
  INVX1 U528 ( .A(a_12_), .Y(n272) );
  INVX1 U529 ( .A(a_1_), .Y(n283) );
  INVX1 U530 ( .A(a_7_), .Y(n277) );
  INVXL U531 ( .A(a_8_), .Y(n276) );
  INVXL U532 ( .A(a_9_), .Y(n275) );
  INVXL U533 ( .A(a_10_), .Y(n274) );
  INVX1 U534 ( .A(a_11_), .Y(n273) );
  INVX1 U535 ( .A(a_3_), .Y(n281) );
  INVX1 U536 ( .A(a_4_), .Y(n280) );
  INVXL U537 ( .A(a_5_), .Y(n279) );
  XOR2X1 U538 ( .A(n41), .B(n24), .Y(product_18_) );
  OR2X2 U539 ( .A(n269), .B(n256), .Y(n413) );
  INVX1 U540 ( .A(a_13_), .Y(n271) );
  OAI22X1 U541 ( .A0(n327), .A1(n402), .B0(n326), .B1(n417), .Y(n269) );
  OAI22X1 U542 ( .A0(n326), .A1(n402), .B0(n325), .B1(n417), .Y(n268) );
  NOR2BX1 U543 ( .AN(n424), .B(n418), .Y(n256) );
  NOR2X1 U544 ( .A(n149), .B(n146), .Y(n39) );
  NAND2X1 U545 ( .A(n207), .B(n268), .Y(n121) );
  NAND2X1 U546 ( .A(n149), .B(n146), .Y(n40) );
  ADDFX2 U547 ( .A(n244), .B(n170), .CI(n167), .CO(n164), .S(n165) );
  ADDFX2 U548 ( .A(n152), .B(n227), .CI(n155), .CO(n149), .S(n150) );
  OAI22X1 U549 ( .A0(n286), .A1(n420), .B0(n285), .B1(n22), .Y(n227) );
  OAI22X1 U550 ( .A0(n402), .A1(n358), .B0(n329), .B1(n417), .Y(n210) );
  INVX1 U551 ( .A(n424), .Y(n284) );
  OAI21XL U552 ( .A0(n41), .A1(n39), .B0(n40), .Y(n38) );
  OAI22X1 U553 ( .A0(n419), .A1(n357), .B0(n418), .B1(n314), .Y(n209) );
  OAI22X1 U554 ( .A0(n312), .A1(n418), .B0(n419), .B1(n313), .Y(n255) );
  ADDHX2 U555 ( .A(n208), .B(n239), .CO(n202), .S(n203) );
  OAI22X1 U556 ( .A0(n420), .A1(n398), .B0(n22), .B1(n299), .Y(n208) );
  XNOR2X1 U557 ( .A(a_13_), .B(n422), .Y(n300) );
  XNOR2X1 U558 ( .A(a_13_), .B(n423), .Y(n285) );
  INVX1 U560 ( .A(b_0_), .Y(n355) );
  XNOR2X1 U561 ( .A(a_12_), .B(n422), .Y(n301) );
  XNOR2X1 U562 ( .A(a_12_), .B(n423), .Y(n286) );
  XNOR2X1 U563 ( .A(a_1_), .B(n421), .Y(n327) );
  XNOR2X2 U564 ( .A(a_9_), .B(n421), .Y(n319) );
  XNOR2X1 U565 ( .A(a_9_), .B(n423), .Y(n289) );
  XNOR2X1 U566 ( .A(a_11_), .B(n422), .Y(n302) );
  XNOR2X1 U567 ( .A(a_7_), .B(n423), .Y(n291) );
  XNOR2X1 U568 ( .A(a_8_), .B(n423), .Y(n290) );
  XNOR2X1 U569 ( .A(a_11_), .B(n423), .Y(n287) );
  XNOR2X1 U570 ( .A(a_2_), .B(n421), .Y(n326) );
  XOR2X1 U571 ( .A(n422), .B(b_2_), .Y(n346) );
  XOR2X1 U572 ( .A(n423), .B(b_4_), .Y(n345) );
  ADDFX2 U573 ( .A(n213), .B(n151), .CI(n148), .CO(n145), .S(n146) );
  INVX1 U574 ( .A(n147), .Y(n148) );
  OAI22X1 U575 ( .A0(n272), .A1(n401), .B0(n273), .B1(n400), .Y(n213) );
  XNOR2X1 U576 ( .A(n423), .B(n424), .Y(n298) );
  XNOR2X1 U577 ( .A(n422), .B(n424), .Y(n313) );
  XNOR2X1 U578 ( .A(n421), .B(n424), .Y(n328) );
  ADDFX2 U579 ( .A(n157), .B(n241), .CI(n214), .CO(n151), .S(n152) );
  OAI22X1 U580 ( .A0(n283), .A1(n348), .B0(n282), .B1(n401), .Y(n223) );
  OAI22X1 U581 ( .A0(n276), .A1(n401), .B0(n277), .B1(n400), .Y(n217) );
  NOR2BX1 U582 ( .AN(n424), .B(n401), .Y(n225) );
  ADDFX2 U583 ( .A(n163), .B(n216), .CI(n229), .CO(n161), .S(n162) );
  OAI22X1 U584 ( .A0(n275), .A1(n401), .B0(n276), .B1(n400), .Y(n216) );
  XOR2X1 U585 ( .A(n37), .B(n23), .Y(product_20_) );
  AOI21X4 U586 ( .A0(n101), .A1(n92), .B0(n93), .Y(n91) );
  NAND2X2 U587 ( .A(n92), .B(n411), .Y(n85) );
  XNOR2X1 U588 ( .A(a_6_), .B(n422), .Y(n307) );
  CLKINVX4 U589 ( .A(n84), .Y(n83) );
  BUFX12 U1 ( .A(n361), .Y(n421) );
  BUFX12 U2 ( .A(n20), .Y(n418) );
  XNOR2X2 U3 ( .A(n421), .B(b_2_), .Y(n20) );
  BUFX4 U4 ( .A(n355), .Y(n417) );
endmodule


module MIX_0 ( AL, YU, YL, Y );
  input [6:0] AL;
  input [12:0] YU;
  input [18:0] YL;
  output [12:0] Y;
  wire   N18, DIFM_13_, N32, N9, N8, N7, N6, N5, N4, N3, N2, N14, N13, N12,
         N11, N10, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96,
         SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3,
         SYNOPSYS_UNCONNECTED__4, SYNOPSYS_UNCONNECTED__5,
         SYNOPSYS_UNCONNECTED__6, SYNOPSYS_UNCONNECTED__7,
         SYNOPSYS_UNCONNECTED__8, n16, n97;
  wire   [13:1] DIF;
  wire   [14:1] PRODM;
  assign N9 = YU[7];
  assign N8 = YU[6];
  assign N7 = YU[5];
  assign N6 = YU[4];
  assign N5 = YU[3];
  assign N4 = YU[2];
  assign N3 = YU[1];
  assign N2 = YU[0];
  assign N14 = YU[12];
  assign N13 = YU[11];
  assign N12 = YU[10];
  assign N11 = YU[9];
  assign N10 = YU[8];

  CLKINVX3 U3 ( .A(n1), .Y(n2) );
  INVX1 U5 ( .A(DIF[11]), .Y(n33) );
  NAND2XL U6 ( .A(n30), .B(n62), .Y(n26) );
  NOR2BX2 U7 ( .AN(n23), .B(PRODM[9]), .Y(n6) );
  NOR2X1 U10 ( .A(n35), .B(n31), .Y(n21) );
  INVX2 U11 ( .A(n34), .Y(n35) );
  XNOR2X1 U12 ( .A(PRODM[1]), .B(n74), .Y(n88) );
  NOR2X1 U13 ( .A(PRODM[3]), .B(PRODM[4]), .Y(n52) );
  XOR2X2 U14 ( .A(DIF[10]), .B(n37), .Y(n96) );
  CLKINVX3 U15 ( .A(n12), .Y(n13) );
  INVX1 U16 ( .A(DIFM_13_), .Y(n12) );
  BUFX8 U17 ( .A(n72), .Y(n31) );
  XNOR2X1 U18 ( .A(DIF[8]), .B(n40), .Y(n1) );
  OAI21X1 U19 ( .A0(n47), .A1(DIF[3]), .B0(n30), .Y(n46) );
  XOR2X4 U20 ( .A(DIF[5]), .B(n45), .Y(n92) );
  NOR3X2 U22 ( .A(PRODM[8]), .B(PRODM[7]), .C(n59), .Y(n23) );
  XOR2X1 U23 ( .A(PRODM[11]), .B(n57), .Y(n78) );
  INVX1 U24 ( .A(N18), .Y(n49) );
  BUFX3 U25 ( .A(n38), .Y(n11) );
  INVX1 U26 ( .A(n62), .Y(n65) );
  NAND3BX2 U27 ( .AN(PRODM[5]), .B(n70), .C(n52), .Y(n62) );
  NAND2BX1 U28 ( .AN(PRODM[6]), .B(n65), .Y(n59) );
  XOR2X1 U29 ( .A(PRODM[10]), .B(n58), .Y(n79) );
  AOI21X1 U30 ( .A0(n66), .A1(n70), .B0(n31), .Y(n67) );
  CLKINVX3 U31 ( .A(n4), .Y(n8) );
  XOR2X1 U32 ( .A(PRODM[12]), .B(n14), .Y(n77) );
  BUFX8 U33 ( .A(DIF[13]), .Y(n30) );
  XNOR2X1 U34 ( .A(DIF[1]), .B(n50), .Y(n3) );
  XNOR2X1 U35 ( .A(DIF[12]), .B(n21), .Y(n4) );
  XOR2X1 U36 ( .A(DIF[4]), .B(n46), .Y(n5) );
  XNOR2X2 U37 ( .A(DIF[3]), .B(n18), .Y(n93) );
  OR2X2 U38 ( .A(n41), .B(n31), .Y(n19) );
  NOR2X2 U40 ( .A(n23), .B(n31), .Y(n15) );
  NOR2X1 U41 ( .A(n24), .B(n31), .Y(n14) );
  NOR2X2 U42 ( .A(n70), .B(n31), .Y(n71) );
  AND2X2 U43 ( .A(n30), .B(n20), .Y(n45) );
  BUFX4 U44 ( .A(n85), .Y(n7) );
  XNOR2X2 U45 ( .A(DIF[2]), .B(n17), .Y(n94) );
  NOR2X2 U46 ( .A(n27), .B(n31), .Y(n36) );
  NOR2X2 U47 ( .A(n29), .B(n31), .Y(n37) );
  CLKINVX4 U48 ( .A(n5), .Y(n9) );
  CLKINVX4 U49 ( .A(n3), .Y(n10) );
  NOR2X1 U50 ( .A(n60), .B(n31), .Y(n61) );
  NOR2X1 U51 ( .A(PRODM[7]), .B(n59), .Y(n60) );
  NOR2XL U52 ( .A(n25), .B(n31), .Y(n57) );
  NOR2X1 U53 ( .A(n6), .B(n31), .Y(n58) );
  NOR2X1 U54 ( .A(n63), .B(n31), .Y(n64) );
  AOI21X1 U55 ( .A0(n70), .A1(n68), .B0(n31), .Y(n69) );
  NOR2XL U56 ( .A(n22), .B(n31), .Y(n73) );
  NOR2X1 U57 ( .A(n39), .B(n31), .Y(n40) );
  NOR3BXL U58 ( .AN(n30), .B(DIF[12]), .C(n34), .Y(DIFM_13_) );
  NOR2X1 U59 ( .A(PRODM[3]), .B(PRODM[4]), .Y(n66) );
  XOR2X1 U60 ( .A(PRODM[5]), .B(n67), .Y(n84) );
  NOR2XL U62 ( .A(n28), .B(n31), .Y(n38) );
  XOR2X2 U63 ( .A(DIF[11]), .B(n36), .Y(n95) );
  NAND2XL U64 ( .A(n30), .B(n47), .Y(n18) );
  NAND2X4 U65 ( .A(n27), .B(n33), .Y(n34) );
  NAND2XL U66 ( .A(n30), .B(n48), .Y(n17) );
  NOR2X4 U67 ( .A(PRODM[1]), .B(N32), .Y(n22) );
  NOR2BX1 U68 ( .AN(n6), .B(PRODM[10]), .Y(n25) );
  INVXL U69 ( .A(PRODM[3]), .Y(n68) );
  XOR2X1 U70 ( .A(PRODM[4]), .B(n69), .Y(n85) );
  XOR2X1 U71 ( .A(PRODM[2]), .B(n73), .Y(n87) );
  XOR2X1 U72 ( .A(PRODM[7]), .B(n64), .Y(n82) );
  NOR2XL U73 ( .A(PRODM[6]), .B(n62), .Y(n63) );
  XOR2X1 U74 ( .A(PRODM[9]), .B(n15), .Y(n80) );
  NOR2BXL U75 ( .AN(n55), .B(n31), .Y(n56) );
  XNOR2X2 U76 ( .A(n97), .B(n19), .Y(n90) );
  OR2X4 U77 ( .A(DIF[2]), .B(n48), .Y(n47) );
  NOR2BX4 U78 ( .AN(n29), .B(DIF[10]), .Y(n27) );
  OR3XL U79 ( .A(n47), .B(DIF[4]), .C(DIF[3]), .Y(n20) );
  NOR2BX1 U80 ( .AN(n25), .B(PRODM[11]), .Y(n24) );
  INVX4 U81 ( .A(n51), .Y(n70) );
  NAND2BX2 U82 ( .AN(PRODM[2]), .B(n22), .Y(n51) );
  NAND2X1 U83 ( .A(n24), .B(n53), .Y(n55) );
  INVX1 U84 ( .A(PRODM[12]), .Y(n53) );
  XNOR2X1 U85 ( .A(PRODM[6]), .B(n26), .Y(n83) );
  XOR2X1 U86 ( .A(PRODM[8]), .B(n61), .Y(n81) );
  XOR2X2 U87 ( .A(PRODM[3]), .B(n71), .Y(n86) );
  XOR2X1 U88 ( .A(PRODM[13]), .B(n56), .Y(n76) );
  NOR2BX1 U89 ( .AN(n30), .B(n49), .Y(n50) );
  NAND2XL U90 ( .A(N32), .B(n30), .Y(n74) );
  INVX1 U91 ( .A(n30), .Y(n72) );
  NOR2BX4 U92 ( .AN(n28), .B(DIF[9]), .Y(n29) );
  NOR3BX1 U93 ( .AN(n30), .B(PRODM[13]), .C(n55), .Y(n54) );
  XOR2X1 U94 ( .A(PRODM[14]), .B(n54), .Y(n75) );
  XOR2X4 U97 ( .A(DIF[9]), .B(n11), .Y(n89) );
  NOR2X4 U98 ( .A(n43), .B(n31), .Y(n44) );
  XOR2X4 U99 ( .A(DIF[6]), .B(n44), .Y(n91) );
  MIX_0_DW01_sub_3 sub_0_root_sub_0_root_sub_55 ( .A({1'b1, 1'b0, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2}), .B({1'b0, 1'b0, 
        YL[18:6]}), .CI(1'b0), .DIFF({SYNOPSYS_UNCONNECTED__0, DIF, N18}) );
  MIX_0_DW01_add_10 add_60 ( .A({1'b0, 1'b0, YL[18:6]}), .B({n75, n76, n77, 
        n78, n79, n80, n81, n82, n83, n84, n7, n86, n87, n88, N32}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__1, SYNOPSYS_UNCONNECTED__2, Y}) );
  MIX_0_DW_mult_uns_7 mult_58 ( .a({n13, n8, n95, n96, n89, n2, n90, n91, n92, 
        n9, n93, n94, n10, N18}), .b(AL), .product({PRODM, N32, 
        SYNOPSYS_UNCONNECTED__3, SYNOPSYS_UNCONNECTED__4, 
        SYNOPSYS_UNCONNECTED__5, SYNOPSYS_UNCONNECTED__6, 
        SYNOPSYS_UNCONNECTED__7, SYNOPSYS_UNCONNECTED__8}) );
  OR2X4 U1 ( .A(DIF[4]), .B(DIF[3]), .Y(n42) );
  INVX4 U2 ( .A(n32), .Y(n39) );
  INVX1 U4 ( .A(DIF[7]), .Y(n16) );
  NAND2BX2 U8 ( .AN(DIF[7]), .B(n41), .Y(n32) );
  INVX1 U9 ( .A(n16), .Y(n97) );
  NOR2BX4 U21 ( .AN(n39), .B(DIF[8]), .Y(n28) );
  NOR3X1 U39 ( .A(n42), .B(DIF[5]), .C(n47), .Y(n43) );
  NAND2BX1 U61 ( .AN(DIF[1]), .B(n49), .Y(n48) );
  NOR4X2 U95 ( .A(DIF[6]), .B(DIF[5]), .C(n47), .D(n42), .Y(n41) );
endmodule


module QUAN_SCAL_FAC_ADAP_0_test_1 ( CLK, IC, RATE, AL, YL, reset, Y, 
        scan_enable, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_si, 
        test_se );
  input [4:0] IC;
  input [1:0] RATE;
  input [6:0] AL;
  output [18:0] YL;
  output [12:0] Y;
  input CLK, reset, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4;
  wire   n3, n4;
  wire   [11:0] WI;
  wire   [12:0] YUT;
  wire   [12:0] YUP;
  wire   [12:0] YU;
  wire   [18:0] YLP;

  CLKBUFXL U1 ( .A(n3), .Y(YL[13]) );
  FUNCTW_0 iFUNCTW ( .I(IC), .RATE(RATE), .WI(WI) );
  FILTD_0 iFILTD ( .WI(WI), .Y(Y), .YUT(YUT) );
  LIMB_0 iLIMB ( .YUP(YUP), .YUT(YUT) );
  DELAY_0220_13_0_test_1 iDELAY_1 ( .x(YUP), .reset(reset), .y(YU), .clk(CLK), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(test_si), .test_se(test_se)
         );
  FILTE_0 iFILTE ( .YUP(YUP), .YL(YL), .YLP(YLP) );
  DELAY_08800_19_0_test_1 iDELAY_2 ( .x(YLP), .reset(reset), .y({YL[18:14], n3, 
        YL[12:8], n4, YL[6:0]}), .clk(CLK), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si(YU[12]), .test_se(test_se) );
  MIX_0 iMIX ( .AL(AL), .YU(YU), .YL({YL[18:14], n3, YL[12:8], n4, YL[6:0]}), 
        .Y(Y) );
  BUFX3 U2 ( .A(n4), .Y(YL[7]) );
endmodule


module IG711 ( LAW, is, imag, inv );
  input [12:0] imag;
  output [7:0] inv;
  input LAW, is;
  wire   n165, inv_4_, n166, n167, n1, n2, n3, n4, n5, n6, inv_5_, inv_6_,
         inv_2_, inv_0_, n11, n12, n13, n14, inv_7_, n16, n17, n18, n19, n20,
         n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48,
         n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62,
         n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76,
         n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90,
         n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103,
         n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114,
         n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125,
         n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136,
         n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147,
         n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158,
         n159, n160, n161, n162, n163, n164;
  assign inv[4] = inv_4_;
  assign inv[5] = inv_5_;
  assign inv[6] = inv_6_;
  assign inv[2] = inv_2_;
  assign inv[0] = inv_0_;
  assign inv[7] = inv_7_;

  NAND2X2 U3 ( .A(n114), .B(n113), .Y(n91) );
  NAND2X2 U4 ( .A(n152), .B(n112), .Y(n141) );
  CLKINVX4 U5 ( .A(n113), .Y(n152) );
  OAI22X2 U6 ( .A0(n128), .A1(n91), .B0(n105), .B1(n111), .Y(n56) );
  AOI21X1 U7 ( .A0(n164), .A1(n163), .B0(n162), .Y(n165) );
  NAND2BX2 U8 ( .AN(n164), .B(n153), .Y(n155) );
  OR2X4 U9 ( .A(n121), .B(n66), .Y(n111) );
  NAND4X1 U10 ( .A(n60), .B(n157), .C(n11), .D(n90), .Y(n2) );
  INVX2 U11 ( .A(n141), .Y(n60) );
  INVX4 U12 ( .A(n162), .Y(n114) );
  XNOR2X1 U13 ( .A(n14), .B(imag[5]), .Y(n105) );
  OAI21X1 U14 ( .A0(imag[5]), .A1(n45), .B0(n18), .Y(n32) );
  INVX4 U15 ( .A(imag[5]), .Y(n22) );
  NAND3X2 U16 ( .A(imag[7]), .B(imag[8]), .C(imag[6]), .Y(n36) );
  INVX1 U17 ( .A(n112), .Y(n153) );
  XNOR2X2 U18 ( .A(n13), .B(imag[9]), .Y(n39) );
  NAND2X2 U19 ( .A(imag[12]), .B(n23), .Y(n29) );
  OAI2BB1X2 U20 ( .A0N(n32), .A1N(n31), .B0(n42), .Y(n112) );
  AOI2BB1X1 U21 ( .A0N(n90), .A1N(n101), .B0(n65), .Y(n72) );
  OR2X4 U22 ( .A(n30), .B(n1), .Y(n140) );
  INVXL U23 ( .A(n29), .Y(n1) );
  OAI221XL U24 ( .A0(n152), .A1(n101), .B0(n102), .B1(n2), .C0(n100), .Y(n103)
         );
  NOR2BX1 U25 ( .AN(n137), .B(n154), .Y(n142) );
  XOR2X1 U26 ( .A(n27), .B(n19), .Y(n12) );
  OAI31XL U27 ( .A0(n130), .A1(n129), .A2(n128), .B0(n127), .Y(n132) );
  INVXL U28 ( .A(n90), .Y(n130) );
  OR3XL U29 ( .A(n137), .B(n128), .C(n162), .Y(n74) );
  NAND2X1 U30 ( .A(n143), .B(n17), .Y(n163) );
  OR2X4 U31 ( .A(n90), .B(n113), .Y(n137) );
  NAND3X2 U32 ( .A(n121), .B(n157), .C(n158), .Y(n162) );
  CLKINVX3 U33 ( .A(n154), .Y(n121) );
  NAND3BX1 U34 ( .AN(n112), .B(n151), .C(n114), .Y(n124) );
  NAND2XL U35 ( .A(n157), .B(n140), .Y(n101) );
  INVX8 U36 ( .A(n145), .Y(n157) );
  NAND2X1 U37 ( .A(LAW), .B(n152), .Y(n164) );
  OAI21XL U38 ( .A0(n151), .A1(n150), .B0(n158), .Y(n156) );
  INVX4 U39 ( .A(n140), .Y(n158) );
  OAI22X1 U40 ( .A0(n105), .A1(n93), .B0(n128), .B1(n92), .Y(n94) );
  NAND2X2 U41 ( .A(imag[9]), .B(imag[10]), .Y(n20) );
  NAND3BX2 U42 ( .AN(n129), .B(n43), .C(n90), .Y(n136) );
  MXI2X1 U43 ( .A(n113), .B(n58), .S0(n143), .Y(n59) );
  OAI21X1 U44 ( .A0(n136), .A1(n62), .B0(n61), .Y(n58) );
  NAND2X2 U45 ( .A(n84), .B(n83), .Y(n85) );
  NAND2BX4 U46 ( .AN(n40), .B(n39), .Y(n154) );
  OAI21X1 U47 ( .A0(n152), .A1(n111), .B0(n110), .Y(n131) );
  NAND4X1 U48 ( .A(n109), .B(n108), .C(n107), .D(n158), .Y(n110) );
  OAI21XL U49 ( .A0(n128), .A1(n136), .B0(n117), .Y(n123) );
  OAI2BB1X2 U50 ( .A0N(n99), .A1N(n153), .B0(n59), .Y(n64) );
  MXI2X1 U51 ( .A(n154), .B(n85), .S0(n143), .Y(n87) );
  OAI21XL U52 ( .A0(n136), .A1(n102), .B0(n100), .Y(n97) );
  NOR2X1 U53 ( .A(n139), .B(n138), .Y(n148) );
  BUFX8 U54 ( .A(n166), .Y(inv_2_) );
  MXI2X2 U55 ( .A(n104), .B(n103), .S0(n16), .Y(n166) );
  INVX1 U56 ( .A(n136), .Y(n139) );
  BUFX3 U57 ( .A(n165), .Y(inv_6_) );
  INVX1 U58 ( .A(imag[10]), .Y(n3) );
  CLKINVX4 U59 ( .A(n29), .Y(n40) );
  XOR2X2 U60 ( .A(n34), .B(imag[8]), .Y(n35) );
  OAI2BB1X4 U61 ( .A0N(n135), .A1N(n18), .B0(n134), .Y(inv[3]) );
  NOR3BX1 U62 ( .AN(n113), .B(n162), .C(n105), .Y(n81) );
  OAI22X1 U63 ( .A0(n112), .A1(n91), .B0(n90), .B1(n111), .Y(n95) );
  NAND3XL U64 ( .A(n60), .B(n157), .C(n11), .Y(n129) );
  AND2X2 U65 ( .A(n158), .B(n121), .Y(n11) );
  AOI21X1 U66 ( .A0(n156), .A1(n155), .B0(n154), .Y(n160) );
  MXI2X1 U67 ( .A(n97), .B(n140), .S0(n118), .Y(n98) );
  MXI2X4 U68 ( .A(n63), .B(n64), .S0(n4), .Y(n167) );
  CLKINVX20 U69 ( .A(n16), .Y(n4) );
  OAI221X4 U70 ( .A0(n2), .A1(n62), .B0(n101), .B1(n112), .C0(n61), .Y(n63) );
  NOR2X2 U71 ( .A(n160), .B(n159), .Y(n161) );
  NOR3X2 U72 ( .A(n20), .B(n36), .C(n19), .Y(n23) );
  INVX1 U73 ( .A(n78), .Y(n79) );
  INVX1 U74 ( .A(n77), .Y(n80) );
  NAND2X1 U75 ( .A(n68), .B(n67), .Y(n82) );
  NOR3X2 U76 ( .A(n57), .B(n56), .C(n55), .Y(n61) );
  OAI31X1 U77 ( .A0(n133), .A1(n132), .A2(n131), .B0(n16), .Y(n134) );
  INVX1 U78 ( .A(n105), .Y(n43) );
  INVX1 U79 ( .A(n137), .Y(n151) );
  BUFX20 U80 ( .A(n167), .Y(inv_0_) );
  MX2X2 U81 ( .A(n18), .B(n163), .S0(n161), .Y(n5) );
  INVX1 U82 ( .A(n118), .Y(n143) );
  AND2X2 U83 ( .A(n38), .B(n37), .Y(n13) );
  NAND4BBX1 U84 ( .AN(n36), .BN(n16), .C(imag[9]), .D(n37), .Y(n28) );
  CLKBUFX2 U85 ( .A(imag[7]), .Y(n6) );
  NAND2X1 U86 ( .A(imag[10]), .B(n18), .Y(n26) );
  INVX8 U87 ( .A(n5), .Y(inv_5_) );
  XOR2X1 U88 ( .A(n28), .B(n3), .Y(n30) );
  NAND2BX1 U89 ( .AN(n137), .B(n114), .Y(n93) );
  OAI22X1 U90 ( .A0(n93), .A1(n102), .B0(n92), .B1(n73), .Y(n55) );
  NOR3BX2 U91 ( .AN(n96), .B(n95), .C(n94), .Y(n100) );
  NOR2X1 U92 ( .A(n2), .B(n73), .Y(n65) );
  NOR3XL U93 ( .A(n81), .B(n70), .C(n69), .Y(n71) );
  NOR2X2 U94 ( .A(n76), .B(n75), .Y(n84) );
  INVX2 U95 ( .A(n125), .Y(n115) );
  INVXL U96 ( .A(n36), .Y(n25) );
  INVX2 U97 ( .A(imag[11]), .Y(n19) );
  OAI2BB1X2 U98 ( .A0N(n99), .A1N(n113), .B0(n98), .Y(n104) );
  NAND3XL U99 ( .A(n72), .B(n74), .C(n71), .Y(n89) );
  NOR2XL U100 ( .A(n145), .B(n18), .Y(n149) );
  NAND3XL U101 ( .A(n114), .B(n113), .C(n130), .Y(n125) );
  OR2X2 U102 ( .A(n118), .B(n101), .Y(n120) );
  NOR2X1 U103 ( .A(n2), .B(n73), .Y(n76) );
  INVXL U104 ( .A(is), .Y(inv_7_) );
  INVX1 U105 ( .A(n163), .Y(n144) );
  INVX1 U106 ( .A(n126), .Y(n107) );
  NOR2XL U107 ( .A(n16), .B(n152), .Y(n150) );
  NAND2XL U108 ( .A(n121), .B(n157), .Y(n126) );
  NAND2X1 U109 ( .A(n99), .B(n130), .Y(n86) );
  INVX1 U110 ( .A(n120), .Y(n99) );
  NAND2X1 U111 ( .A(n125), .B(n124), .Y(n133) );
  INVX1 U112 ( .A(n74), .Y(n75) );
  INVX1 U113 ( .A(LAW), .Y(n18) );
  AOI21X1 U114 ( .A0(n123), .A1(n143), .B0(n122), .Y(n135) );
  NAND3BX2 U115 ( .AN(LAW), .B(n87), .C(n86), .Y(n88) );
  NAND4BXL U116 ( .AN(n130), .B(n49), .C(n48), .D(n157), .Y(n92) );
  NOR2XL U117 ( .A(n154), .B(n112), .Y(n48) );
  NOR2XL U118 ( .A(n140), .B(n113), .Y(n49) );
  OAI21XL U119 ( .A0(n146), .A1(n145), .B0(n144), .Y(n147) );
  NAND2XL U120 ( .A(n152), .B(n90), .Y(n106) );
  NOR3X2 U121 ( .A(n131), .B(n116), .C(n115), .Y(n117) );
  INVX1 U122 ( .A(n124), .Y(n116) );
  NAND2XL U123 ( .A(n77), .B(n78), .Y(n69) );
  INVXL U124 ( .A(n82), .Y(n70) );
  NAND2XL U125 ( .A(n113), .B(n145), .Y(n77) );
  AOI21XL U126 ( .A0(n142), .A1(n141), .B0(n140), .Y(n146) );
  NOR2XL U127 ( .A(n142), .B(n140), .Y(n138) );
  OAI21XL U128 ( .A0(n121), .A1(n120), .B0(n119), .Y(n122) );
  OAI21XL U129 ( .A0(n118), .A1(n140), .B0(n145), .Y(n119) );
  NOR2X1 U130 ( .A(n112), .B(n102), .Y(n67) );
  NOR2XL U131 ( .A(n106), .B(n66), .Y(n68) );
  NAND2XL U132 ( .A(n126), .B(n140), .Y(n127) );
  INVX1 U133 ( .A(n17), .Y(n16) );
  INVXL U134 ( .A(imag[6]), .Y(n31) );
  OR2X4 U135 ( .A(n40), .B(n12), .Y(n145) );
  NAND2BX1 U136 ( .AN(n47), .B(n46), .Y(n128) );
  AOI21XL U137 ( .A0(n54), .A1(imag[3]), .B0(imag[4]), .Y(n47) );
  NAND2X1 U138 ( .A(n45), .B(n18), .Y(n46) );
  NOR2XL U139 ( .A(n157), .B(n90), .Y(n57) );
  NAND2XL U140 ( .A(n145), .B(n154), .Y(n96) );
  XNOR2X1 U141 ( .A(imag[3]), .B(n54), .Y(n102) );
  NOR2XL U142 ( .A(n112), .B(n105), .Y(n109) );
  INVX1 U143 ( .A(n106), .Y(n108) );
  INVX1 U144 ( .A(LAW), .Y(n17) );
  AND2X1 U145 ( .A(n41), .B(n18), .Y(n14) );
  NOR2X1 U146 ( .A(n44), .B(n51), .Y(n54) );
  NAND2XL U147 ( .A(imag[2]), .B(imag[1]), .Y(n44) );
  NAND2BX1 U148 ( .AN(n54), .B(n53), .Y(n73) );
  OAI21XL U149 ( .A0(n52), .A1(n51), .B0(n50), .Y(n53) );
  INVXL U150 ( .A(imag[2]), .Y(n50) );
  INVXL U151 ( .A(imag[1]), .Y(n52) );
  INVXL U152 ( .A(n41), .Y(n45) );
  XOR2XL U153 ( .A(n51), .B(imag[1]), .Y(n62) );
  INVX1 U154 ( .A(imag[12]), .Y(n24) );
  NAND2BXL U155 ( .AN(n16), .B(imag[0]), .Y(n51) );
  NOR2XL U156 ( .A(n16), .B(n36), .Y(n38) );
  AND3X1 U157 ( .A(imag[7]), .B(n18), .C(imag[6]), .Y(n33) );
  NAND2X4 U158 ( .A(n41), .B(n22), .Y(n37) );
  NAND4BX4 U159 ( .AN(n21), .B(imag[4]), .C(imag[2]), .D(imag[0]), .Y(n41) );
  NAND4XL U160 ( .A(n153), .B(n158), .C(n157), .D(n154), .Y(n78) );
  NAND2XL U161 ( .A(n158), .B(n157), .Y(n66) );
  OAI21XL U162 ( .A0(n158), .A1(n18), .B0(n157), .Y(n159) );
  OAI2BB1X1 U163 ( .A0N(n23), .A1N(n37), .B0(n24), .Y(n118) );
  NAND4BXL U164 ( .AN(n26), .B(n25), .C(imag[9]), .D(n37), .Y(n27) );
  NAND2X2 U165 ( .A(imag[3]), .B(imag[1]), .Y(n21) );
  NAND3X2 U166 ( .A(imag[6]), .B(n18), .C(n37), .Y(n42) );
  NAND2X2 U167 ( .A(n33), .B(n37), .Y(n34) );
  NAND2BX4 U168 ( .AN(n40), .B(n35), .Y(n113) );
  XOR2X4 U169 ( .A(n42), .B(n6), .Y(n90) );
  NOR4BX2 U170 ( .AN(n82), .B(n81), .C(n80), .D(n79), .Y(n83) );
  OAI2BB1X4 U171 ( .A0N(n16), .A1N(n89), .B0(n88), .Y(inv[1]) );
  OAI2BB1X4 U172 ( .A0N(n149), .A1N(n148), .B0(n147), .Y(inv_4_) );
endmodule


module COMPRESS_DW01_dec_8 ( A, SUM );
  input [15:0] A;
  output [15:0] SUM;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n16, n18, n19,
         n20, n23, n24, n27, n28, n29, n33, n34, n37, n38, n39, n42, n45, n46,
         n47, n49, n50, n51, n52, SUM_0_, SUM_1_, SUM_2_, SUM_3_, SUM_4_,
         SUM_5_, SUM_6_, SUM_7_, SUM_8_, SUM_9_, SUM_10_, SUM_11_, SUM_12_,
         A_0_, A_12_, n86, n87, n88;
  assign n2 = A[11];
  assign n3 = A[10];
  assign n4 = A[9];
  assign n5 = A[8];
  assign n6 = A[7];
  assign n7 = A[6];
  assign n8 = A[5];
  assign n9 = A[4];
  assign n10 = A[3];
  assign n11 = A[2];
  assign n12 = A[1];
  assign SUM[0] = SUM_0_;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign A_0_ = A[0];
  assign A_12_ = A[12];

  XNOR2X4 U1 ( .A(n13), .B(A_12_), .Y(SUM_12_) );
  NAND2X4 U3 ( .A(n1), .B(n88), .Y(n13) );
  NOR2X4 U13 ( .A(n19), .B(n38), .Y(n1) );
  NAND2X4 U41 ( .A(n46), .B(n39), .Y(n38) );
  NOR2X2 U70 ( .A(n9), .B(n8), .Y(n39) );
  XOR2XL U71 ( .A(n51), .B(n11), .Y(SUM_2_) );
  INVX2 U72 ( .A(n11), .Y(n50) );
  NAND2BX1 U73 ( .AN(n12), .B(SUM_0_), .Y(n52) );
  NOR2X2 U74 ( .A(n47), .B(n52), .Y(n46) );
  NAND2BX1 U75 ( .AN(n10), .B(n50), .Y(n47) );
  INVXL U76 ( .A(n7), .Y(n34) );
  NOR2X2 U77 ( .A(n5), .B(n4), .Y(n20) );
  INVX1 U78 ( .A(A_0_), .Y(SUM_0_) );
  BUFX3 U79 ( .A(n8), .Y(n86) );
  INVX1 U80 ( .A(n2), .Y(n16) );
  XNOR2X1 U81 ( .A(n33), .B(n6), .Y(SUM_7_) );
  INVX1 U82 ( .A(n38), .Y(n37) );
  XNOR2XL U83 ( .A(n27), .B(n5), .Y(SUM_8_) );
  NOR2X2 U84 ( .A(n6), .B(n7), .Y(n28) );
  INVXL U85 ( .A(n28), .Y(n29) );
  NAND2XL U86 ( .A(n37), .B(n34), .Y(n33) );
  NAND2XL U87 ( .A(n24), .B(n37), .Y(n23) );
  XNOR2X1 U88 ( .A(n87), .B(n2), .Y(SUM_11_) );
  NAND2XL U89 ( .A(n1), .B(n18), .Y(n87) );
  XNOR2XL U90 ( .A(n49), .B(n10), .Y(SUM_3_) );
  NAND2XL U91 ( .A(n51), .B(n50), .Y(n49) );
  INVXL U92 ( .A(n52), .Y(n51) );
  INVX1 U93 ( .A(n3), .Y(n18) );
  AND2X2 U94 ( .A(n16), .B(n18), .Y(n88) );
  XOR2X1 U95 ( .A(n42), .B(n86), .Y(SUM_5_) );
  XOR2X1 U96 ( .A(n1), .B(n3), .Y(SUM_10_) );
  XOR2X1 U97 ( .A(n37), .B(n7), .Y(SUM_6_) );
  XNOR2XL U98 ( .A(n23), .B(n4), .Y(SUM_9_) );
  NOR2XL U99 ( .A(n29), .B(n5), .Y(n24) );
  NAND2XL U100 ( .A(n37), .B(n28), .Y(n27) );
  INVXL U101 ( .A(n46), .Y(n45) );
  XOR2X1 U102 ( .A(n12), .B(SUM_0_), .Y(SUM_1_) );
  XNOR2XL U103 ( .A(n45), .B(n9), .Y(SUM_4_) );
  NOR2XL U104 ( .A(n45), .B(n9), .Y(n42) );
  NAND2X2 U105 ( .A(n20), .B(n28), .Y(n19) );
endmodule


module COMPRESS_DW01_inc_7 ( A, SUM );
  input [15:0] A;
  output [15:0] SUM;
  wire   n1, n2, n3, n4, n5, n7, n8, n9, n10, n12, n13, n14, n15, n16, n17,
         n18, n19, n20, n22, n23, n24, n25, n26, n28, n29, n30, n33, n34, n36,
         n38, n40, n41, n42, n43, n44, n45, n47, n48, n50, n51, n52, SUM_1_,
         SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_, SUM_9_,
         SUM_10_, SUM_11_, SUM_12_, SUM_13_, SUM_14_, SUM_15_, A_0_, A_10_,
         A_13_, A_14_, A_15_, n89, n90;
  assign n5 = A[12];
  assign n9 = A[11];
  assign n17 = A[9];
  assign n20 = A[8];
  assign n26 = A[7];
  assign n30 = A[6];
  assign n36 = A[5];
  assign n40 = A[4];
  assign n45 = A[3];
  assign n48 = A[2];
  assign n52 = A[1];
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign SUM[15] = SUM_15_;
  assign A_0_ = A[0];
  assign A_10_ = A[10];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];

  NAND2X4 U31 ( .A(n24), .B(n43), .Y(n23) );
  NOR2X4 U55 ( .A(n44), .B(n51), .Y(n43) );
  NAND2X1 U70 ( .A(n20), .B(n17), .Y(n16) );
  INVX1 U71 ( .A(A_10_), .Y(n13) );
  NOR2X2 U72 ( .A(n16), .B(n13), .Y(n12) );
  AND2X2 U73 ( .A(n12), .B(n22), .Y(n90) );
  INVX4 U74 ( .A(n23), .Y(n22) );
  NOR2XL U75 ( .A(n42), .B(n33), .Y(n89) );
  NOR2X2 U76 ( .A(n33), .B(n25), .Y(n24) );
  INVX4 U77 ( .A(n43), .Y(n42) );
  INVX1 U78 ( .A(n51), .Y(n50) );
  XOR2X1 U79 ( .A(n38), .B(n36), .Y(SUM_5_) );
  NOR2X1 U80 ( .A(n42), .B(n41), .Y(n38) );
  XOR2X1 U81 ( .A(n19), .B(n18), .Y(SUM_9_) );
  NAND2X2 U82 ( .A(n52), .B(A_0_), .Y(n51) );
  INVX1 U83 ( .A(A_13_), .Y(n3) );
  NOR2X1 U84 ( .A(n29), .B(n42), .Y(n28) );
  NAND2X1 U85 ( .A(n34), .B(n30), .Y(n29) );
  CLKINVX2 U86 ( .A(n9), .Y(n10) );
  XOR2X1 U87 ( .A(n14), .B(n13), .Y(SUM_10_) );
  NAND2X2 U88 ( .A(n48), .B(n45), .Y(n44) );
  NAND2X2 U89 ( .A(n40), .B(n36), .Y(n33) );
  NAND2X1 U90 ( .A(n50), .B(n48), .Y(n47) );
  XOR2X2 U91 ( .A(n4), .B(n3), .Y(SUM_13_) );
  NAND2X2 U92 ( .A(n30), .B(n26), .Y(n25) );
  NAND2X1 U93 ( .A(n7), .B(n5), .Y(n4) );
  XOR2X2 U94 ( .A(n89), .B(n30), .Y(SUM_6_) );
  XOR2X2 U95 ( .A(n28), .B(n26), .Y(SUM_7_) );
  NOR2X2 U96 ( .A(n8), .B(n23), .Y(n7) );
  XOR2XL U97 ( .A(n22), .B(n20), .Y(SUM_8_) );
  NAND2XL U98 ( .A(n22), .B(n15), .Y(n14) );
  INVXL U99 ( .A(n33), .Y(n34) );
  INVXL U100 ( .A(n40), .Y(n41) );
  INVXL U101 ( .A(n17), .Y(n18) );
  NAND2XL U102 ( .A(n22), .B(n20), .Y(n19) );
  XOR2X2 U103 ( .A(n7), .B(n5), .Y(SUM_12_) );
  XNOR2X2 U104 ( .A(n90), .B(n10), .Y(SUM_11_) );
  XNOR2XL U105 ( .A(n47), .B(n45), .Y(SUM_3_) );
  INVX1 U106 ( .A(n16), .Y(n15) );
  NAND2X1 U107 ( .A(n12), .B(n9), .Y(n8) );
  XOR2X1 U108 ( .A(n42), .B(n41), .Y(SUM_4_) );
  XOR2XL U109 ( .A(n50), .B(n48), .Y(SUM_2_) );
  XOR2X1 U110 ( .A(n1), .B(A_15_), .Y(SUM_15_) );
  ADDHXL U111 ( .A(A_14_), .B(n2), .CO(n1), .S(SUM_14_) );
  NOR2XL U112 ( .A(n4), .B(n3), .Y(n2) );
  XOR2X1 U113 ( .A(n52), .B(A_0_), .Y(SUM_1_) );
endmodule


module COMPRESS ( SR, LAW, SP );
  input [15:0] SR;
  output [7:0] SP;
  input LAW;
  wire   N10, IM_15_, N28, N29, N30, N31, N32, N33, N34, N35, N36, N37, N38,
         N39, N40, IMp1_9_, IMp1_8_, IMp1_7_, IMp1_6_, IMp1_5_, IMp1_4_,
         IMp1_3_, IMp1_2_, IMp1_1_, IMp1_15_, IMp1_14_, IMp1_13_, IMp1_12_,
         IMp1_11_, IMp1_10_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27,
         n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41,
         n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55,
         n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69,
         n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83,
         n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97,
         n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109,
         n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120,
         n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131,
         n132, SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, SYNOPSYS_UNCONNECTED__3;
  wire   [12:0] IMAG;
  assign N10 = SR[0];

  NAND2BX4 U3 ( .AN(SR[8]), .B(n54), .Y(n28) );
  MXI2X1 U4 ( .A(SR[1]), .B(n69), .S0(n21), .Y(n71) );
  INVX2 U6 ( .A(SR[3]), .Y(n26) );
  INVX1 U7 ( .A(n2), .Y(n4) );
  CLKBUFXL U8 ( .A(SR[4]), .Y(n2) );
  NAND2BX1 U9 ( .AN(n43), .B(n42), .Y(n108) );
  INVX1 U10 ( .A(SR[10]), .Y(n41) );
  NAND2X1 U11 ( .A(N31), .B(n115), .Y(n83) );
  NAND2X1 U12 ( .A(N33), .B(n115), .Y(n92) );
  INVX1 U13 ( .A(n108), .Y(n130) );
  NAND2BX2 U14 ( .AN(SR[12]), .B(n39), .Y(n32) );
  OR2XL U15 ( .A(n24), .B(n90), .Y(n1) );
  NOR2XL U16 ( .A(n24), .B(n118), .Y(IMAG[12]) );
  NOR2XL U17 ( .A(n46), .B(n41), .Y(n40) );
  INVX2 U18 ( .A(n29), .Y(n46) );
  AND2X2 U19 ( .A(LAW), .B(n22), .Y(n115) );
  NAND2XL U20 ( .A(n131), .B(n109), .Y(n110) );
  NAND2XL U21 ( .A(n3), .B(n68), .Y(n65) );
  INVX1 U22 ( .A(n26), .Y(n3) );
  NOR2XL U23 ( .A(n51), .B(n53), .Y(n52) );
  INVX2 U24 ( .A(n56), .Y(n51) );
  NAND4XL U25 ( .A(n1), .B(n92), .C(n91), .D(n116), .Y(IMAG[5]) );
  NOR2X1 U26 ( .A(n43), .B(n38), .Y(n37) );
  CLKINVX3 U27 ( .A(n30), .Y(n43) );
  OR2X2 U28 ( .A(n25), .B(n22), .Y(n113) );
  INVXL U29 ( .A(n23), .Y(n22) );
  NOR3XL U30 ( .A(LAW), .B(n46), .C(n14), .Y(n107) );
  NAND2BX1 U31 ( .AN(n23), .B(n32), .Y(n19) );
  NAND2BX1 U32 ( .AN(n90), .B(n109), .Y(n87) );
  INVX1 U33 ( .A(n113), .Y(n109) );
  NOR2X1 U34 ( .A(n46), .B(n14), .Y(n121) );
  OR2X2 U35 ( .A(n17), .B(n36), .Y(n118) );
  INVX1 U36 ( .A(n32), .Y(n36) );
  NOR3BX1 U37 ( .AN(n18), .B(SR[14]), .C(n23), .Y(IM_15_) );
  NOR2X2 U38 ( .A(n39), .B(n35), .Y(n34) );
  INVX1 U39 ( .A(n4), .Y(n5) );
  NAND3BX4 U40 ( .AN(SR[4]), .B(n26), .C(n62), .Y(n64) );
  MX2X4 U41 ( .A(SR[13]), .B(N40), .S0(n21), .Y(n16) );
  INVX8 U42 ( .A(n23), .Y(n21) );
  INVX4 U43 ( .A(n31), .Y(n39) );
  INVX1 U44 ( .A(n68), .Y(n62) );
  CLKINVX3 U45 ( .A(n64), .Y(n58) );
  INVX1 U46 ( .A(n75), .Y(n132) );
  NAND2X1 U47 ( .A(N30), .B(n115), .Y(n79) );
  CLKINVX3 U48 ( .A(n90), .Y(n125) );
  OR2X2 U49 ( .A(n54), .B(n10), .Y(n97) );
  INVX1 U50 ( .A(SR[9]), .Y(n45) );
  CLKINVX3 U51 ( .A(n97), .Y(n123) );
  CLKINVX3 U52 ( .A(n93), .Y(n124) );
  NAND4BXL U53 ( .AN(n6), .B(n12), .C(n117), .D(n20), .Y(IMAG[11]) );
  NAND4BX1 U54 ( .AN(n112), .B(n111), .C(n110), .D(n20), .Y(IMAG[10]) );
  NAND2BX1 U55 ( .AN(SR[11]), .B(n43), .Y(n31) );
  XNOR2X1 U56 ( .A(SR[13]), .B(n19), .Y(n120) );
  NAND2BX2 U57 ( .AN(SR[10]), .B(n46), .Y(n30) );
  INVX2 U58 ( .A(SR[5]), .Y(n60) );
  NAND2BX2 U59 ( .AN(SR[7]), .B(n51), .Y(n27) );
  MX2X1 U60 ( .A(SR[6]), .B(n55), .S0(n21), .Y(n15) );
  NAND2XL U61 ( .A(SR[6]), .B(n57), .Y(n55) );
  INVX2 U62 ( .A(SR[11]), .Y(n38) );
  INVX2 U63 ( .A(SR[12]), .Y(n35) );
  NAND2X1 U64 ( .A(n8), .B(n68), .Y(n78) );
  NAND2X1 U65 ( .A(n9), .B(n66), .Y(n82) );
  CLKINVX3 U66 ( .A(n78), .Y(n128) );
  NAND2X1 U67 ( .A(N36), .B(n115), .Y(n103) );
  NAND2X1 U68 ( .A(N35), .B(n115), .Y(n99) );
  NAND2X1 U69 ( .A(N34), .B(n115), .Y(n95) );
  NAND2X1 U70 ( .A(N39), .B(n115), .Y(n117) );
  NAND2X1 U71 ( .A(N38), .B(n115), .Y(n111) );
  NAND2X1 U72 ( .A(N37), .B(n115), .Y(n106) );
  CLKINVX3 U73 ( .A(n114), .Y(n131) );
  CLKINVX3 U74 ( .A(n118), .Y(n129) );
  MX2X2 U75 ( .A(n3), .B(n65), .S0(n21), .Y(n9) );
  MXI2X1 U76 ( .A(n41), .B(n40), .S0(n21), .Y(n42) );
  NAND2BX1 U77 ( .AN(n50), .B(n49), .Y(n101) );
  INVXL U78 ( .A(SR[8]), .Y(n48) );
  NAND2X1 U79 ( .A(n57), .B(n61), .Y(n90) );
  NOR2XL U80 ( .A(n24), .B(n97), .Y(n100) );
  NAND2XL U81 ( .A(n122), .B(n109), .Y(n98) );
  NAND2XL U82 ( .A(n121), .B(n109), .Y(n102) );
  NAND2XL U83 ( .A(n123), .B(n109), .Y(n94) );
  NOR2XL U84 ( .A(n24), .B(n93), .Y(n96) );
  NOR2XL U85 ( .A(n113), .B(n82), .Y(n81) );
  NOR2XL U86 ( .A(n118), .B(n113), .Y(n6) );
  NAND2XL U87 ( .A(n124), .B(n109), .Y(n91) );
  NOR2XL U88 ( .A(n113), .B(n86), .Y(n85) );
  INVX1 U89 ( .A(n25), .Y(n24) );
  NAND2X2 U90 ( .A(n7), .B(n64), .Y(n86) );
  MX2X1 U91 ( .A(n5), .B(n63), .S0(n21), .Y(n7) );
  MX2X1 U92 ( .A(SR[2]), .B(n67), .S0(n21), .Y(n8) );
  MX2X1 U93 ( .A(n53), .B(n52), .S0(n21), .Y(n10) );
  MXI2XL U94 ( .A(n48), .B(n47), .S0(n21), .Y(n49) );
  MX2X1 U95 ( .A(n45), .B(n44), .S0(n21), .Y(n14) );
  MX2X1 U96 ( .A(n38), .B(n37), .S0(n21), .Y(n13) );
  NAND2X4 U97 ( .A(n16), .B(n24), .Y(n116) );
  INVX4 U98 ( .A(SR[15]), .Y(n23) );
  NAND2XL U99 ( .A(n130), .B(n109), .Y(n105) );
  NOR2X1 U100 ( .A(n24), .B(n101), .Y(n104) );
  NOR2X1 U101 ( .A(n24), .B(n78), .Y(n80) );
  OR2X2 U102 ( .A(n24), .B(n114), .Y(n12) );
  NOR2X1 U103 ( .A(n24), .B(n86), .Y(n89) );
  NAND2X1 U104 ( .A(N32), .B(n115), .Y(n88) );
  NOR2XL U105 ( .A(n24), .B(n108), .Y(n112) );
  INVX1 U106 ( .A(n101), .Y(n122) );
  NOR2X1 U107 ( .A(n24), .B(n82), .Y(n84) );
  NAND2XL U108 ( .A(n58), .B(n60), .Y(n57) );
  INVX1 U109 ( .A(n86), .Y(n126) );
  INVX1 U110 ( .A(n82), .Y(n127) );
  MXI2XL U111 ( .A(n60), .B(n59), .S0(n21), .Y(n61) );
  NOR2XL U112 ( .A(n58), .B(n60), .Y(n59) );
  OAI22XL U113 ( .A0(n113), .A1(n78), .B0(n24), .B1(n75), .Y(n77) );
  NAND2X1 U114 ( .A(N29), .B(n115), .Y(n76) );
  NAND2XL U115 ( .A(SR[2]), .B(n70), .Y(n67) );
  NAND2XL U116 ( .A(n5), .B(n66), .Y(n63) );
  OR2X4 U117 ( .A(n39), .B(n13), .Y(n114) );
  OR2X4 U118 ( .A(SR[2]), .B(n70), .Y(n68) );
  INVX1 U119 ( .A(SR[7]), .Y(n53) );
  NOR2XL U120 ( .A(n54), .B(n48), .Y(n47) );
  NAND2BXL U121 ( .AN(SR[3]), .B(n62), .Y(n66) );
  NAND2XL U122 ( .A(n15), .B(n56), .Y(n93) );
  MX2X4 U123 ( .A(n35), .B(n34), .S0(n22), .Y(n17) );
  INVX1 U124 ( .A(LAW), .Y(n25) );
  NOR2BX1 U125 ( .AN(n36), .B(SR[13]), .Y(n18) );
  XOR2X1 U126 ( .A(SR[14]), .B(n33), .Y(n119) );
  NOR2X1 U127 ( .A(n18), .B(n23), .Y(n33) );
  NAND2X1 U128 ( .A(N10), .B(n25), .Y(n73) );
  NOR2XL U129 ( .A(n113), .B(n75), .Y(n74) );
  NAND2XL U130 ( .A(N28), .B(n115), .Y(n72) );
  NAND2XL U131 ( .A(SR[1]), .B(N10), .Y(n69) );
  OR2X4 U132 ( .A(SR[1]), .B(N10), .Y(n70) );
  INVX4 U133 ( .A(n28), .Y(n50) );
  NAND4BBX4 U134 ( .AN(n85), .BN(n84), .C(n83), .D(n20), .Y(IMAG[3]) );
  BUFX20 U135 ( .A(n116), .Y(n20) );
  NAND3BX4 U136 ( .AN(SR[6]), .B(n60), .C(n58), .Y(n56) );
  CLKINVX3 U137 ( .A(n27), .Y(n54) );
  NAND2BX4 U138 ( .AN(SR[9]), .B(n50), .Y(n29) );
  NOR2X2 U139 ( .A(n50), .B(n45), .Y(n44) );
  NAND2BX4 U140 ( .AN(n71), .B(n70), .Y(n75) );
  NAND4BX2 U141 ( .AN(n74), .B(n73), .C(n72), .D(n20), .Y(IMAG[0]) );
  NAND3BX4 U142 ( .AN(n77), .B(n76), .C(n20), .Y(IMAG[1]) );
  NAND4BBX2 U143 ( .AN(n81), .BN(n80), .C(n79), .D(n20), .Y(IMAG[2]) );
  NAND4BX2 U144 ( .AN(n89), .B(n88), .C(n87), .D(n20), .Y(IMAG[4]) );
  NAND4BX2 U145 ( .AN(n96), .B(n95), .C(n94), .D(n20), .Y(IMAG[6]) );
  NAND4BX2 U146 ( .AN(n100), .B(n99), .C(n98), .D(n20), .Y(IMAG[7]) );
  NAND4BX2 U147 ( .AN(n104), .B(n103), .C(n102), .D(n20), .Y(IMAG[8]) );
  NAND4BX2 U148 ( .AN(n107), .B(n106), .C(n105), .D(n20), .Y(IMAG[9]) );
  IG711 inst_IG711 ( .LAW(n24), .is(n22), .imag(IMAG), .inv(SP) );
  COMPRESS_DW01_dec_8 sub_76 ( .A({1'b0, IMp1_15_, IMp1_14_, IMp1_13_, 
        IMp1_12_, IMp1_11_, IMp1_10_, IMp1_9_, IMp1_8_, IMp1_7_, IMp1_6_, 
        IMp1_5_, IMp1_4_, IMp1_3_, IMp1_2_, IMp1_1_}), .SUM({
        SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, N40, N39, N38, N37, N36, N35, N34, N33, N32, 
        N31, N30, N29, N28}) );
  COMPRESS_DW01_inc_7 add_67 ( .A({IM_15_, n119, n120, n129, n131, n130, n121, 
        n122, n123, n124, n125, n126, n127, n128, n132, N10}), .SUM({IMp1_15_, 
        IMp1_14_, IMp1_13_, IMp1_12_, IMp1_11_, IMp1_10_, IMp1_9_, IMp1_8_, 
        IMp1_7_, IMp1_6_, IMp1_5_, IMp1_4_, IMp1_3_, IMp1_2_, IMp1_1_, 
        SYNOPSYS_UNCONNECTED__3}) );
endmodule


module G711_0 ( LAW, PCM, mag );
  input [7:0] PCM;
  output [13:0] mag;
  input LAW;
  wire   N44, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43,
         n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85,
         n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99,
         n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, mag_11_, mag_10_, mag_9_, mag_8_;
  assign N44 = PCM[4];
  assign mag[11] = mag_11_;
  assign mag[10] = mag_10_;
  assign mag[9] = mag_9_;
  assign mag[8] = mag_8_;

  MXI2X4 U3 ( .A(n120), .B(n121), .S0(LAW), .Y(mag[12]) );
  NAND2BX1 U4 ( .AN(n15), .B(PCM[0]), .Y(n60) );
  NAND3X4 U5 ( .A(n31), .B(n30), .C(n32), .Y(mag[2]) );
  NAND2X2 U6 ( .A(n91), .B(n94), .Y(n83) );
  NAND3X2 U7 ( .A(n93), .B(n92), .C(n91), .Y(n105) );
  NAND3BX2 U8 ( .AN(n82), .B(n94), .C(n91), .Y(n97) );
  MXI2X4 U9 ( .A(n8), .B(n111), .S0(n16), .Y(n91) );
  NOR2X2 U10 ( .A(n89), .B(n76), .Y(n28) );
  OAI21X2 U11 ( .A0(LAW), .A1(n20), .B0(n57), .Y(mag[0]) );
  NAND2BX2 U12 ( .AN(n15), .B(n67), .Y(n42) );
  CLKINVX2 U13 ( .A(n49), .Y(n33) );
  INVXL U14 ( .A(n15), .Y(n85) );
  NAND3BX2 U15 ( .AN(n6), .B(n78), .C(n77), .Y(mag[6]) );
  NAND2X2 U16 ( .A(n43), .B(n27), .Y(n59) );
  OAI21XL U17 ( .A0(n47), .A1(n46), .B0(n19), .Y(n55) );
  INVXL U18 ( .A(n71), .Y(n47) );
  AOI21X1 U19 ( .A0(n82), .A1(n83), .B0(n81), .Y(n90) );
  INVX2 U20 ( .A(n92), .Y(n82) );
  NAND2XL U21 ( .A(n16), .B(n15), .Y(n65) );
  NAND2BX1 U22 ( .AN(n87), .B(n113), .Y(n88) );
  AOI21XL U23 ( .A0(n96), .A1(n97), .B0(n95), .Y(n103) );
  INVXL U24 ( .A(n93), .Y(n96) );
  INVX1 U25 ( .A(n104), .Y(n95) );
  NAND3X1 U26 ( .A(n67), .B(n113), .C(n60), .Y(n61) );
  CLKINVX3 U27 ( .A(n84), .Y(n67) );
  OR2X2 U28 ( .A(n94), .B(n91), .Y(n75) );
  OAI2BB1X2 U29 ( .A0N(n65), .A1N(n1), .B0(n64), .Y(mag[5]) );
  INVX1 U30 ( .A(n57), .Y(n1) );
  OR2XL U31 ( .A(n76), .B(n116), .Y(n77) );
  MX2X2 U32 ( .A(n2), .B(n106), .S0(n16), .Y(n70) );
  INVX1 U33 ( .A(n59), .Y(n2) );
  AOI21X1 U34 ( .A0(n13), .A1(n16), .B0(n29), .Y(n10) );
  OAI2BB1X1 U35 ( .A0N(n75), .A1N(n83), .B0(n18), .Y(n78) );
  AND2X2 U36 ( .A(n25), .B(n60), .Y(n13) );
  NOR2XL U37 ( .A(n118), .B(n45), .Y(n46) );
  NAND2BX1 U38 ( .AN(n65), .B(n43), .Y(n21) );
  INVX4 U39 ( .A(n79), .Y(n43) );
  XOR2X1 U40 ( .A(n71), .B(n70), .Y(n63) );
  NOR2BX1 U41 ( .AN(n5), .B(n116), .Y(n108) );
  NAND2X1 U42 ( .A(n119), .B(n118), .Y(n120) );
  INVX2 U43 ( .A(n25), .Y(n119) );
  INVX1 U44 ( .A(n16), .Y(n118) );
  NAND2X4 U45 ( .A(n43), .B(n15), .Y(n26) );
  OAI21XL U46 ( .A0(n116), .A1(n109), .B0(n112), .Y(mag_10_) );
  MX2X2 U47 ( .A(n34), .B(n44), .S0(n15), .Y(n3) );
  MXI2X4 U48 ( .A(PCM[0]), .B(PCM[2]), .S0(n43), .Y(n44) );
  MXI2X4 U49 ( .A(n49), .B(n86), .S0(n43), .Y(n58) );
  INVX2 U50 ( .A(n44), .Y(n12) );
  OAI21X1 U51 ( .A0(n79), .A1(n118), .B0(LAW), .Y(n41) );
  NAND2X4 U52 ( .A(PCM[0]), .B(n15), .Y(n27) );
  NAND2BX2 U53 ( .AN(n15), .B(n79), .Y(n25) );
  BUFX20 U54 ( .A(N44), .Y(n15) );
  NAND2X2 U55 ( .A(n70), .B(n71), .Y(n94) );
  MXI2XL U56 ( .A(n11), .B(n119), .S0(n16), .Y(n93) );
  AOI21X1 U57 ( .A0(PCM[2]), .A1(n119), .B0(n72), .Y(n73) );
  AOI21X2 U58 ( .A0(n63), .A1(n19), .B0(n62), .Y(n64) );
  NOR2X1 U59 ( .A(n23), .B(n22), .Y(n24) );
  NAND3BX1 U60 ( .AN(n108), .B(n107), .C(n110), .Y(mag_9_) );
  OAI21XL U61 ( .A0(n15), .A1(n86), .B0(n79), .Y(n114) );
  NAND2X1 U62 ( .A(n3), .B(n19), .Y(n39) );
  INVX1 U63 ( .A(n21), .Y(n20) );
  MXI2X2 U64 ( .A(n58), .B(n4), .S0(n15), .Y(n106) );
  OAI2BB1X2 U65 ( .A0N(n100), .A1N(n52), .B0(n51), .Y(n98) );
  OAI221X2 U66 ( .A0(n10), .A1(n39), .B0(n89), .B1(n87), .C0(n38), .Y(mag[3])
         );
  OAI221X4 U67 ( .A0(LAW), .A1(n103), .B0(n102), .B1(n116), .C0(n101), .Y(
        mag_8_) );
  OAI221X4 U68 ( .A0(n90), .A1(LAW), .B0(n117), .B1(n89), .C0(n88), .Y(mag[7])
         );
  INVX1 U69 ( .A(n114), .Y(n80) );
  AOI2BB2X1 U70 ( .B0(n19), .B1(n118), .A0N(PCM[2]), .A1N(n57), .Y(n38) );
  AOI21X1 U71 ( .A0(n99), .A1(n98), .B0(n53), .Y(n54) );
  CLKINVX3 U72 ( .A(n13), .Y(n9) );
  NAND2X1 U73 ( .A(n33), .B(n43), .Y(n34) );
  NAND2BX2 U74 ( .AN(n16), .B(n26), .Y(n40) );
  OAI2BB1X2 U75 ( .A0N(n37), .A1N(PCM[2]), .B0(n36), .Y(n87) );
  OAI2BB1X2 U76 ( .A0N(n99), .A1N(n5), .B0(n61), .Y(n62) );
  AND2X2 U77 ( .A(PCM[2]), .B(n79), .Y(n4) );
  OAI21X1 U78 ( .A0(n86), .A1(n85), .B0(n73), .Y(n74) );
  NAND2X2 U79 ( .A(n10), .B(n19), .Y(n31) );
  MX2X1 U80 ( .A(n68), .B(n7), .S0(n15), .Y(n5) );
  OAI21X2 U81 ( .A0(n59), .A1(n118), .B0(n21), .Y(n29) );
  MX2X2 U82 ( .A(n49), .B(n86), .S0(n67), .Y(n7) );
  NOR2X1 U83 ( .A(n59), .B(n21), .Y(n23) );
  MXI2X2 U84 ( .A(n12), .B(n58), .S0(n15), .Y(n11) );
  CLKINVX2 U85 ( .A(n26), .Y(n72) );
  OR2X2 U86 ( .A(n41), .B(n40), .Y(n116) );
  NOR2XL U87 ( .A(n66), .B(n57), .Y(n53) );
  MXI2X1 U88 ( .A(n14), .B(n35), .S0(n67), .Y(n36) );
  MXI2X2 U89 ( .A(n3), .B(n80), .S0(n16), .Y(n92) );
  NAND3BX1 U90 ( .AN(n79), .B(n16), .C(n17), .Y(n57) );
  BUFX8 U91 ( .A(PCM[6]), .Y(n16) );
  NAND3BX1 U92 ( .AN(n115), .B(n111), .C(n110), .Y(n112) );
  OAI22XL U93 ( .A0(n117), .A1(n116), .B0(n115), .B1(n114), .Y(mag_11_) );
  NOR2XL U94 ( .A(n109), .B(n89), .Y(n6) );
  INVX1 U95 ( .A(n60), .Y(n14) );
  MXI2X1 U96 ( .A(n7), .B(n50), .S0(n15), .Y(n51) );
  NOR2X1 U97 ( .A(n84), .B(n89), .Y(n22) );
  INVXL U98 ( .A(n48), .Y(n100) );
  NAND2BX1 U99 ( .AN(n105), .B(n94), .Y(n104) );
  INVX1 U100 ( .A(n97), .Y(n81) );
  MXI2XL U101 ( .A(n69), .B(n68), .S0(n15), .Y(n109) );
  NAND3BXL U102 ( .AN(n115), .B(n106), .C(n104), .Y(n107) );
  INVXL U103 ( .A(n89), .Y(n99) );
  INVX1 U104 ( .A(n116), .Y(n113) );
  OR2XL U105 ( .A(n106), .B(n105), .Y(n110) );
  AOI21X4 U106 ( .A0(n72), .A1(n33), .B0(n9), .Y(n8) );
  INVXL U107 ( .A(n86), .Y(n66) );
  NOR2XL U108 ( .A(n49), .B(n85), .Y(n35) );
  NAND2BXL U109 ( .AN(n57), .B(n49), .Y(n32) );
  NAND2BX1 U110 ( .AN(n16), .B(n19), .Y(n115) );
  NAND2XL U111 ( .A(n100), .B(n99), .Y(n101) );
  INVXL U112 ( .A(n98), .Y(n102) );
  INVXL U113 ( .A(PCM[0]), .Y(n52) );
  INVX1 U114 ( .A(n17), .Y(n19) );
  XOR2X1 U115 ( .A(n19), .B(PCM[7]), .Y(n121) );
  INVX1 U116 ( .A(n18), .Y(n17) );
  NOR2X1 U117 ( .A(LAW), .B(n122), .Y(mag[13]) );
  INVX1 U118 ( .A(n121), .Y(n122) );
  INVX1 U119 ( .A(LAW), .Y(n18) );
  INVX1 U120 ( .A(n42), .Y(n37) );
  NAND2X4 U121 ( .A(n26), .B(n25), .Y(n84) );
  NOR2XL U122 ( .A(n116), .B(n42), .Y(n56) );
  OAI221X4 U123 ( .A0(LAW), .A1(n29), .B0(PCM[0]), .B1(n57), .C0(n24), .Y(
        mag[1]) );
  OAI21XL U124 ( .A0(n86), .A1(n85), .B0(n84), .Y(n117) );
  NOR2XL U125 ( .A(n67), .B(n66), .Y(n69) );
  NAND2XL U126 ( .A(PCM[2]), .B(n84), .Y(n68) );
  NOR2XL U127 ( .A(PCM[2]), .B(n84), .Y(n50) );
  NAND2BX1 U128 ( .AN(n85), .B(n84), .Y(n48) );
  XOR2X4 U129 ( .A(n19), .B(PCM[5]), .Y(n79) );
  NAND2BX4 U130 ( .AN(n41), .B(n40), .Y(n89) );
  XOR2X4 U131 ( .A(n19), .B(PCM[1]), .Y(n49) );
  OAI211X2 U132 ( .A0(n49), .A1(n42), .B0(n48), .C0(n27), .Y(n76) );
  AOI31X2 U133 ( .A0(n8), .A1(n19), .A2(n29), .B0(n28), .Y(n30) );
  XOR2X4 U134 ( .A(n19), .B(PCM[3]), .Y(n86) );
  MXI2X4 U135 ( .A(n72), .B(n11), .S0(n16), .Y(n45) );
  NAND2BX4 U136 ( .AN(n16), .B(n45), .Y(n71) );
  NAND3BX4 U137 ( .AN(n56), .B(n55), .C(n54), .Y(mag[4]) );
  CLKINVX3 U138 ( .A(n74), .Y(n111) );
endmodule


module EXPAND_0 ( SIN, LAW, SOUT );
  input [7:0] SIN;
  output [13:0] SOUT;
  input LAW;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, SOUT_0_;
  wire   [13:0] SS;
  assign SOUT[0] = SOUT_0_;

  XOR2X2 U3 ( .A(n34), .B(n36), .Y(SOUT[7]) );
  BUFX4 U4 ( .A(SS[3]), .Y(n1) );
  XNOR2X2 U5 ( .A(n27), .B(n26), .Y(SOUT[4]) );
  MXI2X1 U6 ( .A(SS[10]), .B(SS[9]), .S0(n17), .Y(n41) );
  BUFX8 U7 ( .A(n44), .Y(n16) );
  NOR2X2 U8 ( .A(n16), .B(n33), .Y(n31) );
  NAND2BX4 U9 ( .AN(n17), .B(SS[0]), .Y(n18) );
  MXI2X4 U10 ( .A(SS[0]), .B(SS[1]), .S0(n5), .Y(n19) );
  MX2X2 U11 ( .A(SS[2]), .B(SS[3]), .S0(n7), .Y(n6) );
  NAND2X2 U12 ( .A(n14), .B(n27), .Y(n29) );
  INVX1 U13 ( .A(n18), .Y(SOUT_0_) );
  NOR2X1 U14 ( .A(n18), .B(n44), .Y(n12) );
  AOI21X1 U15 ( .A0(n38), .A1(n37), .B0(n44), .Y(n2) );
  INVX1 U16 ( .A(n2), .Y(n39) );
  NAND2X1 U17 ( .A(n23), .B(n22), .Y(n20) );
  AND2X2 U18 ( .A(n25), .B(n23), .Y(n11) );
  INVXL U19 ( .A(n16), .Y(n23) );
  AND3X4 U20 ( .A(n33), .B(n32), .C(n36), .Y(n38) );
  AOI21XL U21 ( .A0(n15), .A1(n41), .B0(n44), .Y(n3) );
  INVX1 U22 ( .A(n3), .Y(n42) );
  AND3X4 U23 ( .A(n38), .B(n37), .C(n40), .Y(n15) );
  NOR2X2 U24 ( .A(n44), .B(n46), .Y(n9) );
  NOR2X2 U25 ( .A(n25), .B(n6), .Y(n14) );
  AND3X2 U26 ( .A(n15), .B(n41), .C(n43), .Y(n46) );
  NOR2BX4 U27 ( .AN(n30), .B(n29), .Y(n33) );
  XOR2X2 U28 ( .A(n39), .B(n40), .Y(SOUT[9]) );
  XOR2X1 U29 ( .A(n28), .B(n30), .Y(SOUT[5]) );
  XOR2X2 U30 ( .A(n42), .B(n43), .Y(SOUT[11]) );
  MXI2X4 U31 ( .A(SS[6]), .B(SS[5]), .S0(n17), .Y(n32) );
  INVX1 U32 ( .A(n17), .Y(n5) );
  INVX1 U33 ( .A(n17), .Y(n7) );
  INVXL U34 ( .A(n6), .Y(n24) );
  NAND2X2 U35 ( .A(n19), .B(n18), .Y(n22) );
  XNOR2X2 U36 ( .A(n19), .B(n12), .Y(SOUT[1]) );
  INVX1 U37 ( .A(n17), .Y(n4) );
  NAND2X2 U38 ( .A(n33), .B(n32), .Y(n35) );
  MXI2X4 U39 ( .A(SS[6]), .B(SS[7]), .S0(n4), .Y(n36) );
  MXI2X4 U40 ( .A(SS[8]), .B(SS[7]), .S0(n17), .Y(n37) );
  XNOR2X2 U41 ( .A(n32), .B(n31), .Y(SOUT[6]) );
  XOR2X2 U42 ( .A(n21), .B(n20), .Y(SOUT[2]) );
  AOI21X2 U43 ( .A0(n46), .A1(n45), .B0(n16), .Y(SOUT[13]) );
  INVX1 U44 ( .A(n17), .Y(n8) );
  NAND2BX1 U45 ( .AN(n16), .B(n35), .Y(n34) );
  MXI2X4 U46 ( .A(SS[1]), .B(SS[2]), .S0(n8), .Y(n21) );
  MXI2X4 U47 ( .A(SS[9]), .B(SS[8]), .S0(n17), .Y(n40) );
  NOR2X1 U48 ( .A(n16), .B(n14), .Y(n26) );
  XNOR2X2 U49 ( .A(n24), .B(n11), .Y(SOUT[3]) );
  XNOR2X1 U50 ( .A(n37), .B(n10), .Y(SOUT[8]) );
  MXI2X1 U51 ( .A(SS[11]), .B(SS[10]), .S0(n17), .Y(n43) );
  MXI2XL U52 ( .A(SS[12]), .B(SS[11]), .S0(n17), .Y(n45) );
  XOR2X2 U53 ( .A(n41), .B(n13), .Y(SOUT[10]) );
  XNOR2X2 U54 ( .A(n45), .B(n9), .Y(SOUT[12]) );
  NOR2XL U55 ( .A(n16), .B(n38), .Y(n10) );
  OR2X2 U56 ( .A(n16), .B(n15), .Y(n13) );
  BUFX3 U57 ( .A(LAW), .Y(n17) );
  NAND2BXL U58 ( .AN(n16), .B(n29), .Y(n28) );
  MXI2X4 U59 ( .A(SS[13]), .B(SS[12]), .S0(n17), .Y(n44) );
  NAND2BX4 U60 ( .AN(n22), .B(n21), .Y(n25) );
  MXI2X4 U61 ( .A(SS[4]), .B(n1), .S0(n17), .Y(n27) );
  MXI2X4 U62 ( .A(SS[5]), .B(SS[4]), .S0(n17), .Y(n30) );
  G711_0 inst_G711 ( .LAW(n17), .PCM(SIN), .mag(SS) );
endmodule


module SUBTA_0_DW01_add_5 ( A, B, CI, SUM, CO );
  input [16:0] A;
  input [16:0] B;
  output [16:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n16, n18,
         n21, n22, n23, n24, n25, n26, n28, n30, n31, n32, n33, n34, n35, n36,
         n37, n38, n39, n40, n41, n42, n43, n46, n47, n48, n49, n50, n51, n52,
         n53, n54, n56, n57, n60, n61, n62, n63, n65, n68, n69, n70, n71, n72,
         n73, n74, n77, n78, n79, n80, n81, n82, n83, n84, n85, n88, n89, n90,
         n91, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         SUM_0_, SUM_1_, SUM_2_, SUM_3_, SUM_4_, SUM_5_, SUM_6_, SUM_7_,
         SUM_8_, SUM_9_, SUM_10_, SUM_11_, SUM_12_, SUM_13_, SUM_14_, SUM_15_,
         B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_,
         B_11_, B_12_, B_13_, B_14_, B_15_, A_0_, A_1_, A_2_, A_3_, A_4_, A_5_,
         A_6_, A_7_, A_8_, A_9_, A_10_, A_11_, A_12_, A_13_, A_14_, A_15_,
         n190, n191, n192, n193, n194, n195, n196, n197, n198, n199, n200,
         n201, n202;
  assign SUM[0] = SUM_0_;
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign SUM[12] = SUM_12_;
  assign SUM[13] = SUM_13_;
  assign SUM[14] = SUM_14_;
  assign SUM[15] = SUM_15_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign B_11_ = B[11];
  assign B_12_ = B[12];
  assign B_13_ = B[13];
  assign B_14_ = B[14];
  assign B_15_ = B[15];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign A_11_ = A[11];
  assign A_12_ = A[12];
  assign A_13_ = A[13];
  assign A_14_ = A[14];
  assign A_15_ = A[15];

  XOR2X4 U2 ( .A(n22), .B(n4), .Y(SUM_15_) );
  AOI21X4 U46 ( .A0(n50), .A1(n63), .B0(n51), .Y(n2) );
  NOR2X4 U73 ( .A(n196), .B(A_9_), .Y(n68) );
  XOR2X4 U83 ( .A(n82), .B(n12), .Y(SUM_7_) );
  NOR2X4 U130 ( .A(B_3_), .B(A_3_), .Y(n107) );
  NAND2X4 U153 ( .A(n193), .B(A_4_), .Y(n102) );
  XOR2X2 U154 ( .A(n18), .B(n117), .Y(SUM_1_) );
  OAI21X1 U155 ( .A0(n194), .A1(n85), .B0(n88), .Y(n84) );
  INVX2 U156 ( .A(n91), .Y(n194) );
  XOR2X2 U157 ( .A(n98), .B(n14), .Y(SUM_5_) );
  INVX4 U158 ( .A(B_7_), .Y(n190) );
  CLKINVX4 U159 ( .A(n190), .Y(n191) );
  INVX2 U160 ( .A(B_4_), .Y(n192) );
  CLKINVX4 U161 ( .A(n192), .Y(n193) );
  XNOR2X4 U162 ( .A(n112), .B(n199), .Y(SUM_2_) );
  NOR2BX4 U163 ( .AN(n111), .B(n110), .Y(n199) );
  INVX4 U164 ( .A(n102), .Y(n100) );
  OAI21X2 U165 ( .A0(n114), .A1(n117), .B0(n115), .Y(n113) );
  NOR2X2 U166 ( .A(B_1_), .B(A_1_), .Y(n114) );
  INVX4 U167 ( .A(n113), .Y(n112) );
  AOI21X1 U168 ( .A0(n103), .A1(n90), .B0(n91), .Y(n89) );
  NOR2X2 U169 ( .A(n101), .B(n96), .Y(n90) );
  BUFX3 U170 ( .A(B_9_), .Y(n196) );
  NOR2X2 U171 ( .A(B_10_), .B(A_10_), .Y(n57) );
  NOR2X2 U172 ( .A(B_13_), .B(A_13_), .Y(n38) );
  NAND2X1 U173 ( .A(B_13_), .B(A_13_), .Y(n39) );
  NAND2X1 U174 ( .A(B_5_), .B(A_5_), .Y(n97) );
  OR2X2 U175 ( .A(B_14_), .B(A_14_), .Y(n201) );
  CLKINVX3 U176 ( .A(n104), .Y(n103) );
  NAND2BX1 U177 ( .AN(n85), .B(n88), .Y(n13) );
  NAND2BX1 U178 ( .AN(n96), .B(n97), .Y(n14) );
  NAND2BX1 U179 ( .AN(n80), .B(n81), .Y(n12) );
  NOR2BX1 U180 ( .AN(n117), .B(n116), .Y(SUM_0_) );
  XOR2X2 U181 ( .A(n70), .B(n10), .Y(SUM_9_) );
  NAND2BXL U182 ( .AN(n57), .B(n60), .Y(n9) );
  OAI21XL U183 ( .A0(n34), .A1(n2), .B0(n35), .Y(n33) );
  INVXL U184 ( .A(n37), .Y(n35) );
  AOI31X1 U185 ( .A0(n195), .A1(n1), .A2(n62), .B0(n56), .Y(n54) );
  INVX1 U186 ( .A(n57), .Y(n195) );
  NAND2BX1 U187 ( .AN(n52), .B(n53), .Y(n8) );
  NAND2BX1 U188 ( .AN(n38), .B(n39), .Y(n6) );
  NAND2BX1 U189 ( .AN(n68), .B(n69), .Y(n10) );
  NAND2BX1 U190 ( .AN(n107), .B(n108), .Y(n16) );
  AOI21X2 U191 ( .A0(n105), .A1(n113), .B0(n106), .Y(n104) );
  XNOR2X2 U192 ( .A(n103), .B(n198), .Y(SUM_4_) );
  NOR2X4 U193 ( .A(B_11_), .B(A_11_), .Y(n52) );
  AOI21X2 U194 ( .A0(n78), .A1(n91), .B0(n79), .Y(n77) );
  NAND2X2 U195 ( .A(B_0_), .B(A_0_), .Y(n117) );
  XNOR2X2 U196 ( .A(n1), .B(n11), .Y(SUM_8_) );
  NAND2X1 U197 ( .A(n71), .B(n74), .Y(n11) );
  NOR2X2 U198 ( .A(n110), .B(n107), .Y(n105) );
  OAI21X2 U199 ( .A0(n107), .A1(n111), .B0(n108), .Y(n106) );
  XOR2X2 U200 ( .A(n89), .B(n13), .Y(SUM_6_) );
  NOR2X2 U201 ( .A(n85), .B(n80), .Y(n78) );
  NOR2BX1 U202 ( .AN(n90), .B(n85), .Y(n83) );
  OAI21XL U203 ( .A0(n65), .A1(n57), .B0(n60), .Y(n56) );
  NAND2X1 U204 ( .A(B_10_), .B(A_10_), .Y(n60) );
  XNOR2X2 U205 ( .A(n109), .B(n16), .Y(SUM_3_) );
  OAI21XL U206 ( .A0(n112), .A1(n110), .B0(n111), .Y(n109) );
  XOR2X1 U207 ( .A(n40), .B(n6), .Y(SUM_13_) );
  NOR2X2 U208 ( .A(n191), .B(A_7_), .Y(n80) );
  NAND2X1 U209 ( .A(n202), .B(n21), .Y(n4) );
  CLKBUFX2 U210 ( .A(B_6_), .Y(n197) );
  OAI21X2 U211 ( .A0(n52), .A1(n60), .B0(n53), .Y(n51) );
  NOR2X4 U212 ( .A(B_2_), .B(A_2_), .Y(n110) );
  NOR2X2 U213 ( .A(n73), .B(n68), .Y(n62) );
  NAND2X2 U214 ( .A(n197), .B(A_6_), .Y(n88) );
  NAND2X4 U215 ( .A(B_2_), .B(A_2_), .Y(n111) );
  NAND2X1 U216 ( .A(B_15_), .B(A_15_), .Y(n21) );
  OR2X2 U217 ( .A(B_15_), .B(A_15_), .Y(n202) );
  NAND2X1 U218 ( .A(B_14_), .B(A_14_), .Y(n30) );
  NOR2X4 U219 ( .A(B_6_), .B(A_6_), .Y(n85) );
  OAI21X2 U220 ( .A0(n96), .A1(n102), .B0(n97), .Y(n91) );
  NAND2X2 U221 ( .A(n99), .B(n102), .Y(n198) );
  OAI21X2 U222 ( .A0(n80), .A1(n88), .B0(n81), .Y(n79) );
  XOR2X1 U223 ( .A(n47), .B(n7), .Y(SUM_12_) );
  NOR2X2 U224 ( .A(n57), .B(n52), .Y(n50) );
  INVX1 U225 ( .A(n101), .Y(n99) );
  INVX1 U226 ( .A(n73), .Y(n71) );
  XOR2X1 U227 ( .A(n54), .B(n8), .Y(SUM_11_) );
  XOR2X1 U228 ( .A(n61), .B(n9), .Y(SUM_10_) );
  NAND2X1 U229 ( .A(B_11_), .B(A_11_), .Y(n53) );
  NOR2X2 U230 ( .A(B_4_), .B(A_4_), .Y(n101) );
  NOR2X2 U231 ( .A(B_5_), .B(A_5_), .Y(n96) );
  INVX1 U232 ( .A(n30), .Y(n28) );
  AOI21X2 U233 ( .A0(n1), .A1(n23), .B0(n24), .Y(n22) );
  AOI21X1 U234 ( .A0(n1), .A1(n62), .B0(n63), .Y(n61) );
  OAI21X4 U235 ( .A0(n68), .A1(n74), .B0(n69), .Y(n63) );
  AOI21X2 U236 ( .A0(n37), .A1(n201), .B0(n28), .Y(n26) );
  NAND2BX1 U237 ( .AN(n114), .B(n115), .Y(n18) );
  NAND2X1 U238 ( .A(B_1_), .B(A_1_), .Y(n115) );
  NAND2X4 U239 ( .A(A_8_), .B(B_8_), .Y(n74) );
  OAI21X2 U240 ( .A0(n46), .A1(n38), .B0(n39), .Y(n37) );
  NAND2X2 U241 ( .A(n36), .B(n201), .Y(n25) );
  AOI21X2 U242 ( .A0(n1), .A1(n71), .B0(n72), .Y(n70) );
  NOR2X2 U243 ( .A(B_8_), .B(A_8_), .Y(n73) );
  OAI21X1 U244 ( .A0(n2), .A1(n25), .B0(n26), .Y(n24) );
  AOI21X1 U245 ( .A0(n1), .A1(n48), .B0(n49), .Y(n47) );
  AND2X1 U246 ( .A(n90), .B(n78), .Y(n200) );
  AOI21X2 U247 ( .A0(n83), .A1(n103), .B0(n84), .Y(n82) );
  NAND2X1 U248 ( .A(n191), .B(A_7_), .Y(n81) );
  NOR2X1 U249 ( .A(n3), .B(n25), .Y(n23) );
  AOI21X1 U250 ( .A0(n1), .A1(n41), .B0(n42), .Y(n40) );
  AOI21X2 U251 ( .A0(n103), .A1(n99), .B0(n100), .Y(n98) );
  INVXL U252 ( .A(n3), .Y(n48) );
  INVXL U253 ( .A(n36), .Y(n34) );
  AOI21XL U254 ( .A0(n1), .A1(n32), .B0(n33), .Y(n31) );
  NAND2BX1 U255 ( .AN(n43), .B(n46), .Y(n7) );
  NOR2XL U256 ( .A(B_0_), .B(A_0_), .Y(n116) );
  XOR2X1 U257 ( .A(n31), .B(n5), .Y(SUM_14_) );
  NAND2X2 U258 ( .A(n62), .B(n50), .Y(n3) );
  NOR2XL U259 ( .A(n3), .B(n34), .Y(n32) );
  NAND2XL U260 ( .A(n201), .B(n30), .Y(n5) );
  INVX1 U261 ( .A(n63), .Y(n65) );
  INVXL U262 ( .A(n2), .Y(n49) );
  INVX1 U263 ( .A(n74), .Y(n72) );
  OAI2BB1X4 U264 ( .A0N(n103), .A1N(n200), .B0(n77), .Y(n1) );
  NOR2X2 U265 ( .A(B_12_), .B(A_12_), .Y(n43) );
  NOR2X2 U266 ( .A(n43), .B(n38), .Y(n36) );
  NAND2X2 U267 ( .A(B_12_), .B(A_12_), .Y(n46) );
  NAND2X2 U268 ( .A(B_3_), .B(A_3_), .Y(n108) );
  NAND2X1 U269 ( .A(B_9_), .B(A_9_), .Y(n69) );
  OAI21XL U270 ( .A0(n2), .A1(n43), .B0(n46), .Y(n42) );
  NOR2XL U271 ( .A(n3), .B(n43), .Y(n41) );
endmodule


module SUBTA_0 ( SL, SE, D );
  input [13:0] SL;
  input [14:0] SE;
  output [15:0] D;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N16, N15, N14, N13, N12, N11, N10, N1,
         N0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, SYNOPSYS_UNCONNECTED__0;
  assign N0 = SE[0];

  INVX1 U3 ( .A(n8), .Y(N16) );
  NAND2X1 U4 ( .A(n7), .B(n21), .Y(n20) );
  NAND2X1 U5 ( .A(n1), .B(n19), .Y(n18) );
  NAND2X1 U6 ( .A(n3), .B(n15), .Y(n14) );
  NAND2X1 U7 ( .A(n4), .B(n13), .Y(n12) );
  NAND2X1 U8 ( .A(n5), .B(n11), .Y(n10) );
  NAND2X1 U9 ( .A(n2), .B(n17), .Y(n16) );
  NAND2X1 U10 ( .A(n6), .B(n9), .Y(n8) );
  XOR2X1 U11 ( .A(n9), .B(n6), .Y(N14) );
  XOR2X1 U12 ( .A(n21), .B(n7), .Y(N2) );
  XOR2X1 U13 ( .A(n15), .B(n3), .Y(N8) );
  XOR2X1 U14 ( .A(n19), .B(n1), .Y(N4) );
  XOR2X1 U15 ( .A(n11), .B(n5), .Y(N12) );
  XOR2X1 U16 ( .A(n13), .B(n4), .Y(N10) );
  XOR2X1 U17 ( .A(n17), .B(n2), .Y(N6) );
  NOR2X1 U18 ( .A(n20), .B(SE[3]), .Y(n1) );
  NOR2X1 U19 ( .A(n18), .B(SE[5]), .Y(n2) );
  NOR2X1 U20 ( .A(n16), .B(SE[7]), .Y(n3) );
  NOR2X1 U21 ( .A(n14), .B(SE[9]), .Y(n4) );
  NOR2X1 U22 ( .A(n12), .B(SE[11]), .Y(n5) );
  NOR2X1 U23 ( .A(n10), .B(SE[13]), .Y(n6) );
  NOR2X1 U24 ( .A(N0), .B(SE[1]), .Y(n7) );
  NOR2BX1 U25 ( .AN(n8), .B(SE[14]), .Y(N15) );
  INVX1 U26 ( .A(SE[2]), .Y(n21) );
  XOR2X1 U27 ( .A(n10), .B(SE[13]), .Y(N13) );
  XOR2X1 U28 ( .A(N0), .B(SE[1]), .Y(N1) );
  XOR2X1 U29 ( .A(n14), .B(SE[9]), .Y(N9) );
  XOR2X1 U30 ( .A(n20), .B(SE[3]), .Y(N3) );
  XOR2X1 U31 ( .A(n16), .B(SE[7]), .Y(N7) );
  XOR2X1 U32 ( .A(n18), .B(SE[5]), .Y(N5) );
  INVX1 U33 ( .A(SE[4]), .Y(n19) );
  INVX1 U34 ( .A(SE[8]), .Y(n15) );
  INVX1 U35 ( .A(SE[6]), .Y(n17) );
  XOR2X1 U36 ( .A(n12), .B(SE[11]), .Y(N11) );
  INVX1 U37 ( .A(SE[14]), .Y(n9) );
  INVX1 U38 ( .A(SE[10]), .Y(n13) );
  INVX1 U39 ( .A(SE[12]), .Y(n11) );
  SUBTA_0_DW01_add_5 add_0_root_sub_0_root_sub_59 ( .A({N16, N15, N14, N13, 
        N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), .B({1'b0, 
        SL[13], SL[13], SL}), .CI(1'b0), .SUM({SYNOPSYS_UNCONNECTED__0, D}) );
endmodule


module LOG_0 ( D, DL, DS );
  input [15:0] D;
  output [10:0] DL;
  output DS;
  wire   n202, n203, N4, n1, n2, n3, n4, n5, DL_10_, n9, n10, n11, n12, n13,
         n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98,
         n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176,
         n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187,
         n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198,
         n199, n200, n201;
  assign N4 = D[0];
  assign DL[10] = DL_10_;

  OAI2BB1X4 U3 ( .A0N(n192), .A1N(n163), .B0(n162), .Y(DL[3]) );
  AOI22X2 U4 ( .A0(n191), .A1(n193), .B0(n17), .B1(n194), .Y(n142) );
  NAND4X2 U5 ( .A(n1), .B(n136), .C(n135), .D(n134), .Y(n191) );
  NAND2BX4 U6 ( .AN(n44), .B(n43), .Y(n189) );
  NAND2BX4 U7 ( .AN(D[1]), .B(n131), .Y(n89) );
  NAND2X4 U8 ( .A(n196), .B(n195), .Y(n197) );
  OAI2BB1X2 U9 ( .A0N(n195), .A1N(n192), .B0(n142), .Y(DL[2]) );
  OAI221X2 U10 ( .A0(n131), .A1(n190), .B0(n130), .B1(n153), .C0(n129), .Y(
        n195) );
  NAND2BX2 U11 ( .AN(n67), .B(n64), .Y(n132) );
  BUFX3 U12 ( .A(D[1]), .Y(n4) );
  INVX1 U13 ( .A(N4), .Y(n131) );
  INVX1 U14 ( .A(D[10]), .Y(n56) );
  OAI21XL U15 ( .A0(n95), .A1(n94), .B0(n93), .Y(n103) );
  AOI2BB2X1 U16 ( .B0(n167), .B1(n193), .A0N(n143), .A1N(n169), .Y(n115) );
  OR2XL U17 ( .A(n2), .B(n82), .Y(n13) );
  INVX2 U18 ( .A(n28), .Y(n82) );
  OR2X2 U19 ( .A(n202), .B(DL[7]), .Y(n157) );
  NAND2XL U20 ( .A(n21), .B(n145), .Y(n124) );
  NAND2XL U21 ( .A(n16), .B(n89), .Y(n110) );
  INVX1 U22 ( .A(n137), .Y(n1) );
  MXI2XL U23 ( .A(n69), .B(n68), .S0(DS), .Y(n70) );
  NAND2XL U24 ( .A(n21), .B(n138), .Y(n135) );
  INVX2 U25 ( .A(n190), .Y(n138) );
  AND2X2 U26 ( .A(n116), .B(n166), .Y(n9) );
  NOR2XL U27 ( .A(n71), .B(n49), .Y(n48) );
  INVX2 U28 ( .A(n32), .Y(n71) );
  OAI22XL U29 ( .A0(n21), .A1(n157), .B0(n156), .B1(n190), .Y(n158) );
  NAND2XL U30 ( .A(n26), .B(n73), .Y(n130) );
  OAI22XL U31 ( .A0(n154), .A1(n153), .B0(n152), .B1(n188), .Y(n159) );
  AND2X1 U32 ( .A(n33), .B(D[9]), .Y(n51) );
  INVX1 U33 ( .A(n155), .Y(n21) );
  OR2X2 U34 ( .A(DL[9]), .B(DL_10_), .Y(n179) );
  INVXL U35 ( .A(n114), .Y(DL_10_) );
  MX2X1 U36 ( .A(n3), .B(n13), .S0(DS), .Y(n65) );
  AND2X2 U37 ( .A(n39), .B(n44), .Y(n5) );
  INVX2 U38 ( .A(n37), .Y(n44) );
  NAND2XL U39 ( .A(n156), .B(n185), .Y(n107) );
  AOI211XL U40 ( .A0(n9), .A1(n91), .B0(n10), .C0(n92), .Y(n94) );
  NAND2XL U41 ( .A(n145), .B(n154), .Y(n109) );
  INVX2 U42 ( .A(n188), .Y(n145) );
  AND2X2 U43 ( .A(n37), .B(D[13]), .Y(n38) );
  NOR2BX1 U44 ( .AN(n187), .B(n83), .Y(n104) );
  NAND2BX1 U45 ( .AN(n166), .B(n25), .Y(n19) );
  NAND3BX1 U46 ( .AN(n201), .B(n74), .C(n144), .Y(n75) );
  INVXL U47 ( .A(n76), .Y(n74) );
  NAND2X1 U48 ( .A(n192), .B(n191), .Y(n199) );
  OR2X2 U49 ( .A(n169), .B(n179), .Y(n170) );
  INVX1 U50 ( .A(n179), .Y(n196) );
  NOR2X1 U51 ( .A(n21), .B(n98), .Y(n20) );
  NAND2XL U52 ( .A(n28), .B(n81), .Y(n147) );
  NAND2XL U53 ( .A(n193), .B(n194), .Y(n198) );
  NOR2XL U54 ( .A(n152), .B(n201), .Y(n99) );
  INVX1 U55 ( .A(n132), .Y(n152) );
  AND2X2 U56 ( .A(n26), .B(n73), .Y(n144) );
  NAND2BXL U57 ( .AN(n184), .B(n185), .Y(n186) );
  CLKINVXL U58 ( .A(D[4]), .Y(n2) );
  INVX1 U59 ( .A(n2), .Y(n3) );
  NOR3X2 U60 ( .A(n85), .B(n84), .C(n83), .Y(n86) );
  OAI2BB1X4 U61 ( .A0N(n17), .A1N(n176), .B0(n127), .Y(DL[1]) );
  OAI221X4 U62 ( .A0(n190), .A1(n184), .B0(n188), .B1(n189), .C0(n174), .Y(
        n183) );
  NAND2X2 U63 ( .A(n121), .B(n132), .Y(n98) );
  NAND2XL U64 ( .A(n145), .B(n128), .Y(n129) );
  NAND2X1 U65 ( .A(n20), .B(n106), .Y(n76) );
  INVX1 U66 ( .A(n73), .Y(n78) );
  MXI2X1 U67 ( .A(n52), .B(n51), .S0(DS), .Y(n53) );
  OR2X2 U68 ( .A(n50), .B(n14), .Y(n117) );
  INVX1 U69 ( .A(D[13]), .Y(n39) );
  NAND4BX2 U70 ( .AN(n183), .B(n182), .C(n181), .D(n180), .Y(DL[5]) );
  NAND2X1 U71 ( .A(n192), .B(n175), .Y(n182) );
  AOI21X1 U72 ( .A0(n175), .A1(n193), .B0(n126), .Y(n127) );
  NAND4BX2 U73 ( .AN(n173), .B(n172), .C(n171), .D(n170), .Y(DL[4]) );
  OR2X2 U74 ( .A(n57), .B(n12), .Y(n166) );
  CLKINVX3 U75 ( .A(n166), .Y(n10) );
  NAND2X2 U76 ( .A(n176), .B(n193), .Y(n181) );
  NAND2BX4 U77 ( .AN(DL[7]), .B(DL[8]), .Y(n188) );
  NAND2BX1 U78 ( .AN(n54), .B(n53), .Y(n116) );
  INVX4 U79 ( .A(n34), .Y(n54) );
  MXI2X4 U80 ( .A(n39), .B(n38), .S0(DS), .Y(n40) );
  MXI2X1 U81 ( .A(n128), .B(N4), .S0(n125), .Y(n177) );
  NAND2XL U82 ( .A(D[2]), .B(n89), .Y(n72) );
  MX2X1 U83 ( .A(D[2]), .B(n72), .S0(DS), .Y(n26) );
  OR2X4 U84 ( .A(D[2]), .B(n89), .Y(n73) );
  NAND2BX2 U85 ( .AN(D[5]), .B(n66), .Y(n30) );
  NAND2BX2 U86 ( .AN(D[3]), .B(n78), .Y(n28) );
  NAND2X1 U87 ( .A(n185), .B(n133), .Y(n134) );
  NAND2XL U88 ( .A(n138), .B(n144), .Y(n112) );
  NAND2XL U89 ( .A(n145), .B(n133), .Y(n113) );
  NAND2X1 U90 ( .A(n164), .B(n145), .Y(n141) );
  INVXL U91 ( .A(D[11]), .Y(n45) );
  INVX2 U92 ( .A(n29), .Y(n66) );
  NAND2BX2 U93 ( .AN(D[4]), .B(n82), .Y(n29) );
  NAND2BX2 U94 ( .AN(D[7]), .B(n67), .Y(n32) );
  INVX1 U95 ( .A(n147), .Y(n133) );
  INVX1 U96 ( .A(n77), .Y(n105) );
  OAI2BB1X2 U97 ( .A0N(D[15]), .A1N(n5), .B0(n58), .Y(n83) );
  NAND2X1 U98 ( .A(n100), .B(n96), .Y(n85) );
  INVX2 U99 ( .A(n83), .Y(n93) );
  NAND2BX1 U100 ( .AN(n106), .B(n114), .Y(n100) );
  INVX1 U101 ( .A(D[12]), .Y(n42) );
  OAI2BB1X2 U102 ( .A0N(n17), .A1N(n168), .B0(n115), .Y(DL[0]) );
  MXI2X1 U103 ( .A(n161), .B(n160), .S0(n193), .Y(n162) );
  INVX1 U104 ( .A(n143), .Y(n192) );
  NAND4X1 U105 ( .A(n103), .B(n102), .C(n101), .D(n100), .Y(n203) );
  NAND3X1 U106 ( .A(n92), .B(n189), .C(n104), .Y(n96) );
  BUFX8 U107 ( .A(n203), .Y(DL[7]) );
  NAND2BX2 U108 ( .AN(n47), .B(n46), .Y(n184) );
  MX2X1 U109 ( .A(D[11]), .B(n15), .S0(DS), .Y(n46) );
  BUFX8 U110 ( .A(n202), .Y(DL[8]) );
  INVX4 U111 ( .A(n25), .Y(n153) );
  MXI2XL U112 ( .A(n60), .B(n59), .S0(DS), .Y(n61) );
  BUFX20 U113 ( .A(D[15]), .Y(DS) );
  NAND2X1 U114 ( .A(n148), .B(n138), .Y(n140) );
  NAND2X1 U115 ( .A(n168), .B(n193), .Y(n171) );
  NAND2X1 U116 ( .A(n192), .B(n167), .Y(n172) );
  AND2X2 U117 ( .A(DL[8]), .B(DL[7]), .Y(n25) );
  MX2X1 U118 ( .A(n56), .B(n55), .S0(DS), .Y(n12) );
  INVX4 U119 ( .A(n201), .Y(n114) );
  NAND2BXL U120 ( .AN(n76), .B(n114), .Y(n77) );
  INVXL U121 ( .A(D[9]), .Y(n52) );
  INVX4 U122 ( .A(n157), .Y(n185) );
  AND2X1 U123 ( .A(DL[9]), .B(DL_10_), .Y(n17) );
  OR2XL U124 ( .A(n153), .B(n117), .Y(n18) );
  MX2X1 U125 ( .A(D[6]), .B(n11), .S0(DS), .Y(n64) );
  OR2XL U126 ( .A(n62), .B(n63), .Y(n11) );
  OR2XL U127 ( .A(n153), .B(n121), .Y(n22) );
  MX2X1 U128 ( .A(n49), .B(n48), .S0(DS), .Y(n14) );
  OR2XL U129 ( .A(n153), .B(n116), .Y(n24) );
  XNOR2XL U130 ( .A(D[14]), .B(DS), .Y(n58) );
  INVXL U131 ( .A(n106), .Y(n154) );
  INVXL U132 ( .A(n121), .Y(n156) );
  OR2X1 U133 ( .A(n57), .B(n45), .Y(n15) );
  NAND2XL U134 ( .A(n185), .B(n128), .Y(n111) );
  MX2X1 U135 ( .A(n4), .B(n88), .S0(DS), .Y(n16) );
  NAND2BX1 U136 ( .AN(n153), .B(N4), .Y(n169) );
  NAND2XL U137 ( .A(DL[9]), .B(n114), .Y(n143) );
  INVX1 U138 ( .A(n96), .Y(n97) );
  NAND3BX2 U139 ( .AN(n87), .B(n102), .C(n86), .Y(n202) );
  NOR2X1 U140 ( .A(n159), .B(n158), .Y(n160) );
  NAND2X1 U141 ( .A(n156), .B(n145), .Y(n136) );
  NOR3X1 U142 ( .A(n151), .B(n150), .C(n149), .Y(n161) );
  OAI21XL U143 ( .A0(n10), .A1(n188), .B0(n153), .Y(n150) );
  NAND4X1 U144 ( .A(n18), .B(n109), .C(n108), .D(n107), .Y(n168) );
  NAND4X2 U145 ( .A(n19), .B(n141), .C(n140), .D(n139), .Y(n194) );
  INVX1 U146 ( .A(n117), .Y(n148) );
  NAND2BX1 U147 ( .AN(n66), .B(n65), .Y(n155) );
  MXI2X1 U148 ( .A(n42), .B(n41), .S0(DS), .Y(n43) );
  NOR2X1 U149 ( .A(n47), .B(n42), .Y(n41) );
  NAND4X1 U150 ( .A(n22), .B(n124), .C(n123), .D(n122), .Y(n175) );
  INVX1 U151 ( .A(DL[7]), .Y(n125) );
  INVXL U152 ( .A(D[8]), .Y(n49) );
  NOR2XL U153 ( .A(n54), .B(n56), .Y(n55) );
  NAND4X2 U154 ( .A(n23), .B(n113), .C(n112), .D(n111), .Y(n167) );
  OR2XL U155 ( .A(n153), .B(n155), .Y(n23) );
  NAND4X1 U156 ( .A(n24), .B(n120), .C(n119), .D(n118), .Y(n176) );
  INVXL U157 ( .A(D[6]), .Y(n63) );
  INVX1 U158 ( .A(n116), .Y(n164) );
  INVX4 U159 ( .A(n33), .Y(n50) );
  OAI221XL U160 ( .A0(n190), .A1(n189), .B0(n188), .B1(n187), .C0(n186), .Y(
        n200) );
  OAI221XL U161 ( .A0(n190), .A1(n166), .B0(n188), .B1(n184), .C0(n165), .Y(
        n173) );
  INVXL U162 ( .A(n187), .Y(n95) );
  NAND3BXL U163 ( .AN(n179), .B(n178), .C(DL[8]), .Y(n180) );
  NAND4BX2 U164 ( .AN(n200), .B(n199), .C(n198), .D(n197), .Y(DL[6]) );
  NAND2BX1 U165 ( .AN(n62), .B(n61), .Y(n121) );
  INVXL U166 ( .A(D[5]), .Y(n60) );
  NAND2BX1 U167 ( .AN(n71), .B(n70), .Y(n106) );
  NOR2XL U168 ( .A(n67), .B(n69), .Y(n68) );
  INVXL U169 ( .A(D[7]), .Y(n69) );
  MXI2XL U170 ( .A(n80), .B(n79), .S0(DS), .Y(n81) );
  NOR2XL U171 ( .A(n78), .B(n80), .Y(n79) );
  INVXL U172 ( .A(D[3]), .Y(n80) );
  NAND3X1 U173 ( .A(n20), .B(n117), .C(n90), .Y(n91) );
  NOR2X1 U174 ( .A(n144), .B(n110), .Y(n90) );
  OAI221XL U175 ( .A0(n147), .A1(n153), .B0(DL[8]), .B1(n177), .C0(n146), .Y(
        n163) );
  NOR3BXL U176 ( .AN(DL[8]), .B(n177), .C(n143), .Y(n126) );
  INVX1 U177 ( .A(n110), .Y(n128) );
  INVX1 U178 ( .A(n177), .Y(n178) );
  NAND2XL U179 ( .A(n4), .B(N4), .Y(n88) );
  NAND2X1 U180 ( .A(n138), .B(n133), .Y(n123) );
  NOR2XL U181 ( .A(n66), .B(n60), .Y(n59) );
  NAND2XL U182 ( .A(n138), .B(n154), .Y(n119) );
  NAND2XL U183 ( .A(n138), .B(n152), .Y(n108) );
  INVX4 U184 ( .A(n31), .Y(n67) );
  NAND2BX2 U185 ( .AN(D[6]), .B(n62), .Y(n31) );
  NAND2XL U186 ( .A(n10), .B(n185), .Y(n174) );
  NAND2XL U187 ( .A(n185), .B(n152), .Y(n118) );
  NAND2X1 U188 ( .A(n185), .B(n144), .Y(n122) );
  NOR2XL U189 ( .A(n132), .B(n153), .Y(n137) );
  NAND2XL U190 ( .A(n145), .B(n144), .Y(n146) );
  NAND2XL U191 ( .A(n148), .B(n145), .Y(n120) );
  NOR2XL U192 ( .A(n148), .B(n157), .Y(n149) );
  AOI21X1 U193 ( .A0(n99), .A1(n98), .B0(n97), .Y(n101) );
  AOI21XL U194 ( .A0(n75), .A1(n166), .B0(n92), .Y(n87) );
  OAI211X4 U195 ( .A0(DL_10_), .A1(n105), .B0(n189), .C0(n104), .Y(DL[9]) );
  NOR2XL U196 ( .A(n201), .B(n132), .Y(n84) );
  INVX4 U197 ( .A(n35), .Y(n57) );
  NAND4BX4 U198 ( .AN(n92), .B(n117), .C(n9), .D(n93), .Y(n201) );
  NAND3X4 U199 ( .A(n187), .B(n189), .C(n184), .Y(n92) );
  INVX4 U200 ( .A(n36), .Y(n47) );
  NAND2BX2 U201 ( .AN(D[11]), .B(n57), .Y(n36) );
  NAND2XL U202 ( .A(n164), .B(n185), .Y(n165) );
  NOR2XL U203 ( .A(n164), .B(n190), .Y(n151) );
  CLKINVX3 U204 ( .A(n30), .Y(n62) );
  NAND2BX4 U205 ( .AN(D[8]), .B(n71), .Y(n33) );
  NAND2BX4 U206 ( .AN(D[9]), .B(n50), .Y(n34) );
  NAND2BX4 U207 ( .AN(D[10]), .B(n54), .Y(n35) );
  NAND2BX4 U208 ( .AN(D[12]), .B(n47), .Y(n37) );
  NAND2BX4 U209 ( .AN(n5), .B(n40), .Y(n187) );
  NAND2X2 U210 ( .A(n105), .B(n133), .Y(n102) );
  NAND2BX4 U211 ( .AN(DL[8]), .B(DL[7]), .Y(n190) );
  CLKINVX3 U212 ( .A(DL[9]), .Y(n193) );
  NAND2X2 U213 ( .A(n185), .B(n154), .Y(n139) );
endmodule


module SUBTB_0_DW01_add_2 ( A, B, CI, SUM, CO );
  input [12:0] A;
  input [12:0] B;
  output [12:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n8, n9, n10, n11, n13, n14, n15, n17, n18, n19,
         n20, n21, n22, n24, n26, n27, n28, n29, n30, n31, n32, n33, n34, n37,
         n39, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n61, n62, n63, n64, n66, n69, n70, n71, n74,
         n75, n76, n77, n78, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89,
         n90, n92, n93, n96, n97, n98, n99, n100, n101, SUM_1_, SUM_2_, SUM_3_,
         SUM_4_, SUM_5_, SUM_6_, SUM_7_, SUM_8_, SUM_9_, SUM_10_, SUM_11_,
         B_0_, B_1_, B_2_, B_3_, B_4_, B_5_, B_6_, B_7_, B_8_, B_9_, B_10_,
         A_0_, A_1_, A_2_, A_3_, A_4_, A_5_, A_6_, A_7_, A_8_, A_9_, A_10_,
         n148, n149, n150, SUM_0_, n152, n153, n154, n155, n156, n157;
  assign n17 = A[12];
  assign SUM[1] = SUM_1_;
  assign SUM[2] = SUM_2_;
  assign SUM[3] = SUM_3_;
  assign SUM[4] = SUM_4_;
  assign SUM[5] = SUM_5_;
  assign SUM[6] = SUM_6_;
  assign SUM[7] = SUM_7_;
  assign SUM[8] = SUM_8_;
  assign SUM[9] = SUM_9_;
  assign SUM[10] = SUM_10_;
  assign SUM[11] = SUM_11_;
  assign B_0_ = B[0];
  assign B_1_ = B[1];
  assign B_2_ = B[2];
  assign B_3_ = B[3];
  assign B_4_ = B[4];
  assign B_5_ = B[5];
  assign B_6_ = B[6];
  assign B_7_ = B[7];
  assign B_8_ = B[8];
  assign B_9_ = B[9];
  assign B_10_ = B[10];
  assign A_0_ = A[0];
  assign A_1_ = A[1];
  assign A_2_ = A[2];
  assign A_3_ = A[3];
  assign A_4_ = A[4];
  assign A_5_ = A[5];
  assign A_6_ = A[6];
  assign A_7_ = A[7];
  assign A_8_ = A[8];
  assign A_9_ = A[9];
  assign A_10_ = A[10];
  assign SUM[0] = SUM_0_;

  XNOR2X4 U6 ( .A(n150), .B(n17), .Y(SUM_11_) );
  XNOR2X4 U38 ( .A(n53), .B(n8), .Y(SUM_8_) );
  NOR2X4 U78 ( .A(n77), .B(n74), .Y(n3) );
  NOR2X4 U82 ( .A(B_5_), .B(A_5_), .Y(n74) );
  XNOR2X4 U90 ( .A(n84), .B(n13), .Y(SUM_3_) );
  AOI21X4 U91 ( .A0(n80), .A1(n88), .B0(n81), .Y(n1) );
  NOR2X4 U92 ( .A(n82), .B(n85), .Y(n80) );
  OAI21X4 U93 ( .A0(n82), .A1(n86), .B0(n83), .Y(n81) );
  NOR2X4 U102 ( .A(B_2_), .B(A_2_), .Y(n85) );
  OAI21X4 U106 ( .A0(n89), .A1(n92), .B0(n90), .Y(n88) );
  NAND2X4 U115 ( .A(B_0_), .B(A_0_), .Y(n92) );
  NOR2X4 U119 ( .A(B_3_), .B(A_3_), .Y(n82) );
  OAI21X2 U120 ( .A0(n87), .A1(n85), .B0(n86), .Y(n84) );
  INVX1 U121 ( .A(n88), .Y(n87) );
  OAI21X2 U122 ( .A0(n1), .A1(n77), .B0(n78), .Y(n76) );
  OAI21X1 U123 ( .A0(n1), .A1(n43), .B0(n44), .Y(n42) );
  OAI21XL U124 ( .A0(n1), .A1(n30), .B0(n31), .Y(n29) );
  OAI21X1 U125 ( .A0(n1), .A1(n19), .B0(n20), .Y(n18) );
  AOI21X1 U126 ( .A0(n56), .A1(n2), .B0(n57), .Y(n55) );
  OAI21X1 U127 ( .A0(n148), .A1(n58), .B0(n61), .Y(n57) );
  INVX2 U128 ( .A(n5), .Y(n97) );
  NOR2X1 U129 ( .A(n5), .B(n156), .Y(n21) );
  OAI21X2 U130 ( .A0(n1), .A1(n54), .B0(n55), .Y(n53) );
  XOR2X1 U131 ( .A(n15), .B(n92), .Y(SUM_1_) );
  AOI21X1 U132 ( .A0(n97), .A1(n2), .B0(n66), .Y(n64) );
  INVXL U133 ( .A(n148), .Y(n66) );
  NAND2XL U134 ( .A(n3), .B(n45), .Y(n43) );
  AND2X1 U135 ( .A(n153), .B(n92), .Y(SUM_0_) );
  NAND2BX1 U136 ( .AN(n89), .B(n90), .Y(n15) );
  AOI21X1 U137 ( .A0(n21), .A1(n2), .B0(n22), .Y(n20) );
  NAND2X1 U138 ( .A(n97), .B(n148), .Y(n10) );
  BUFX4 U139 ( .A(n4), .Y(n148) );
  NOR2X2 U140 ( .A(B_4_), .B(A_4_), .Y(n77) );
  NOR2X4 U141 ( .A(B_1_), .B(A_1_), .Y(n89) );
  NOR2X1 U142 ( .A(n5), .B(n34), .Y(n32) );
  NOR2X1 U143 ( .A(n5), .B(n58), .Y(n56) );
  NAND2XL U144 ( .A(n98), .B(n75), .Y(n11) );
  INVX1 U145 ( .A(n77), .Y(n99) );
  XOR2X2 U146 ( .A(n29), .B(n155), .Y(SUM_10_) );
  INVXL U147 ( .A(n27), .Y(n93) );
  NOR2X2 U148 ( .A(B_6_), .B(A_6_), .Y(n5) );
  XOR2X4 U149 ( .A(n1), .B(n152), .Y(SUM_4_) );
  OAI21X2 U150 ( .A0(n1), .A1(n70), .B0(n71), .Y(n69) );
  XNOR2X2 U151 ( .A(n76), .B(n11), .Y(SUM_5_) );
  OAI21X2 U152 ( .A0(n148), .A1(n156), .B0(n24), .Y(n22) );
  XOR2X2 U153 ( .A(n87), .B(n14), .Y(SUM_2_) );
  NAND2X2 U154 ( .A(B_5_), .B(A_5_), .Y(n75) );
  XNOR2X2 U155 ( .A(n69), .B(n10), .Y(SUM_6_) );
  XNOR2X4 U156 ( .A(n62), .B(n9), .Y(SUM_7_) );
  OAI21X2 U157 ( .A0(n1), .A1(n63), .B0(n64), .Y(n62) );
  BUFX4 U158 ( .A(n42), .Y(n149) );
  BUFX4 U159 ( .A(n18), .Y(n150) );
  OAI21XL U160 ( .A0(n148), .A1(n47), .B0(n48), .Y(n46) );
  NAND2X2 U161 ( .A(B_1_), .B(A_1_), .Y(n90) );
  NAND2X1 U162 ( .A(B_3_), .B(A_3_), .Y(n83) );
  NAND2X2 U163 ( .A(B_2_), .B(A_2_), .Y(n86) );
  NAND2X2 U164 ( .A(n99), .B(n78), .Y(n152) );
  NAND2XL U165 ( .A(n3), .B(n97), .Y(n63) );
  INVXL U166 ( .A(n49), .Y(n47) );
  NAND2XL U167 ( .A(n100), .B(n83), .Y(n13) );
  OAI21X4 U168 ( .A0(n74), .A1(n78), .B0(n75), .Y(n2) );
  INVXL U169 ( .A(n50), .Y(n48) );
  NAND2BX1 U170 ( .AN(n51), .B(n52), .Y(n8) );
  AND2X1 U171 ( .A(n93), .B(n28), .Y(n155) );
  AND2X1 U172 ( .A(n157), .B(n41), .Y(n154) );
  NAND2XL U173 ( .A(n96), .B(n61), .Y(n9) );
  INVXL U174 ( .A(n58), .Y(n96) );
  OR2XL U175 ( .A(B_0_), .B(A_0_), .Y(n153) );
  INVX1 U176 ( .A(n3), .Y(n70) );
  NAND2XL U177 ( .A(n3), .B(n21), .Y(n19) );
  NAND2X1 U178 ( .A(n3), .B(n56), .Y(n54) );
  NAND2XL U179 ( .A(n3), .B(n32), .Y(n30) );
  INVX1 U180 ( .A(n2), .Y(n71) );
  OAI21XL U181 ( .A0(n148), .A1(n34), .B0(n37), .Y(n33) );
  INVX1 U182 ( .A(n26), .Y(n24) );
  OAI21XL U183 ( .A0(n37), .A1(n27), .B0(n28), .Y(n26) );
  XOR2X4 U184 ( .A(n149), .B(n154), .Y(SUM_9_) );
  NAND2XL U185 ( .A(n101), .B(n86), .Y(n14) );
  INVXL U186 ( .A(n85), .Y(n101) );
  AOI21X1 U187 ( .A0(n50), .A1(n157), .B0(n39), .Y(n37) );
  INVX1 U188 ( .A(n41), .Y(n39) );
  OAI21XL U189 ( .A0(n61), .A1(n51), .B0(n52), .Y(n50) );
  NAND2X1 U190 ( .A(n49), .B(n157), .Y(n34) );
  NOR2X1 U191 ( .A(n58), .B(n51), .Y(n49) );
  NOR2X1 U192 ( .A(n5), .B(n47), .Y(n45) );
  OR2X2 U193 ( .A(n34), .B(n27), .Y(n156) );
  INVXL U194 ( .A(n74), .Y(n98) );
  INVXL U195 ( .A(n82), .Y(n100) );
  NAND2X1 U196 ( .A(A_6_), .B(B_6_), .Y(n4) );
  NOR2XL U197 ( .A(B_7_), .B(A_7_), .Y(n58) );
  NOR2XL U198 ( .A(B_8_), .B(A_8_), .Y(n51) );
  NAND2XL U199 ( .A(B_7_), .B(A_7_), .Y(n61) );
  NAND2XL U200 ( .A(B_8_), .B(A_8_), .Y(n52) );
  OR2XL U201 ( .A(B_9_), .B(A_9_), .Y(n157) );
  NAND2XL U202 ( .A(B_9_), .B(A_9_), .Y(n41) );
  AOI21XL U203 ( .A0(n32), .A1(n2), .B0(n33), .Y(n31) );
  AOI21X1 U204 ( .A0(n45), .A1(n2), .B0(n46), .Y(n44) );
  NAND2X2 U205 ( .A(B_4_), .B(A_4_), .Y(n78) );
  NAND2XL U206 ( .A(B_10_), .B(A_10_), .Y(n28) );
  NOR2XL U207 ( .A(B_10_), .B(A_10_), .Y(n27) );
endmodule


module SUBTB_0 ( DL, DLN, Y );
  input [10:0] DL;
  output [11:0] DLN;
  input [12:0] Y;
  wire   N9, N8, N7, N6, N5, N4, N3, N2, N12, N11, N10, N1, N0, n1, n2, n3, n4,
         n5, n6, n7, n8, n9, n10, SYNOPSYS_UNCONNECTED__0;
  assign N0 = Y[2];

  INVX1 U3 ( .A(N11), .Y(N12) );
  NOR2XL U4 ( .A(Y[5]), .B(n8), .Y(n1) );
  XOR2XL U5 ( .A(n8), .B(Y[5]), .Y(N3) );
  INVX1 U6 ( .A(N0), .Y(n10) );
  NOR2XL U7 ( .A(Y[8]), .B(n6), .Y(n2) );
  NAND2BX1 U8 ( .AN(Y[3]), .B(n10), .Y(n9) );
  NAND2BX1 U9 ( .AN(Y[6]), .B(n1), .Y(n7) );
  NAND2BX1 U10 ( .AN(Y[9]), .B(n2), .Y(n5) );
  XNOR2X1 U11 ( .A(Y[9]), .B(n2), .Y(N7) );
  XOR2XL U12 ( .A(n5), .B(Y[10]), .Y(N8) );
  XOR2XL U13 ( .A(n4), .B(Y[11]), .Y(N9) );
  OR2X2 U14 ( .A(Y[4]), .B(n9), .Y(n8) );
  OR2XL U15 ( .A(Y[7]), .B(n7), .Y(n6) );
  OR2XL U16 ( .A(Y[10]), .B(n5), .Y(n4) );
  OR2XL U17 ( .A(Y[11]), .B(n4), .Y(n3) );
  XOR2XL U18 ( .A(n3), .B(Y[12]), .Y(N10) );
  XNOR2X1 U19 ( .A(Y[3]), .B(n10), .Y(N1) );
  XOR2XL U20 ( .A(n6), .B(Y[8]), .Y(N6) );
  XOR2XL U21 ( .A(n7), .B(Y[7]), .Y(N5) );
  XOR2X1 U22 ( .A(n9), .B(Y[4]), .Y(N2) );
  XNOR2X1 U23 ( .A(Y[6]), .B(n1), .Y(N4) );
  OR2XL U24 ( .A(Y[12]), .B(n3), .Y(N11) );
  SUBTB_0_DW01_add_2 add_0_root_sub_0_root_sub_45 ( .A({N12, N11, N10, N9, N8, 
        N7, N6, N5, N4, N3, N2, N1, N0}), .B({1'b0, 1'b0, DL}), .CI(1'b0), 
        .SUM({SYNOPSYS_UNCONNECTED__0, DLN}) );
endmodule


module SYNC_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  INVX1 U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module SYNC_DW01_inc_1 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  INVXL U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module SYNC ( I, SP, DLNX, DSX, LAW, SD, RATE );
  input [4:0] I;
  input [7:0] SP;
  input [11:0] DLNX;
  output [7:0] SD;
  input [1:0] RATE;
  input DSX, LAW;
  wire   I_4_, n421, N68, N69, N70, N71, N157, N207, N208, N239, N240, N241,
         N448, N449, N450, N451, N452, N453, N454, N455, N675, N676, N677,
         N678, N679, N680, N681, N682, r519_A_0_, r519_A_2_, r519_A_4_,
         r519_A_6_, n1, n2, n3, n4, n5, n6, n7, n8, n9, n11, SD_3_, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42,
         n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56,
         n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70,
         n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84,
         n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98,
         n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110,
         n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121,
         n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132,
         n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143,
         n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154,
         n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165,
         n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, n176,
         n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187,
         n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198,
         n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209,
         n210, n211, n212, n213, n214, n215, n216, n217, n218, n219, n220,
         n221, n222, n223, n224, n225, n226, n227, n228, n229, n230, n231,
         n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, n242,
         n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253,
         n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264,
         n265, n266, n267, n268, n269, n270, n271, n272, n273, n274, n275,
         n276, n277, n278, n279, n280, n281, n282, n283, n284, n285, n286,
         n287, n288, n289, n290, n291, n292, n293, n294, n295, n296, n297,
         n298, n299, n300, n301, n302, n303, n304, n305, n306, n307, n308,
         n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, n319,
         n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330,
         n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341,
         n342, n343, n344, n345, n346, n347, n348, n349, n350, n351, n352,
         n353, n354, n355, n356, n357, n358, n359, n360, n361, n362, n363,
         n364, n365, n366, n367, n368, n369, n370, n371, n372, n373, n374,
         n375, n376, n377, n378, n379, n380, n381, n382, n383, n384, n385,
         n386, n387, n388, n389, n390, n391, n392, n393, n394, n395, n396,
         n397, n398, n399, n400, n401, n402, n403, n404, n405, n406, n407,
         n408, n409, n410, n411, n412, n413, n414, n415, n416, n417, n418,
         n419, n420, add_234_carry_3_, add_199_carry_4_;
  assign I_4_ = I[4];
  assign N68 = I[0];
  assign N69 = I[1];
  assign N70 = I[2];
  assign N71 = I[3];
  assign SD[3] = SD_3_;

  CLKINVXL U3 ( .A(SP[4]), .Y(r519_A_4_) );
  INVX4 U4 ( .A(n57), .Y(n110) );
  INVX4 U5 ( .A(n143), .Y(n116) );
  NAND2BX2 U6 ( .AN(n143), .B(n97), .Y(n208) );
  NAND2BX2 U7 ( .AN(n217), .B(n97), .Y(n38) );
  OAI21X2 U8 ( .A0(n27), .A1(n37), .B0(n118), .Y(n97) );
  NAND2BX4 U9 ( .AN(DLNX[4]), .B(n46), .Y(n242) );
  XOR2X2 U10 ( .A(n295), .B(n296), .Y(n302) );
  CLKINVX1 U11 ( .A(n216), .Y(n250) );
  OAI21X1 U12 ( .A0(n216), .A1(n217), .B0(n218), .Y(n4) );
  OAI211X2 U13 ( .A0(n28), .A1(n170), .B0(n169), .C0(n216), .Y(n98) );
  NOR2X2 U14 ( .A(n216), .B(n155), .Y(n134) );
  NAND3X1 U15 ( .A(n154), .B(n216), .C(n133), .Y(n61) );
  NAND3BX2 U16 ( .AN(n88), .B(n40), .C(n119), .Y(n216) );
  AOI2BB1X4 U17 ( .A0N(n255), .A1N(n254), .B0(n253), .Y(n256) );
  AOI2BB1X2 U18 ( .A0N(n7), .A1N(n251), .B0(n252), .Y(n253) );
  NAND3BX2 U19 ( .AN(n242), .B(n47), .C(n164), .Y(n79) );
  INVX2 U20 ( .A(n55), .Y(n47) );
  INVX4 U21 ( .A(n27), .Y(n164) );
  NAND2X1 U22 ( .A(N449), .B(n385), .Y(n335) );
  OAI21X1 U23 ( .A0(n178), .A1(n177), .B0(n176), .Y(n182) );
  OAI2BB1X2 U24 ( .A0N(n162), .A1N(n70), .B0(n102), .Y(n100) );
  NAND2BX2 U25 ( .AN(n229), .B(n208), .Y(n209) );
  OAI2BB1X4 U26 ( .A0N(n96), .A1N(n95), .B0(n116), .Y(n229) );
  NOR2XL U27 ( .A(n162), .B(n119), .Y(n96) );
  INVX2 U28 ( .A(n208), .Y(n279) );
  MXI2X4 U29 ( .A(n225), .B(n224), .S0(n29), .Y(n236) );
  NAND3X2 U30 ( .A(n222), .B(n221), .C(n220), .Y(n225) );
  NAND2BX2 U31 ( .AN(n30), .B(n116), .Y(n217) );
  OAI21X2 U32 ( .A0(n30), .A1(n196), .B0(n197), .Y(n114) );
  MXI2X2 U33 ( .A(n197), .B(n196), .S0(n29), .Y(n198) );
  OAI211X2 U34 ( .A0(n19), .A1(n113), .B0(n112), .C0(n179), .Y(n197) );
  OAI21X1 U35 ( .A0(n133), .A1(n249), .B0(n228), .Y(n195) );
  OAI21X2 U36 ( .A0(n100), .A1(n99), .B0(n122), .Y(n249) );
  INVX4 U37 ( .A(n389), .Y(n360) );
  NAND2X2 U38 ( .A(LAW), .B(n319), .Y(n389) );
  NOR3XL U39 ( .A(n117), .B(DLNX[1]), .C(DLNX[3]), .Y(n48) );
  NAND4X1 U40 ( .A(n61), .B(n230), .C(n218), .D(n60), .Y(n62) );
  BUFX16 U41 ( .A(DLNX[11]), .Y(n28) );
  OR2X2 U42 ( .A(DLNX[1]), .B(DLNX[0]), .Y(n140) );
  OAI2BB1X1 U43 ( .A0N(n27), .A1N(DLNX[7]), .B0(n162), .Y(n102) );
  INVX1 U44 ( .A(DLNX[7]), .Y(n90) );
  OAI21X1 U45 ( .A0(n134), .A1(n195), .B0(n279), .Y(n152) );
  OAI211X1 U46 ( .A0(n148), .A1(n174), .B0(n147), .C0(n227), .Y(n151) );
  CLKINVX3 U47 ( .A(DLNX[8]), .Y(n162) );
  INVX1 U48 ( .A(n69), .Y(n175) );
  INVXL U49 ( .A(n192), .Y(n201) );
  NAND3X1 U50 ( .A(n168), .B(n107), .C(n106), .Y(n196) );
  INVX1 U51 ( .A(SP[1]), .Y(n331) );
  INVX1 U52 ( .A(n285), .Y(n286) );
  MXI2X1 U53 ( .A(n187), .B(n186), .S0(n29), .Y(n188) );
  OAI21XL U54 ( .A0(n211), .A1(n210), .B0(n281), .Y(n214) );
  INVXL U55 ( .A(SP[2]), .Y(n6) );
  NAND2X1 U56 ( .A(n297), .B(n8), .Y(n285) );
  NAND2BX2 U57 ( .AN(n318), .B(n317), .Y(n417) );
  XOR2X2 U58 ( .A(n398), .B(LAW), .Y(SD[6]) );
  AOI21X1 U59 ( .A0(n102), .A1(n1), .B0(n101), .Y(n111) );
  NAND2BX1 U60 ( .AN(n246), .B(n223), .Y(n218) );
  CLKINVX2 U61 ( .A(n28), .Y(n246) );
  NAND2X1 U62 ( .A(n272), .B(n30), .Y(n252) );
  NAND2X1 U63 ( .A(n280), .B(n29), .Y(n60) );
  NAND3X1 U64 ( .A(n154), .B(n228), .C(n148), .Y(n230) );
  INVX1 U65 ( .A(n38), .Y(n154) );
  NAND2X1 U66 ( .A(n233), .B(n257), .Y(n259) );
  NAND2X1 U67 ( .A(n248), .B(n30), .Y(n254) );
  OAI2BB1X1 U68 ( .A0N(n67), .A1N(n68), .B0(n66), .Y(n69) );
  INVX2 U69 ( .A(n136), .Y(n68) );
  OAI31X1 U70 ( .A0(n242), .A1(n131), .A2(n108), .B0(n243), .Y(n155) );
  OAI211X1 U71 ( .A0(n110), .A1(n164), .B0(n116), .C0(n84), .Y(n123) );
  NOR3X2 U72 ( .A(n263), .B(n24), .C(n262), .Y(n299) );
  OAI31XL U73 ( .A0(DLNX[8]), .A1(n57), .A2(n71), .B0(n102), .Y(n133) );
  AOI21X1 U74 ( .A0(n29), .A1(n232), .B0(n231), .Y(n235) );
  AOI21XL U75 ( .A0(n376), .A1(n345), .B0(n360), .Y(n344) );
  NAND3X1 U76 ( .A(n323), .B(n339), .C(n20), .Y(n337) );
  AOI2BB1X1 U77 ( .A0N(DLNX[1]), .A1N(DLNX[2]), .B0(n94), .Y(n1) );
  INVX1 U78 ( .A(n1), .Y(n99) );
  AOI32X1 U79 ( .A0(n204), .A1(n237), .A2(n28), .B0(n194), .B1(n155), .Y(n157)
         );
  NAND2XL U80 ( .A(LAW), .B(n322), .Y(n402) );
  OAI221XL U81 ( .A0(n346), .A1(n378), .B0(n345), .B1(n409), .C0(n335), .Y(
        n342) );
  NAND2XL U82 ( .A(n132), .B(n139), .Y(n243) );
  AOI2BB2X2 U83 ( .B0(n204), .B1(n240), .A0N(n252), .A1N(n2), .Y(n199) );
  INVX1 U84 ( .A(n277), .Y(n2) );
  AND2X2 U85 ( .A(n3), .B(n338), .Y(n405) );
  INVX1 U86 ( .A(n337), .Y(n3) );
  NAND3BXL U87 ( .AN(n243), .B(n110), .C(n109), .Y(n245) );
  NAND4X1 U88 ( .A(n29), .B(n126), .C(n204), .D(n128), .Y(n76) );
  OAI2BB1X2 U89 ( .A0N(n323), .A1N(n316), .B0(n332), .Y(n347) );
  AOI21XL U90 ( .A0(n376), .A1(n361), .B0(n360), .Y(n366) );
  INVX2 U91 ( .A(n409), .Y(n376) );
  AND2X2 U92 ( .A(n287), .B(n289), .Y(n5) );
  AOI21XL U93 ( .A0(n68), .A1(n65), .B0(n143), .Y(n66) );
  NOR2BX1 U94 ( .AN(n169), .B(n223), .Y(n150) );
  OAI211XL U95 ( .A0(n417), .A1(n368), .B0(n410), .C0(n374), .Y(n371) );
  NOR2XL U96 ( .A(n20), .B(n402), .Y(n403) );
  AND3X2 U97 ( .A(n131), .B(n83), .C(n82), .Y(n125) );
  INVX1 U98 ( .A(n4), .Y(n234) );
  AND3X2 U99 ( .A(n192), .B(n191), .C(n156), .Y(n115) );
  AOI31X1 U100 ( .A0(n404), .A1(n322), .A2(n32), .B0(n403), .Y(n408) );
  AOI21X1 U101 ( .A0(n333), .A1(n316), .B0(n414), .Y(n317) );
  OAI2BB1X4 U102 ( .A0N(n43), .A1N(n70), .B0(n68), .Y(n81) );
  INVXL U103 ( .A(n26), .Y(n70) );
  OAI21XL U104 ( .A0(n180), .A1(n179), .B0(n168), .Y(n187) );
  NOR2XL U105 ( .A(n280), .B(n279), .Y(n282) );
  OR2X1 U106 ( .A(n409), .B(n388), .Y(n374) );
  OAI21XL U107 ( .A0(n312), .A1(n311), .B0(n338), .Y(n329) );
  INVX2 U108 ( .A(n402), .Y(n338) );
  NOR2X1 U109 ( .A(n233), .B(n38), .Y(n194) );
  OAI22X1 U110 ( .A0(n127), .A1(n128), .B0(n126), .B1(n125), .Y(n129) );
  INVX1 U111 ( .A(n105), .Y(n126) );
  AND3X2 U112 ( .A(n410), .B(n359), .C(n358), .Y(n11) );
  NAND2XL U113 ( .A(n68), .B(n41), .Y(n228) );
  NAND2X1 U114 ( .A(n220), .B(n223), .Y(n278) );
  NAND3BX1 U115 ( .AN(n215), .B(n214), .C(n213), .Y(n265) );
  OR2X2 U116 ( .A(n233), .B(I_4_), .Y(n273) );
  OR2X4 U117 ( .A(n353), .B(LAW), .Y(n14) );
  NAND2XL U118 ( .A(n375), .B(n374), .Y(n381) );
  NOR2X2 U119 ( .A(n125), .B(n143), .Y(n178) );
  NAND2BX1 U120 ( .AN(n90), .B(n67), .Y(n40) );
  NAND2X1 U121 ( .A(n204), .B(n30), .Y(n207) );
  NAND2BX2 U122 ( .AN(n414), .B(n347), .Y(n378) );
  NAND2X1 U123 ( .A(SP[7]), .B(n314), .Y(n399) );
  OAI2BB1X2 U124 ( .A0N(n288), .A1N(n5), .B0(n285), .Y(n407) );
  NAND4X1 U125 ( .A(n387), .B(n410), .C(n386), .D(n397), .Y(n398) );
  INVX1 U126 ( .A(n176), .Y(n127) );
  NAND3X1 U127 ( .A(n124), .B(n123), .C(n122), .Y(n176) );
  MXI2X1 U128 ( .A(n343), .B(n344), .S0(n6), .Y(n352) );
  NOR2X2 U129 ( .A(n28), .B(DLNX[9]), .Y(n34) );
  OAI21XL U130 ( .A0(n26), .A1(n27), .B0(DLNX[7]), .Y(n119) );
  OR2XL U131 ( .A(n26), .B(DLNX[7]), .Y(n65) );
  NAND3BX4 U132 ( .AN(n342), .B(n341), .C(n340), .Y(n421) );
  AOI31X2 U133 ( .A0(n115), .A1(n199), .A2(n114), .B0(N68), .Y(n190) );
  NAND2BX4 U134 ( .AN(DLNX[10]), .B(n34), .Y(n143) );
  NAND2BX1 U135 ( .AN(SP[1]), .B(SP[0]), .Y(n345) );
  NAND4BX2 U136 ( .AN(n201), .B(n200), .C(n199), .D(n198), .Y(n307) );
  OAI221X2 U137 ( .A0(n185), .A1(n233), .B0(n19), .B1(n184), .C0(n183), .Y(
        n186) );
  AOI21X2 U138 ( .A0(n204), .A1(n182), .B0(n181), .Y(n183) );
  AOI21XL U139 ( .A0(n364), .A1(n346), .B0(n362), .Y(n343) );
  OAI21X4 U140 ( .A0(n44), .A1(n81), .B0(n116), .Y(n148) );
  OR2X4 U141 ( .A(n27), .B(DLNX[7]), .Y(n141) );
  NOR2XL U142 ( .A(DLNX[3]), .B(DLNX[7]), .Y(n42) );
  INVX4 U143 ( .A(n148), .Y(n212) );
  NAND3BX4 U144 ( .AN(n420), .B(n419), .C(n418), .Y(SD[7]) );
  OAI21X2 U145 ( .A0(n416), .A1(n415), .B0(SP[7]), .Y(n419) );
  BUFX12 U146 ( .A(DLNX[5]), .Y(n26) );
  BUFX8 U147 ( .A(DLNX[6]), .Y(n27) );
  NAND2BX2 U148 ( .AN(n296), .B(n295), .Y(n268) );
  XOR2X2 U149 ( .A(n407), .B(SP[7]), .Y(n318) );
  NAND2BX2 U150 ( .AN(n104), .B(n93), .Y(n221) );
  NAND3X1 U151 ( .A(n178), .B(n204), .C(n105), .Y(n106) );
  NAND2BX2 U152 ( .AN(n339), .B(n338), .Y(n410) );
  NOR2X1 U153 ( .A(n110), .B(n36), .Y(n37) );
  NAND3BX1 U154 ( .AN(n166), .B(n54), .C(n246), .Y(n104) );
  NAND3X1 U155 ( .A(n53), .B(n26), .C(n52), .Y(n54) );
  NAND2X1 U156 ( .A(DLNX[9]), .B(n91), .Y(n103) );
  OAI21X1 U157 ( .A0(n59), .A1(n58), .B0(n116), .Y(n93) );
  NAND2X1 U158 ( .A(n118), .B(n57), .Y(n58) );
  OAI211X1 U159 ( .A0(n26), .A1(n56), .B0(n27), .C0(n55), .Y(n59) );
  INVX1 U160 ( .A(n209), .Y(n172) );
  OAI2BB1X1 U161 ( .A0N(n75), .A1N(n108), .B0(n74), .Y(n105) );
  INVX1 U162 ( .A(n49), .Y(n118) );
  NAND2BX1 U163 ( .AN(n142), .B(n103), .Y(n219) );
  OAI21XL U164 ( .A0(n160), .A1(n94), .B0(n164), .Y(n95) );
  INVX1 U165 ( .A(n219), .Y(n170) );
  OAI31X1 U166 ( .A0(DLNX[1]), .A1(DLNX[3]), .A2(DLNX[2]), .B0(DLNX[4]), .Y(
        n120) );
  NAND3X1 U167 ( .A(n72), .B(n162), .C(n116), .Y(n128) );
  INVX1 U168 ( .A(n298), .Y(n300) );
  INVX1 U169 ( .A(n322), .Y(n319) );
  OAI21X2 U170 ( .A0(n262), .A1(n263), .B0(n24), .Y(n298) );
  OAI2BB1X1 U171 ( .A0N(n283), .A1N(n282), .B0(n281), .Y(n284) );
  INVX1 U172 ( .A(n393), .Y(n364) );
  NAND2BX2 U173 ( .AN(n414), .B(n347), .Y(n393) );
  OAI21X2 U174 ( .A0(n299), .A1(n269), .B0(n268), .Y(n287) );
  INVX1 U175 ( .A(n410), .Y(n384) );
  NAND2BX1 U176 ( .AN(n378), .B(n379), .Y(n375) );
  OAI21XL U177 ( .A0(n379), .A1(n378), .B0(n377), .Y(n380) );
  NAND2X2 U178 ( .A(n140), .B(DLNX[2]), .Y(n160) );
  NAND2X2 U179 ( .A(n157), .B(n156), .Y(n158) );
  MXI2XL U180 ( .A(n366), .B(n365), .S0(SP[4]), .Y(n373) );
  NOR4BX4 U181 ( .AN(n152), .B(n151), .C(n150), .D(n149), .Y(n153) );
  NOR2XL U182 ( .A(n131), .B(n56), .Y(n44) );
  OAI21XL U183 ( .A0(n171), .A1(n170), .B0(n169), .Y(n173) );
  INVX2 U184 ( .A(n81), .Y(n82) );
  OAI21XL U185 ( .A0(n229), .A1(n228), .B0(n227), .Y(n232) );
  NAND3X1 U186 ( .A(n238), .B(n204), .C(n123), .Y(n112) );
  NAND4BBX2 U187 ( .AN(n7), .BN(n98), .C(n227), .D(n209), .Y(n277) );
  NAND2X2 U188 ( .A(n188), .B(n189), .Y(n303) );
  NOR4BX2 U189 ( .AN(n192), .B(n267), .C(n159), .D(n158), .Y(n189) );
  OAI21XL U190 ( .A0(n394), .A1(n393), .B0(n392), .Y(n395) );
  INVX1 U191 ( .A(DLNX[4]), .Y(n50) );
  NAND2BX1 U192 ( .AN(n26), .B(n73), .Y(n55) );
  OR2X2 U193 ( .A(DLNX[2]), .B(n15), .Y(n56) );
  NAND2BX1 U194 ( .AN(n139), .B(DLNX[8]), .Y(n136) );
  INVX1 U195 ( .A(n108), .Y(n132) );
  INVX1 U196 ( .A(n131), .Y(n165) );
  NAND3BX1 U197 ( .AN(n166), .B(n162), .C(n246), .Y(n88) );
  INVX1 U198 ( .A(n65), .Y(n80) );
  OR2X2 U199 ( .A(DLNX[3]), .B(n22), .Y(n71) );
  AOI21X1 U200 ( .A0(n99), .A1(n90), .B0(n80), .Y(n41) );
  INVX1 U201 ( .A(n128), .Y(n238) );
  INVX1 U202 ( .A(n220), .Y(n149) );
  AOI211X1 U203 ( .A0(n7), .A1(n174), .B0(n173), .C0(n172), .Y(n185) );
  OAI2BB1X1 U204 ( .A0N(n78), .A1N(n77), .B0(n76), .Y(n193) );
  NOR2X1 U205 ( .A(n175), .B(n113), .Y(n78) );
  INVX2 U206 ( .A(n323), .Y(n334) );
  OAI21X2 U207 ( .A0(n177), .A1(n129), .B0(n246), .Y(n130) );
  OAI2BB1X1 U208 ( .A0N(n234), .A1N(n236), .B0(n272), .Y(n264) );
  XNOR2X1 U209 ( .A(n305), .B(n304), .Y(n309) );
  NOR4X2 U210 ( .A(n302), .B(n301), .C(n300), .D(n299), .Y(n310) );
  INVX1 U211 ( .A(SP[3]), .Y(n369) );
  NAND2X1 U212 ( .A(n306), .B(n307), .Y(n260) );
  OAI21XL U213 ( .A0(n21), .A1(n378), .B0(n355), .Y(n356) );
  XOR2X2 U214 ( .A(n330), .B(LAW), .Y(SD[0]) );
  NAND3X1 U215 ( .A(n329), .B(n328), .C(n327), .Y(n330) );
  CLKINVX3 U216 ( .A(n9), .Y(SD[1]) );
  NAND3BX2 U217 ( .AN(n384), .B(n383), .C(n382), .Y(SD[5]) );
  AND2X2 U218 ( .A(n249), .B(n212), .Y(n7) );
  NAND2BX2 U219 ( .AN(n233), .B(n62), .Y(n192) );
  AND4X2 U220 ( .A(n276), .B(n275), .C(n274), .D(n273), .Y(n8) );
  INVX1 U221 ( .A(n303), .Y(n305) );
  MXI2X1 U222 ( .A(n357), .B(n356), .S0(SP[3]), .Y(n359) );
  MXI2X4 U223 ( .A(n86), .B(n85), .S0(n29), .Y(n87) );
  NOR2X2 U224 ( .A(n28), .B(n178), .Y(n86) );
  NAND4X1 U225 ( .A(n26), .B(n27), .C(DLNX[4]), .D(n92), .Y(n169) );
  MXI2X1 U226 ( .A(n409), .B(n378), .S0(SP[0]), .Y(n336) );
  NAND4X1 U227 ( .A(n322), .B(LAW), .C(n321), .D(n320), .Y(n324) );
  OR2X2 U228 ( .A(n28), .B(DLNX[10]), .Y(n142) );
  AND2X2 U229 ( .A(DLNX[1]), .B(DLNX[2]), .Y(n22) );
  AND2X2 U230 ( .A(DLNX[0]), .B(DLNX[1]), .Y(n15) );
  CLKINVX3 U231 ( .A(n421), .Y(n9) );
  INVX4 U232 ( .A(n11), .Y(SD_3_) );
  NAND2X1 U233 ( .A(n353), .B(LAW), .Y(n13) );
  NAND2X4 U234 ( .A(n13), .B(n14), .Y(SD[2]) );
  NOR2X2 U235 ( .A(n352), .B(n351), .Y(n353) );
  NAND3XL U236 ( .A(n135), .B(n242), .C(n26), .Y(n145) );
  NOR2XL U237 ( .A(n51), .B(n50), .Y(n52) );
  NOR2XL U238 ( .A(n49), .B(n164), .Y(n53) );
  NAND2BX1 U239 ( .AN(n400), .B(n313), .Y(n332) );
  NAND2X1 U240 ( .A(n227), .B(n209), .Y(n210) );
  AND2X2 U241 ( .A(n111), .B(n245), .Y(n19) );
  NAND4BBX1 U242 ( .AN(SP[0]), .BN(SP[2]), .C(r519_A_6_), .D(r519_A_4_), .Y(
        n292) );
  NAND3BX2 U243 ( .AN(n142), .B(n104), .C(n103), .Y(n220) );
  NAND3BX1 U244 ( .AN(n233), .B(n278), .C(n169), .Y(n107) );
  NOR2XL U245 ( .A(n212), .B(n208), .Y(n211) );
  OAI2BB1X1 U246 ( .A0N(n118), .A1N(n117), .B0(n116), .Y(n177) );
  NOR2XL U247 ( .A(DLNX[3]), .B(n142), .Y(n109) );
  NAND3BXL U248 ( .AN(n100), .B(DLNX[4]), .C(n71), .Y(n72) );
  NAND3BX2 U249 ( .AN(n267), .B(n226), .C(n264), .Y(n295) );
  MXI2X1 U250 ( .A(n381), .B(n380), .S0(SP[5]), .Y(n383) );
  INVX1 U251 ( .A(n392), .Y(n362) );
  NAND3BX1 U252 ( .AN(n414), .B(n347), .C(n21), .Y(n348) );
  INVXL U253 ( .A(SP[6]), .Y(r519_A_6_) );
  INVX4 U254 ( .A(n141), .Y(n139) );
  MXI2X1 U255 ( .A(n239), .B(n30), .S0(n238), .Y(n241) );
  NAND2XL U256 ( .A(n219), .B(n223), .Y(n222) );
  NAND2BX1 U257 ( .AN(n119), .B(n121), .Y(n124) );
  NAND2XL U258 ( .A(n171), .B(n246), .Y(n147) );
  NAND2XL U259 ( .A(n111), .B(n248), .Y(n168) );
  OR2XL U260 ( .A(DLNX[9]), .B(DLNX[10]), .Y(n166) );
  NAND2XL U261 ( .A(n80), .B(n160), .Y(n83) );
  NAND3XL U262 ( .A(DLNX[3]), .B(n140), .C(n26), .Y(n146) );
  NAND2BX2 U263 ( .AN(n360), .B(n392), .Y(n411) );
  OAI2BB1X1 U264 ( .A0N(n26), .A1N(DLNX[8]), .B0(n136), .Y(n137) );
  NAND2XL U265 ( .A(DLNX[3]), .B(n56), .Y(n39) );
  INVXL U266 ( .A(DSX), .Y(n30) );
  XNOR2X4 U267 ( .A(n32), .B(n16), .Y(SD[4]) );
  OR2X4 U268 ( .A(n373), .B(n372), .Y(n16) );
  XNOR2X1 U269 ( .A(n297), .B(n8), .Y(n301) );
  NAND2BX1 U270 ( .AN(n333), .B(n17), .Y(n413) );
  XOR2X1 U271 ( .A(n407), .B(SP[7]), .Y(n17) );
  INVX1 U272 ( .A(n296), .Y(n266) );
  NOR2BXL U273 ( .AN(n204), .B(N71), .Y(n23) );
  MXI2XL U274 ( .A(n23), .B(n272), .S0(N71), .Y(n205) );
  INVXL U275 ( .A(N69), .Y(n63) );
  XNOR2X1 U276 ( .A(I_4_), .B(n18), .Y(N241) );
  NAND2XL U277 ( .A(add_234_carry_3_), .B(N71), .Y(n18) );
  INVXL U278 ( .A(N68), .Y(n304) );
  INVX1 U279 ( .A(n391), .Y(n379) );
  NAND3X1 U280 ( .A(n21), .B(r519_A_4_), .C(n369), .Y(n391) );
  NAND2X1 U281 ( .A(n332), .B(n316), .Y(n333) );
  INVX1 U282 ( .A(n354), .Y(n367) );
  INVX1 U283 ( .A(n88), .Y(n122) );
  NOR2XL U284 ( .A(n250), .B(n249), .Y(n251) );
  INVX1 U285 ( .A(n221), .Y(n280) );
  INVX1 U286 ( .A(n230), .Y(n231) );
  INVX1 U287 ( .A(n252), .Y(n281) );
  NAND2X1 U288 ( .A(n315), .B(n314), .Y(n316) );
  INVXL U289 ( .A(SP[5]), .Y(n291) );
  INVX1 U290 ( .A(n401), .Y(n313) );
  NAND3BXL U291 ( .AN(n291), .B(SP[3]), .C(SP[1]), .Y(n400) );
  NAND2BXL U292 ( .AN(n345), .B(SP[2]), .Y(n354) );
  INVX1 U293 ( .A(n33), .Y(n314) );
  NAND3BX1 U294 ( .AN(SP[3]), .B(n331), .C(n291), .Y(n33) );
  NAND2BX1 U295 ( .AN(n400), .B(n315), .Y(n339) );
  OR2X2 U296 ( .A(n401), .B(n399), .Y(n320) );
  AND2X2 U297 ( .A(n321), .B(n320), .Y(n20) );
  INVXL U298 ( .A(SP[2]), .Y(r519_A_2_) );
  NOR2XL U299 ( .A(SP[2]), .B(n346), .Y(n21) );
  NOR2XL U300 ( .A(DLNX[8]), .B(DLNX[7]), .Y(n84) );
  NAND2BX4 U301 ( .AN(n93), .B(n229), .Y(n227) );
  AOI21XL U302 ( .A0(n195), .A1(n194), .B0(n193), .Y(n200) );
  NAND2BX1 U303 ( .AN(n27), .B(n120), .Y(n121) );
  NOR2X1 U304 ( .A(n26), .B(n35), .Y(n36) );
  NOR2BX1 U305 ( .AN(DLNX[3]), .B(n160), .Y(n35) );
  NAND2XL U306 ( .A(DLNX[4]), .B(DLNX[3]), .Y(n94) );
  INVXL U307 ( .A(n223), .Y(n224) );
  NAND2XL U308 ( .A(n237), .B(n30), .Y(n239) );
  NOR2XL U309 ( .A(n27), .B(DLNX[8]), .Y(n89) );
  NAND2XL U310 ( .A(n100), .B(n116), .Y(n101) );
  OAI21XL U311 ( .A0(n167), .A1(n166), .B0(n246), .Y(n180) );
  AOI31XL U312 ( .A0(n165), .A1(n164), .A2(n163), .B0(n162), .Y(n167) );
  NOR2XL U313 ( .A(DLNX[4]), .B(n161), .Y(n163) );
  INVX1 U314 ( .A(n160), .Y(n161) );
  NAND2BX1 U315 ( .AN(n26), .B(n42), .Y(n131) );
  NOR2X2 U316 ( .A(n153), .B(n252), .Y(n159) );
  OAI21XL U317 ( .A0(n247), .A1(n246), .B0(n245), .Y(n255) );
  NOR3BXL U318 ( .AN(n244), .B(DLNX[10]), .C(n243), .Y(n247) );
  OAI21XL U319 ( .A0(DLNX[3]), .A1(n242), .B0(n26), .Y(n244) );
  AOI21X1 U320 ( .A0(N450), .A1(n385), .B0(n384), .Y(n349) );
  NAND2XL U321 ( .A(N454), .B(n385), .Y(n386) );
  NOR2X1 U322 ( .A(n278), .B(n277), .Y(n283) );
  NOR2XL U323 ( .A(DLNX[4]), .B(DLNX[7]), .Y(n43) );
  NAND2BX1 U324 ( .AN(DLNX[4]), .B(n73), .Y(n135) );
  INVX1 U325 ( .A(DLNX[3]), .Y(n73) );
  AOI21X1 U326 ( .A0(n364), .A1(n363), .B0(n362), .Y(n365) );
  NAND2X1 U327 ( .A(n21), .B(n369), .Y(n363) );
  INVX1 U328 ( .A(n142), .Y(n74) );
  NAND3BXL U329 ( .AN(DLNX[9]), .B(n145), .C(n139), .Y(n75) );
  INVX1 U330 ( .A(DLNX[2]), .Y(n46) );
  INVX1 U331 ( .A(n71), .Y(n51) );
  OR2XL U332 ( .A(DLNX[8]), .B(DLNX[9]), .Y(n108) );
  INVX1 U333 ( .A(n30), .Y(n29) );
  INVXL U334 ( .A(SP[0]), .Y(r519_A_0_) );
  NAND3X1 U335 ( .A(n313), .B(n314), .C(n31), .Y(n321) );
  NAND2BX1 U336 ( .AN(SP[0]), .B(n331), .Y(n346) );
  INVX1 U337 ( .A(n292), .Y(n315) );
  AOI22XL U338 ( .A0(N680), .A1(n405), .B0(N453), .B1(n385), .Y(n382) );
  NAND2XL U339 ( .A(n175), .B(n248), .Y(n184) );
  NAND2X1 U340 ( .A(n350), .B(n349), .Y(n351) );
  AOI31XL U341 ( .A0(n146), .A1(n145), .A2(n144), .B0(n116), .Y(n171) );
  NAND2X1 U342 ( .A(n367), .B(n369), .Y(n361) );
  NOR2X2 U343 ( .A(n241), .B(n240), .Y(n258) );
  NOR2X2 U344 ( .A(n49), .B(n45), .Y(n92) );
  NAND3XL U345 ( .A(DLNX[9]), .B(DLNX[10]), .C(n28), .Y(n45) );
  AOI22XL U346 ( .A0(N678), .A1(n405), .B0(N451), .B1(n385), .Y(n358) );
  INVX1 U347 ( .A(N452), .Y(n368) );
  NAND2X1 U348 ( .A(N682), .B(n405), .Y(n406) );
  NOR2XL U349 ( .A(n28), .B(n207), .Y(n215) );
  NAND2XL U350 ( .A(n212), .B(n194), .Y(n213) );
  NOR2XL U351 ( .A(SP[5]), .B(n391), .Y(n394) );
  NAND2X1 U352 ( .A(N679), .B(n405), .Y(n370) );
  NAND2XL U353 ( .A(n123), .B(n237), .Y(n85) );
  AOI21X1 U354 ( .A0(N677), .A1(n405), .B0(n357), .Y(n350) );
  NAND2X1 U355 ( .A(N681), .B(n405), .Y(n387) );
  NOR2BX1 U356 ( .AN(n180), .B(n179), .Y(n181) );
  NAND2BX1 U357 ( .AN(n28), .B(n29), .Y(n77) );
  MXI2X1 U358 ( .A(n396), .B(n395), .S0(SP[6]), .Y(n397) );
  NAND2BX1 U359 ( .AN(DLNX[4]), .B(n39), .Y(n67) );
  OAI2BB1X1 U360 ( .A0N(n139), .A1N(n138), .B0(n137), .Y(n174) );
  OAI21XL U361 ( .A0(DLNX[1]), .A1(n242), .B0(n135), .Y(n138) );
  INVX1 U362 ( .A(SP[7]), .Y(n31) );
  INVX1 U363 ( .A(n257), .Y(n204) );
  INVX1 U364 ( .A(n113), .Y(n248) );
  INVX1 U365 ( .A(n233), .Y(n272) );
  AOI21XL U366 ( .A0(N676), .A1(n405), .B0(n384), .Y(n340) );
  OAI21XL U367 ( .A0(n336), .A1(n411), .B0(SP[1]), .Y(n341) );
  NAND3BXL U368 ( .AN(n371), .B(n375), .C(n370), .Y(n372) );
  NAND2BX1 U369 ( .AN(LAW), .B(n319), .Y(n392) );
  NAND2X1 U370 ( .A(N448), .B(n385), .Y(n328) );
  MXI2XL U371 ( .A(n326), .B(n325), .S0(SP[0]), .Y(n327) );
  NAND2XL U372 ( .A(n392), .B(n409), .Y(n325) );
  OAI21XL U373 ( .A0(n414), .A1(n413), .B0(n389), .Y(n326) );
  NAND2XL U374 ( .A(n410), .B(n409), .Y(n416) );
  OAI21XL U375 ( .A0(n390), .A1(n409), .B0(n389), .Y(n396) );
  NOR2XL U376 ( .A(SP[5]), .B(n388), .Y(n390) );
  OAI21XL U377 ( .A0(n401), .A1(n400), .B0(n399), .Y(n404) );
  OAI21XL U378 ( .A0(n414), .A1(n413), .B0(n412), .Y(n415) );
  INVXL U379 ( .A(n411), .Y(n412) );
  OAI22X1 U380 ( .A0(n337), .A1(n294), .B0(n339), .B1(n293), .Y(n311) );
  INVX1 U381 ( .A(N675), .Y(n294) );
  INVXL U382 ( .A(n318), .Y(n293) );
  NAND2X1 U383 ( .A(RATE[1]), .B(RATE[0]), .Y(n179) );
  NAND2BX1 U384 ( .AN(RATE[1]), .B(RATE[0]), .Y(n257) );
  OR2X2 U385 ( .A(RATE[1]), .B(RATE[0]), .Y(n233) );
  NAND2BX1 U386 ( .AN(RATE[0]), .B(RATE[1]), .Y(n113) );
  NAND2BX1 U387 ( .AN(n417), .B(N455), .Y(n418) );
  OAI21XL U388 ( .A0(n408), .A1(n407), .B0(n406), .Y(n420) );
  MXI2XL U389 ( .A(n320), .B(n321), .S0(n407), .Y(n312) );
  NAND2BXL U390 ( .AN(n8), .B(n284), .Y(n289) );
  INVX1 U391 ( .A(n191), .Y(n306) );
  INVX1 U392 ( .A(n203), .Y(n270) );
  INVX1 U393 ( .A(LAW), .Y(n32) );
  XOR2X1 U394 ( .A(n307), .B(n306), .Y(n308) );
  NOR4BX2 U395 ( .AN(n264), .B(n267), .C(n266), .D(n265), .Y(n269) );
  XOR2X2 U396 ( .A(n31), .B(n290), .Y(n323) );
  OAI21XL U397 ( .A0(n64), .A1(n63), .B0(n203), .Y(n191) );
  NOR2X1 U398 ( .A(n248), .B(n259), .Y(n64) );
  NAND2BX1 U399 ( .AN(n179), .B(n63), .Y(n203) );
  NAND2X1 U400 ( .A(N241), .B(n270), .Y(n276) );
  NAND2X1 U401 ( .A(n206), .B(n205), .Y(n296) );
  AOI22X1 U402 ( .A0(N207), .A1(n271), .B0(N240), .B1(n270), .Y(n206) );
  INVX1 U403 ( .A(n202), .Y(n271) );
  NAND2BX1 U404 ( .AN(N70), .B(n248), .Y(n202) );
  NAND2X1 U405 ( .A(N208), .B(n271), .Y(n275) );
  AOI21X1 U406 ( .A0(N239), .A1(n270), .B0(n25), .Y(n24) );
  MX2X1 U407 ( .A(n271), .B(n259), .S0(N70), .Y(n25) );
  NAND2X1 U408 ( .A(N157), .B(n23), .Y(n274) );
  NOR3XL U409 ( .A(n142), .B(DLNX[8]), .C(n141), .Y(n144) );
  NAND3X1 U410 ( .A(n110), .B(n90), .C(n89), .Y(n91) );
  NAND3X4 U411 ( .A(n310), .B(n309), .C(n308), .Y(n322) );
  AOI21XL U412 ( .A0(n376), .A1(n354), .B0(n411), .Y(n355) );
  AOI21XL U413 ( .A0(n376), .A1(n388), .B0(n411), .Y(n377) );
  NAND3XL U414 ( .A(n367), .B(SP[4]), .C(n369), .Y(n388) );
  NAND4XL U415 ( .A(SP[4]), .B(SP[6]), .C(SP[0]), .D(SP[2]), .Y(n401) );
  NAND2X1 U416 ( .A(n110), .B(n164), .Y(n117) );
  NAND2BX4 U417 ( .AN(n26), .B(n50), .Y(n57) );
  NAND2X2 U418 ( .A(DLNX[8]), .B(DLNX[7]), .Y(n49) );
  NAND3BX4 U419 ( .AN(n48), .B(n92), .C(n79), .Y(n223) );
  CLKINVX3 U420 ( .A(n193), .Y(n156) );
  NAND2X2 U421 ( .A(n92), .B(n79), .Y(n237) );
  OAI2BB1X4 U422 ( .A0N(n28), .A1N(n237), .B0(n87), .Y(n240) );
  AOI21X4 U423 ( .A0(n237), .A1(n130), .B0(n207), .Y(n267) );
  NAND2X2 U424 ( .A(n190), .B(n303), .Y(n261) );
  CLKINVX3 U425 ( .A(n265), .Y(n226) );
  AOI31X2 U426 ( .A0(n236), .A1(n235), .A2(n234), .B0(n233), .Y(n262) );
  OAI21X4 U427 ( .A0(n258), .A1(n257), .B0(n256), .Y(n263) );
  NAND4X2 U428 ( .A(n261), .B(n260), .C(n268), .D(n298), .Y(n288) );
  CLKINVX3 U429 ( .A(n284), .Y(n297) );
  AOI31X2 U430 ( .A0(n289), .A1(n288), .A2(n287), .B0(n286), .Y(n290) );
  NAND2X2 U431 ( .A(n322), .B(n32), .Y(n414) );
  NAND2BX4 U432 ( .AN(n324), .B(n334), .Y(n409) );
  CLKINVX3 U433 ( .A(n417), .Y(n385) );
  OAI2BB1X2 U434 ( .A0N(n376), .A1N(n367), .B0(n348), .Y(n357) );
  XOR2X1 U435 ( .A(I_4_), .B(add_199_carry_4_), .Y(N208) );
  AND2X1 U436 ( .A(N70), .B(N71), .Y(add_199_carry_4_) );
  XOR2X1 U437 ( .A(N71), .B(N70), .Y(N207) );
  XOR2X1 U438 ( .A(N71), .B(add_234_carry_3_), .Y(N240) );
  AND2X1 U439 ( .A(N69), .B(N70), .Y(add_234_carry_3_) );
  XOR2X1 U440 ( .A(N70), .B(N69), .Y(N239) );
  XOR2X1 U441 ( .A(I_4_), .B(N71), .Y(N157) );
  SYNC_DW01_inc_0 r520 ( .A({SP[7], r519_A_6_, SP[5], r519_A_4_, SP[3], 
        r519_A_2_, SP[1], r519_A_0_}), .SUM({N682, N681, N680, N679, N678, 
        N677, N676, N675}) );
  SYNC_DW01_inc_1 r517 ( .A(SP), .SUM({N455, N454, N453, N452, N451, N450, 
        N449, N448}) );
endmodule


module OUT_PCM ( reset, clk, SR, LAW, SE, I, Y, RATE, SD );
  input [15:0] SR;
  input [14:0] SE;
  input [4:0] I;
  input [12:0] Y;
  input [1:0] RATE;
  output [7:0] SD;
  input reset, clk, LAW;
  wire   SDX, n1, n2, n3, n4, n5;
  wire   [7:0] SP;
  wire   [13:0] DSX;
  wire   [15:0] DX;
  wire   [10:0] DLX;
  wire   [11:0] DLNX;

  BUFX3 U1 ( .A(SR[8]), .Y(n1) );
  DLY1X1 U2 ( .A(SP[1]), .Y(n2) );
  CLKBUFXL U3 ( .A(LAW), .Y(n5) );
  INVXL U4 ( .A(SP[3]), .Y(n3) );
  INVX1 U5 ( .A(n3), .Y(n4) );
  COMPRESS OUT_PCM_COMPRESS ( .SR({SR[15:9], n1, SR[7:0]}), .LAW(n5), .SP(SP)
         );
  EXPAND_0 OUT_PCM_EXPAND ( .SIN(SP), .LAW(n5), .SOUT(DSX) );
  SUBTA_0 OUT_PCM_SUBTA ( .SL(DSX), .SE(SE), .D(DX) );
  LOG_0 OUT_PCM_LOG ( .D(DX), .DL(DLX), .DS(SDX) );
  SUBTB_0 OUT_PCM_SUBTB ( .DL(DLX), .DLN(DLNX), .Y(Y) );
  SYNC OUT_PCM_SYNC ( .I(I), .SP({SP[7:4], n4, SP[2], n2, SP[0]}), .DLNX(DLNX), 
        .DSX(SDX), .LAW(n5), .SD(SD), .RATE(RATE) );
endmodule


module CU_0_test_1 ( reset, FSYNC_IN, FSYNC_OUT, NOT_CH_CLK_IN, CH_CLK_OUT, 
        clk, FA_start, FA_done, delay_strobe, scan_enable, test_mode, scan_in0, 
        scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, 
        scan_out2, scan_out3, scan_out4, RF_WR_ADDR, RF_RD_ADDR, RF_WR, RF_RD, 
        test_si2, test_si1, test_so2, test_so1, test_se );
  output [2:0] RF_WR_ADDR;
  output [2:0] RF_RD_ADDR;
  input reset, FSYNC_IN, FSYNC_OUT, NOT_CH_CLK_IN, CH_CLK_OUT, clk, FA_done,
         scan_enable, test_mode, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, test_si2, test_si1, test_se;
  output FA_start, delay_strobe, scan_out0, scan_out1, scan_out2, scan_out3,
         scan_out4, RF_WR, RF_RD, test_so2, test_so1;
  wire   delay_strobe_buff_in, delay_strobe_r, RF_WR_buff_in, RF_WR_r,
         RF_RD_buff_in, IN_WAIT_STATE, N18, N19, N20, N21, N22, out_wait_state,
         N32, N34, N37, N38, N39, N40, OUT_WRITE_STATE, N65, N75, N76, N77, n1,
         n4, n5, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
         n20, n21, n22, n23, n24, n30, n31, n32, n33, n34, n35, n37, n38, n40,
         n42, n44, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66,
         n67, n68, n69, n70, n71, n72, n73, n74, n26, n27, n28, n29, n36, n2;
  wire   [4:0] IN_WAIT_CNT;
  wire   [4:0] OUT_WAIT_CNT;
  wire   [4:2] add_173_carry;
  wire   [4:2] add_131_carry;
  assign test_so1 = out_wait_state;
  assign test_so2 = n67;

  CLKBUFX20 delay_buf ( .A(delay_strobe_buff_in), .Y(delay_strobe) );
  CLKBUFX20 RF_buf1 ( .A(RF_WR_buff_in), .Y(RF_WR) );
  CLKBUFX20 RF_buf2 ( .A(RF_RD_buff_in), .Y(RF_RD) );
  AND2X2 C352 ( .A(NOT_CH_CLK_IN), .B(FSYNC_IN), .Y(N32) );
  AND2X2 U42 ( .A(n33), .B(n34), .Y(n40) );
  AND4X2 U47 ( .A(OUT_WAIT_CNT[4]), .B(OUT_WAIT_CNT[0]), .C(n31), .D(n12), .Y(
        n16) );
  CLKINVX4 U78 ( .A(CH_CLK_OUT), .Y(n66) );
  OAI31X1 U3 ( .A0(OUT_WAIT_CNT[3]), .A1(OUT_WAIT_CNT[2]), .A2(OUT_WAIT_CNT[1]), .B0(OUT_WAIT_CNT[4]), .Y(N34) );
  OAI21XL U4 ( .A0(n1), .A1(test_mode), .B0(n24), .Y(RF_RD_buff_in) );
  MX2X1 U5 ( .A(n59), .B(n60), .S0(OUT_WAIT_CNT[0]), .Y(n7) );
  INVX1 U6 ( .A(test_mode), .Y(n4) );
  INVX1 U7 ( .A(n34), .Y(n70) );
  NOR2BX1 U8 ( .AN(n55), .B(n60), .Y(n59) );
  INVX1 U9 ( .A(reset), .Y(n5) );
  NOR2X1 U10 ( .A(FSYNC_OUT), .B(RF_RD_ADDR[0]), .Y(N75) );
  OAI21XL U11 ( .A0(n23), .A1(n67), .B0(n22), .Y(N77) );
  NAND4BXL U12 ( .AN(FSYNC_OUT), .B(RF_RD_ADDR[1]), .C(RF_RD_ADDR[0]), .D(n67), 
        .Y(n22) );
  AOI2BB1X1 U13 ( .A0N(FSYNC_OUT), .A1N(RF_RD_ADDR[1]), .B0(N75), .Y(n23) );
  NOR2X1 U14 ( .A(FSYNC_OUT), .B(n21), .Y(N76) );
  XNOR2X1 U15 ( .A(RF_RD_ADDR[0]), .B(RF_RD_ADDR[1]), .Y(n21) );
  NAND2X1 U16 ( .A(IN_WAIT_CNT[4]), .B(n33), .Y(n34) );
  NAND2BX1 U17 ( .AN(IN_WAIT_STATE), .B(NOT_CH_CLK_IN), .Y(n33) );
  OAI2BB1X1 U18 ( .A0N(N22), .A1N(n40), .B0(n34), .Y(n18) );
  INVX1 U19 ( .A(n42), .Y(n71) );
  AOI22X1 U20 ( .A0(n70), .A1(IN_WAIT_CNT[3]), .B0(N21), .B1(n40), .Y(n42) );
  INVX1 U21 ( .A(n38), .Y(n72) );
  AOI22X1 U22 ( .A0(n70), .A1(IN_WAIT_CNT[2]), .B0(N20), .B1(n40), .Y(n38) );
  INVX1 U23 ( .A(n37), .Y(n73) );
  AOI22X1 U24 ( .A0(n70), .A1(IN_WAIT_CNT[1]), .B0(N19), .B1(n40), .Y(n37) );
  INVX1 U25 ( .A(n35), .Y(n74) );
  AOI22X1 U26 ( .A0(n70), .A1(IN_WAIT_CNT[0]), .B0(N18), .B1(n40), .Y(n35) );
  INVX1 U27 ( .A(IN_WAIT_CNT[0]), .Y(N18) );
  OAI32X1 U28 ( .A0(n65), .A1(n68), .A2(n13), .B0(n62), .B1(n14), .Y(n19) );
  NOR2BX1 U29 ( .AN(n65), .B(n64), .Y(n62) );
  OAI32X1 U30 ( .A0(n65), .A1(RF_WR_ADDR[1]), .A2(n68), .B0(n69), .B1(n13), 
        .Y(n20) );
  INVX1 U31 ( .A(n64), .Y(n69) );
  OAI21XL U32 ( .A0(RF_WR_ADDR[0]), .A1(n65), .B0(n63), .Y(n64) );
  NAND2BX1 U33 ( .AN(N32), .B(n65), .Y(n63) );
  NOR2X1 U34 ( .A(OUT_WRITE_STATE), .B(n66), .Y(N65) );
  OAI31X1 U35 ( .A0(n14), .A1(n68), .A2(n13), .B0(n16), .Y(n65) );
  INVX1 U36 ( .A(RF_WR_ADDR[1]), .Y(n13) );
  INVX1 U37 ( .A(RF_WR_ADDR[2]), .Y(n14) );
  ADDHXL U38 ( .A(IN_WAIT_CNT[1]), .B(IN_WAIT_CNT[0]), .CO(add_131_carry[2]), 
        .S(N19) );
  ADDHXL U39 ( .A(IN_WAIT_CNT[2]), .B(add_131_carry[2]), .CO(add_131_carry[3]), 
        .S(N20) );
  ADDHXL U40 ( .A(OUT_WAIT_CNT[1]), .B(OUT_WAIT_CNT[0]), .CO(add_173_carry[2]), 
        .S(N37) );
  ADDHXL U41 ( .A(OUT_WAIT_CNT[2]), .B(add_173_carry[2]), .CO(add_173_carry[3]), .S(N38) );
  NAND2BX1 U43 ( .AN(out_wait_state), .B(FA_done), .Y(n55) );
  NOR2X1 U45 ( .A(OUT_WAIT_CNT[3]), .B(OUT_WAIT_CNT[2]), .Y(n31) );
  ADDHXL U46 ( .A(IN_WAIT_CNT[3]), .B(add_131_carry[3]), .CO(add_131_carry[4]), 
        .S(N21) );
  ADDHXL U48 ( .A(OUT_WAIT_CNT[3]), .B(add_173_carry[3]), .CO(add_173_carry[4]), .S(N39) );
  NAND2X1 U49 ( .A(n44), .B(n5), .Y(n60) );
  OAI2BB1X1 U50 ( .A0N(N34), .A1N(FA_done), .B0(n55), .Y(n44) );
  INVX1 U51 ( .A(n57), .Y(n9) );
  AOI22X1 U52 ( .A0(n60), .A1(OUT_WAIT_CNT[1]), .B0(N37), .B1(n59), .Y(n57) );
  INVX1 U53 ( .A(n58), .Y(n10) );
  AOI22X1 U54 ( .A0(n60), .A1(OUT_WAIT_CNT[2]), .B0(N38), .B1(n59), .Y(n58) );
  INVX1 U55 ( .A(n61), .Y(n11) );
  AOI22X1 U56 ( .A0(n60), .A1(OUT_WAIT_CNT[3]), .B0(N39), .B1(n59), .Y(n61) );
  INVX1 U57 ( .A(n56), .Y(n8) );
  AOI22X1 U58 ( .A0(n60), .A1(OUT_WAIT_CNT[4]), .B0(N40), .B1(n59), .Y(n56) );
  NAND3BX1 U60 ( .AN(OUT_WAIT_CNT[4]), .B(OUT_WAIT_CNT[0]), .C(OUT_WAIT_CNT[3]), .Y(n30) );
  NAND3BX1 U63 ( .AN(IN_WAIT_CNT[4]), .B(IN_WAIT_CNT[3]), .C(IN_WAIT_CNT[2]), 
        .Y(n32) );
  NAND2X1 U64 ( .A(test_mode), .B(clk), .Y(n24) );
  OAI2BB1X1 U65 ( .A0N(RF_WR_r), .A1N(n4), .B0(n24), .Y(RF_WR_buff_in) );
  OAI2BB1X1 U66 ( .A0N(delay_strobe_r), .A1N(n4), .B0(n24), .Y(
        delay_strobe_buff_in) );
  XOR2X1 U67 ( .A(add_131_carry[4]), .B(IN_WAIT_CNT[4]), .Y(N22) );
  XOR2X1 U68 ( .A(add_173_carry[4]), .B(OUT_WAIT_CNT[4]), .Y(N40) );
  SEDFFXL RF_RD_r_reg ( .D(N65), .SI(OUT_WRITE_STATE), .E(n5), .SE(test_se), 
        .CK(clk), .Q(n36), .QN(n1) );
  SDFFRHQXL delay_strobe_r_reg ( .D(n16), .SI(n14), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(delay_strobe_r) );
  SDFFRHQXL RF_WR_r_reg ( .D(n15), .SI(n36), .SE(test_se), .CK(clk), .RN(n5), 
        .Q(RF_WR_r) );
  SDFFRHQXL OUT_WRITE_STATE_reg ( .D(CH_CLK_OUT), .SI(OUT_WAIT_CNT[4]), .SE(
        test_se), .CK(clk), .RN(n5), .Q(OUT_WRITE_STATE) );
  SDFFRHQXL FA_start_reg ( .D(n17), .SI(test_si1), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(FA_start) );
  SDFFRHQXL IN_WAIT_STATE_reg ( .D(NOT_CH_CLK_IN), .SI(IN_WAIT_CNT[4]), .SE(
        test_se), .CK(clk), .RN(n5), .Q(IN_WAIT_STATE) );
  SDFFRHQXL out_wait_state_reg ( .D(FA_done), .SI(delay_strobe_r), .SE(test_se), .CK(clk), .RN(n5), .Q(out_wait_state) );
  SDFFRXL RF_in_state_reg_0_ ( .D(n28), .SI(RF_WR_r), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[0]), .QN(n68) );
  SDFFRHQXL IN_WAIT_CNT_reg_4_ ( .D(n18), .SI(IN_WAIT_CNT[3]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[4]) );
  SDFFRHQXL IN_WAIT_CNT_reg_1_ ( .D(n73), .SI(N18), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(IN_WAIT_CNT[1]) );
  SDFFRHQXL IN_WAIT_CNT_reg_3_ ( .D(n71), .SI(IN_WAIT_CNT[2]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[3]) );
  SDFFRHQXL IN_WAIT_CNT_reg_2_ ( .D(n72), .SI(IN_WAIT_CNT[1]), .SE(test_se), 
        .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[2]) );
  SDFFRHQXL IN_WAIT_CNT_reg_0_ ( .D(n74), .SI(FA_start), .SE(test_se), .CK(clk), .RN(n5), .Q(IN_WAIT_CNT[0]) );
  SDFFRHQXL RF_in_state_reg_2_ ( .D(n19), .SI(n13), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[2]) );
  SDFFRHQXL RF_in_state_reg_1_ ( .D(n20), .SI(n68), .SE(test_se), .CK(clk), 
        .RN(n5), .Q(RF_WR_ADDR[1]) );
  SDFFNRX1 RF_STATE_OUT_reg_0_ ( .D(N75), .SI(test_si2), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[0]), .QN(n27) );
  SDFFNRX1 RF_STATE_OUT_reg_2_ ( .D(N77), .SI(n26), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[2]), .QN(n67) );
  SDFFNRX1 RF_STATE_OUT_reg_1_ ( .D(N76), .SI(n27), .SE(test_se), .CKN(
        CH_CLK_OUT), .RN(n5), .Q(RF_RD_ADDR[1]), .QN(n26) );
  MXI2X1 U1 ( .A(n29), .B(n63), .S0(RF_WR_ADDR[0]), .Y(n28) );
  INVX1 U2 ( .A(n16), .Y(n29) );
  SDFFXL OUT_WAIT_CNT_reg_0_ ( .D(n7), .SI(IN_WAIT_STATE), .SE(test_se), .CK(
        clk), .Q(OUT_WAIT_CNT[0]) );
  SDFFXL OUT_WAIT_CNT_reg_4_ ( .D(n8), .SI(OUT_WAIT_CNT[3]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[4]) );
  SDFFXL OUT_WAIT_CNT_reg_3_ ( .D(n11), .SI(OUT_WAIT_CNT[2]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[3]) );
  SDFFXL OUT_WAIT_CNT_reg_2_ ( .D(n10), .SI(n12), .SE(test_se), .CK(clk), .Q(
        OUT_WAIT_CNT[2]), .QN(n2) );
  SDFFXL OUT_WAIT_CNT_reg_1_ ( .D(n9), .SI(OUT_WAIT_CNT[0]), .SE(test_se), 
        .CK(clk), .Q(OUT_WAIT_CNT[1]), .QN(n12) );
  NOR3BX1 U44 ( .AN(IN_WAIT_CNT[1]), .B(N18), .C(n32), .Y(n17) );
  NOR3X1 U59 ( .A(n2), .B(n30), .C(n12), .Y(n15) );
endmodule


module CLOCK_GEN_0_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;
  wire   SUM_0_;
  wire   [7:2] carry;
  assign SUM[0] = SUM_0_;

  ADDHXL U1_1_6 ( .A(A[6]), .B(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  ADDHXL U1_1_4 ( .A(A[4]), .B(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  ADDHXL U1_1_3 ( .A(A[3]), .B(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  ADDHXL U1_1_2 ( .A(A[2]), .B(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  ADDHXL U1_1_5 ( .A(A[5]), .B(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  ADDHXL U1_1_1 ( .A(A[1]), .B(A[0]), .CO(carry[2]), .S(SUM[1]) );
  INVX1 U1 ( .A(A[0]), .Y(SUM_0_) );
  XOR2X1 U2 ( .A(carry[7]), .B(A[7]), .Y(SUM[7]) );
endmodule


module CLOCK_GEN_0_test_1 ( reset, clk, scan_enable, scan_in0, scan_in1, 
        scan_in2, scan_in3, scan_in4, scan_out0, scan_out1, scan_out2, 
        scan_out3, scan_out4, sys_clk_buffered, f_sync_in, f_sync_in_buffered, 
        f_sync_out_buffered, ch_clk_in, not_ch_clk_in_buffered, 
        ch_clk_out_buffered, test_mode, test_si, test_so, test_se );
  input reset, clk, scan_enable, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, f_sync_in, ch_clk_in, test_mode, test_si, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4,
         sys_clk_buffered, f_sync_in_buffered, f_sync_out_buffered,
         not_ch_clk_in_buffered, ch_clk_out_buffered, test_so;
  wire   not_ch_clk_int, f_sync_in_int, FSYNC_STATE, N14, N15, N16, N17, N18,
         N19, N20, N21, f_sync_in_buf_in, f_sync_out_buf_in, n13, n14, n27,
         n28, n58, net83874, net83893, net114842, n2, n4, n5, n6, n7, n8, n9,
         n10, n11, n12, n15, n16, n17, n19, n20, n21, n22, n23, n24, n25, n26,
         n36, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75,
         n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89,
         n90, n91, n92, n93, n94, n95, n96, n97, n29, n30, n31, n32, n3, n1,
         n18;
  wire   [7:0] CLK_GEN_COUNTER;
  wire   [3:0] FSYNC_COUNTER;
  assign test_so = not_ch_clk_int;

  CLKBUFX20 f_sync_in_buf ( .A(f_sync_in_buf_in), .Y(f_sync_in_buffered) );
  CLKBUFX20 f_sync_out_buf ( .A(f_sync_out_buf_in), .Y(f_sync_out_buffered) );
  CLKBUFX20 not_ch_clk_buf ( .A(net83893), .Y(not_ch_clk_in_buffered) );
  CLKBUFX20 ch_clk_out_buf ( .A(net83874), .Y(ch_clk_out_buffered) );
  CLKBUFX20 main_clk_buf ( .A(clk), .Y(sys_clk_buffered) );
  AND4X2 U35 ( .A(n69), .B(CLK_GEN_COUNTER[7]), .C(CLK_GEN_COUNTER[3]), .D(n91), .Y(n96) );
  NAND2X1 U5 ( .A(n7), .B(n6), .Y(net83893) );
  NAND2BX1 U6 ( .AN(test_mode), .B(not_ch_clk_int), .Y(n6) );
  NAND2X1 U7 ( .A(n7), .B(n5), .Y(f_sync_in_buf_in) );
  NAND2BX1 U8 ( .AN(test_mode), .B(f_sync_in_int), .Y(n5) );
  NOR3X1 U9 ( .A(n95), .B(reset), .C(n22), .Y(n2) );
  NAND2BX4 U12 ( .AN(n4), .B(clk), .Y(net114842) );
  OAI21X4 U13 ( .A0(test_mode), .A1(n14), .B0(net114842), .Y(f_sync_out_buf_in) );
  NAND2X1 U14 ( .A(test_mode), .B(clk), .Y(n7) );
  INVX1 U15 ( .A(n74), .Y(n21) );
  NAND2X1 U16 ( .A(n94), .B(n8), .Y(n74) );
  NOR3X1 U17 ( .A(n2), .B(n96), .C(n75), .Y(n89) );
  NOR3X1 U18 ( .A(n75), .B(n21), .C(n26), .Y(n78) );
  INVX1 U19 ( .A(n75), .Y(n23) );
  AOI21X1 U20 ( .A0(n26), .A1(n23), .B0(n21), .Y(n76) );
  AOI21X1 U21 ( .A0(n96), .A1(n22), .B0(n95), .Y(n94) );
  INVX1 U22 ( .A(n80), .Y(n22) );
  NOR2X1 U23 ( .A(reset), .B(n64), .Y(n65) );
  INVX1 U24 ( .A(reset), .Y(n8) );
  NOR3X1 U25 ( .A(FSYNC_STATE), .B(reset), .C(n64), .Y(n95) );
  OAI21XL U26 ( .A0(FSYNC_STATE), .A1(n64), .B0(n8), .Y(n75) );
  OAI32X1 U27 ( .A0(n75), .A1(FSYNC_COUNTER[0]), .A2(n21), .B0(n26), .B1(n74), 
        .Y(n67) );
  NAND2X1 U28 ( .A(n23), .B(n70), .Y(n80) );
  NAND4X1 U29 ( .A(FSYNC_COUNTER[3]), .B(n26), .C(n97), .D(n36), .Y(n70) );
  OAI21XL U30 ( .A0(FSYNC_COUNTER[1]), .A1(n75), .B0(n76), .Y(n77) );
  INVX1 U31 ( .A(f_sync_in), .Y(n64) );
  OAI21XL U32 ( .A0(n96), .A1(n95), .B0(n27), .Y(n28) );
  NAND2X1 U33 ( .A(n94), .B(n93), .Y(n27) );
  NAND4X1 U34 ( .A(CLK_GEN_COUNTER[2]), .B(n22), .C(CLK_GEN_COUNTER[5]), .D(
        n92), .Y(n93) );
  OAI21XL U36 ( .A0(n82), .A1(n14), .B0(n24), .Y(n68) );
  INVX1 U37 ( .A(n95), .Y(n24) );
  NOR3X1 U38 ( .A(n81), .B(n80), .C(n26), .Y(n82) );
  NAND3X1 U39 ( .A(n36), .B(n25), .C(n97), .Y(n81) );
  OAI21XL U40 ( .A0(n72), .A1(n25), .B0(n71), .Y(n66) );
  AOI21X1 U41 ( .A0(n23), .A1(n36), .B0(n77), .Y(n72) );
  NAND4X1 U42 ( .A(FSYNC_COUNTER[2]), .B(FSYNC_COUNTER[1]), .C(n78), .D(n25), 
        .Y(n71) );
  INVX1 U43 ( .A(n90), .Y(n20) );
  AOI22X1 U44 ( .A0(CLK_GEN_COUNTER[6]), .A1(n2), .B0(N20), .B1(n89), .Y(n90)
         );
  INVX1 U45 ( .A(n88), .Y(n19) );
  AOI22X1 U46 ( .A0(CLK_GEN_COUNTER[5]), .A1(n2), .B0(N19), .B1(n89), .Y(n88)
         );
  INVX1 U47 ( .A(n87), .Y(n17) );
  AOI22X1 U48 ( .A0(n2), .A1(CLK_GEN_COUNTER[4]), .B0(N18), .B1(n89), .Y(n87)
         );
  INVX1 U49 ( .A(n86), .Y(n16) );
  AOI22X1 U50 ( .A0(CLK_GEN_COUNTER[3]), .A1(n2), .B0(N17), .B1(n89), .Y(n86)
         );
  INVX1 U51 ( .A(n85), .Y(n15) );
  AOI22X1 U52 ( .A0(CLK_GEN_COUNTER[2]), .A1(n2), .B0(N16), .B1(n89), .Y(n85)
         );
  INVX1 U53 ( .A(n84), .Y(n12) );
  AOI22X1 U54 ( .A0(n2), .A1(CLK_GEN_COUNTER[1]), .B0(N15), .B1(n89), .Y(n84)
         );
  INVX1 U55 ( .A(n83), .Y(n11) );
  AOI22X1 U56 ( .A0(n2), .A1(CLK_GEN_COUNTER[0]), .B0(N14), .B1(n89), .Y(n83)
         );
  INVX1 U57 ( .A(n73), .Y(n10) );
  AOI22X1 U58 ( .A0(CLK_GEN_COUNTER[7]), .A1(n2), .B0(N21), .B1(n89), .Y(n73)
         );
  INVX1 U59 ( .A(n79), .Y(n9) );
  AOI32X1 U60 ( .A0(FSYNC_COUNTER[1]), .A1(n36), .A2(n78), .B0(n77), .B1(
        FSYNC_COUNTER[2]), .Y(n79) );
  NOR2X1 U61 ( .A(CLK_GEN_COUNTER[5]), .B(CLK_GEN_COUNTER[2]), .Y(n69) );
  NOR4BX1 U62 ( .AN(CLK_GEN_COUNTER[6]), .B(CLK_GEN_COUNTER[0]), .C(
        CLK_GEN_COUNTER[1]), .D(CLK_GEN_COUNTER[4]), .Y(n91) );
  INVX1 U66 ( .A(ch_clk_in), .Y(n63) );
  SDFFXL FSYNC_COUNTER_reg_1_ ( .D(n31), .SI(FSYNC_COUNTER[0]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[1]), .QN(n97) );
  SDFFXL f_sync_out_int_reg ( .D(n68), .SI(f_sync_in_int), .SE(test_se), .CK(
        clk), .Q(n30), .QN(n14) );
  SDFFXL ch_clk_out_int_reg ( .D(n58), .SI(FSYNC_STATE), .SE(test_se), .CK(clk), .Q(n29), .QN(n13) );
  MXI2X1 U1 ( .A(n32), .B(n76), .S0(FSYNC_COUNTER[1]), .Y(n31) );
  INVX1 U2 ( .A(n78), .Y(n32) );
  CLOCK_GEN_0_DW01_inc_0 add_86 ( .A(CLK_GEN_COUNTER), .SUM({N21, N20, N19, 
        N18, N17, N16, N15, N14}) );
  OAI21XL U4 ( .A0(n27), .A1(n13), .B0(n28), .Y(n58) );
  INVX1 U3 ( .A(test_mode), .Y(n4) );
  OAI21X4 U11 ( .A0(n13), .A1(test_mode), .B0(n3), .Y(net83874) );
  NAND2BX4 U10 ( .AN(n4), .B(clk), .Y(n3) );
  SDFFXL f_sync_in_int_reg ( .D(f_sync_in), .SI(n29), .SE(test_se), .CK(clk), 
        .Q(f_sync_in_int) );
  SDFFXL not_ch_clk_int_reg ( .D(n63), .SI(n30), .SE(test_se), .CK(clk), .Q(
        not_ch_clk_int) );
  SDFFXL FSYNC_STATE_reg ( .D(n65), .SI(n25), .SE(test_se), .CK(clk), .Q(
        FSYNC_STATE) );
  SDFFXL FSYNC_COUNTER_reg_0_ ( .D(n67), .SI(CLK_GEN_COUNTER[7]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[0]), .QN(n26) );
  SDFFXL FSYNC_COUNTER_reg_3_ ( .D(n66), .SI(FSYNC_COUNTER[2]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[3]), .QN(n25) );
  SDFFXL FSYNC_COUNTER_reg_2_ ( .D(n9), .SI(FSYNC_COUNTER[1]), .SE(test_se), 
        .CK(clk), .Q(FSYNC_COUNTER[2]), .QN(n36) );
  SDFFXL CLK_GEN_COUNTER_reg_7_ ( .D(n10), .SI(CLK_GEN_COUNTER[6]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[7]), .QN(n1) );
  SDFFXL CLK_GEN_COUNTER_reg_6_ ( .D(n20), .SI(CLK_GEN_COUNTER[5]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[6]) );
  SDFFXL CLK_GEN_COUNTER_reg_5_ ( .D(n19), .SI(CLK_GEN_COUNTER[4]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[5]) );
  SDFFXL CLK_GEN_COUNTER_reg_4_ ( .D(n17), .SI(CLK_GEN_COUNTER[3]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[4]) );
  SDFFXL CLK_GEN_COUNTER_reg_3_ ( .D(n16), .SI(CLK_GEN_COUNTER[2]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[3]), .QN(n18) );
  SDFFXL CLK_GEN_COUNTER_reg_2_ ( .D(n15), .SI(CLK_GEN_COUNTER[1]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[2]) );
  SDFFXL CLK_GEN_COUNTER_reg_1_ ( .D(n12), .SI(CLK_GEN_COUNTER[0]), .SE(
        test_se), .CK(clk), .Q(CLK_GEN_COUNTER[1]) );
  SDFFXL CLK_GEN_COUNTER_reg_0_ ( .D(n11), .SI(test_si), .SE(test_se), .CK(clk), .Q(CLK_GEN_COUNTER[0]) );
  AND3X2 U63 ( .A(n91), .B(n1), .C(n18), .Y(n92) );
endmodule


module RF_0_test_1 ( data_in, data_out, re_addr, wr_addr, wr_clk, re_clk, 
        reset, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, scan_out0, 
        scan_out1, scan_out2, scan_out3, scan_out4, scan_enable, test_si2, 
        test_si1, test_so1, test_se );
  input [7:0] data_in;
  output [7:0] data_out;
  input [2:0] re_addr;
  input [2:0] wr_addr;
  input wr_clk, re_clk, reset, scan_in0, scan_in1, scan_in2, scan_in3,
         scan_in4, scan_enable, test_si2, test_si1, test_se;
  output scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, test_so1;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n123, n124, n125,
         n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136,
         n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147,
         n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158,
         n159, n160, n161, n162, n163;
  wire   [63:0] reg_w;
  wire   [7:0] mux_w;
  assign test_so1 = reg_w[63];

  MX2XL U3 ( .A(reg_w[50]), .B(data_in[2]), .S0(n4), .Y(n35) );
  MX2X1 U4 ( .A(reg_w[53]), .B(data_in[5]), .S0(n4), .Y(n59) );
  MX2X1 U5 ( .A(reg_w[29]), .B(data_in[5]), .S0(n3), .Y(n62) );
  MX2X1 U6 ( .A(reg_w[45]), .B(data_in[5]), .S0(n1), .Y(n60) );
  MX2X1 U7 ( .A(reg_w[13]), .B(data_in[5]), .S0(n2), .Y(n64) );
  MX2X1 U8 ( .A(reg_w[21]), .B(data_in[5]), .S0(n10), .Y(n63) );
  MX2X1 U9 ( .A(reg_w[37]), .B(data_in[5]), .S0(n13), .Y(n61) );
  MX2XL U10 ( .A(reg_w[26]), .B(data_in[2]), .S0(n3), .Y(n38) );
  MX2XL U11 ( .A(reg_w[28]), .B(data_in[4]), .S0(n3), .Y(n54) );
  MX2XL U12 ( .A(reg_w[30]), .B(data_in[6]), .S0(n3), .Y(n70) );
  MX2XL U13 ( .A(reg_w[24]), .B(data_in[0]), .S0(n3), .Y(n78) );
  MX2XL U14 ( .A(reg_w[27]), .B(data_in[3]), .S0(n3), .Y(n46) );
  MX2XL U15 ( .A(reg_w[25]), .B(data_in[1]), .S0(n3), .Y(n30) );
  MX2XL U16 ( .A(reg_w[31]), .B(data_in[7]), .S0(n3), .Y(n22) );
  INVX1 U17 ( .A(reset), .Y(n6) );
  INVX1 U18 ( .A(reset), .Y(n5) );
  MX2XL U19 ( .A(reg_w[44]), .B(data_in[4]), .S0(n1), .Y(n52) );
  MX2XL U20 ( .A(reg_w[42]), .B(data_in[2]), .S0(n1), .Y(n36) );
  MX2XL U21 ( .A(reg_w[43]), .B(data_in[3]), .S0(n1), .Y(n44) );
  MX2XL U22 ( .A(reg_w[46]), .B(data_in[6]), .S0(n1), .Y(n68) );
  MX2XL U23 ( .A(reg_w[41]), .B(data_in[1]), .S0(n1), .Y(n28) );
  MX2XL U24 ( .A(reg_w[47]), .B(data_in[7]), .S0(n1), .Y(n20) );
  MX2XL U25 ( .A(reg_w[40]), .B(data_in[0]), .S0(n1), .Y(n76) );
  MX2XL U26 ( .A(reg_w[12]), .B(data_in[4]), .S0(n2), .Y(n56) );
  MX2XL U27 ( .A(reg_w[10]), .B(data_in[2]), .S0(n2), .Y(n40) );
  MX2XL U28 ( .A(reg_w[11]), .B(data_in[3]), .S0(n2), .Y(n48) );
  MX2XL U29 ( .A(reg_w[14]), .B(data_in[6]), .S0(n2), .Y(n72) );
  MX2XL U30 ( .A(reg_w[9]), .B(data_in[1]), .S0(n2), .Y(n32) );
  MX2XL U31 ( .A(reg_w[15]), .B(data_in[7]), .S0(n2), .Y(n24) );
  MX2XL U32 ( .A(reg_w[8]), .B(data_in[0]), .S0(n2), .Y(n80) );
  MX2XL U33 ( .A(reg_w[20]), .B(data_in[4]), .S0(n10), .Y(n55) );
  MX2XL U34 ( .A(reg_w[18]), .B(data_in[2]), .S0(n10), .Y(n39) );
  MX2XL U35 ( .A(reg_w[19]), .B(data_in[3]), .S0(n10), .Y(n47) );
  MX2XL U36 ( .A(reg_w[22]), .B(data_in[6]), .S0(n10), .Y(n71) );
  MX2XL U37 ( .A(reg_w[17]), .B(data_in[1]), .S0(n10), .Y(n31) );
  MX2XL U38 ( .A(reg_w[23]), .B(data_in[7]), .S0(n10), .Y(n23) );
  MX2XL U39 ( .A(reg_w[16]), .B(data_in[0]), .S0(n10), .Y(n79) );
  MX2XL U40 ( .A(reg_w[36]), .B(data_in[4]), .S0(n13), .Y(n53) );
  MX2XL U41 ( .A(reg_w[34]), .B(data_in[2]), .S0(n13), .Y(n37) );
  MX2XL U42 ( .A(reg_w[35]), .B(data_in[3]), .S0(n13), .Y(n45) );
  MX2XL U43 ( .A(reg_w[38]), .B(data_in[6]), .S0(n13), .Y(n69) );
  MX2XL U44 ( .A(reg_w[33]), .B(data_in[1]), .S0(n13), .Y(n29) );
  MX2XL U45 ( .A(reg_w[39]), .B(data_in[7]), .S0(n13), .Y(n21) );
  MX2XL U46 ( .A(reg_w[32]), .B(data_in[0]), .S0(n13), .Y(n77) );
  MX2XL U47 ( .A(reg_w[4]), .B(data_in[4]), .S0(n8), .Y(n57) );
  MX2XL U48 ( .A(reg_w[60]), .B(data_in[4]), .S0(n17), .Y(n50) );
  MX2XL U49 ( .A(reg_w[2]), .B(data_in[2]), .S0(n8), .Y(n41) );
  MX2XL U50 ( .A(reg_w[58]), .B(data_in[2]), .S0(n17), .Y(n34) );
  MX2XL U51 ( .A(reg_w[5]), .B(data_in[5]), .S0(n8), .Y(n65) );
  MX2XL U52 ( .A(reg_w[61]), .B(data_in[5]), .S0(n17), .Y(n58) );
  MX2XL U53 ( .A(reg_w[3]), .B(data_in[3]), .S0(n8), .Y(n49) );
  MX2XL U54 ( .A(reg_w[59]), .B(data_in[3]), .S0(n17), .Y(n42) );
  MX2XL U55 ( .A(reg_w[6]), .B(data_in[6]), .S0(n8), .Y(n73) );
  MX2XL U56 ( .A(reg_w[62]), .B(data_in[6]), .S0(n17), .Y(n66) );
  MX2XL U57 ( .A(reg_w[1]), .B(data_in[1]), .S0(n8), .Y(n33) );
  MX2XL U58 ( .A(reg_w[57]), .B(data_in[1]), .S0(n17), .Y(n26) );
  MX2XL U59 ( .A(reg_w[7]), .B(data_in[7]), .S0(n8), .Y(n25) );
  MX2XL U60 ( .A(reg_w[63]), .B(data_in[7]), .S0(n17), .Y(n18) );
  MX2XL U61 ( .A(reg_w[0]), .B(data_in[0]), .S0(n8), .Y(n81) );
  MX2XL U62 ( .A(reg_w[56]), .B(data_in[0]), .S0(n17), .Y(n74) );
  MX2XL U63 ( .A(reg_w[52]), .B(data_in[4]), .S0(n4), .Y(n51) );
  MX2XL U64 ( .A(reg_w[51]), .B(data_in[3]), .S0(n4), .Y(n43) );
  MX2XL U65 ( .A(reg_w[54]), .B(data_in[6]), .S0(n4), .Y(n67) );
  MX2XL U66 ( .A(reg_w[49]), .B(data_in[1]), .S0(n4), .Y(n27) );
  MX2XL U67 ( .A(reg_w[55]), .B(data_in[7]), .S0(n4), .Y(n19) );
  MX2XL U68 ( .A(reg_w[48]), .B(data_in[0]), .S0(n4), .Y(n75) );
  NOR3X1 U69 ( .A(re_addr[0]), .B(re_addr[2]), .C(n123), .Y(n155) );
  NOR3X1 U70 ( .A(re_addr[1]), .B(re_addr[2]), .C(re_addr[0]), .Y(n153) );
  NOR3X1 U71 ( .A(n123), .B(re_addr[2]), .C(n82), .Y(n154) );
  NOR3X1 U72 ( .A(re_addr[1]), .B(re_addr[2]), .C(n82), .Y(n152) );
  AND3X2 U73 ( .A(re_addr[1]), .B(n82), .C(re_addr[2]), .Y(n159) );
  AND3X2 U74 ( .A(n82), .B(n123), .C(re_addr[2]), .Y(n157) );
  AND3X2 U75 ( .A(re_addr[2]), .B(re_addr[1]), .C(re_addr[0]), .Y(n158) );
  AND3X2 U76 ( .A(re_addr[2]), .B(n123), .C(re_addr[0]), .Y(n156) );
  AOI22X1 U77 ( .A0(n155), .A1(reg_w[16]), .B0(n154), .B1(reg_w[24]), .Y(n126)
         );
  AOI22X1 U78 ( .A0(n155), .A1(reg_w[17]), .B0(n154), .B1(reg_w[25]), .Y(n130)
         );
  AOI22X1 U79 ( .A0(n155), .A1(reg_w[18]), .B0(n154), .B1(reg_w[26]), .Y(n134)
         );
  AOI22X1 U80 ( .A0(n155), .A1(reg_w[19]), .B0(n154), .B1(reg_w[27]), .Y(n138)
         );
  AOI22X1 U81 ( .A0(n155), .A1(reg_w[20]), .B0(n154), .B1(reg_w[28]), .Y(n142)
         );
  AOI22X1 U82 ( .A0(n155), .A1(reg_w[21]), .B0(n154), .B1(reg_w[29]), .Y(n146)
         );
  AOI22X1 U83 ( .A0(n155), .A1(reg_w[22]), .B0(n154), .B1(reg_w[30]), .Y(n150)
         );
  AOI22X1 U84 ( .A0(n155), .A1(reg_w[23]), .B0(n154), .B1(reg_w[31]), .Y(n162)
         );
  INVX1 U85 ( .A(re_addr[1]), .Y(n123) );
  INVX1 U86 ( .A(re_addr[0]), .Y(n82) );
  NAND4X1 U87 ( .A(n127), .B(n126), .C(n125), .D(n124), .Y(mux_w[0]) );
  AOI22X1 U88 ( .A0(n159), .A1(reg_w[48]), .B0(n158), .B1(reg_w[56]), .Y(n124)
         );
  AOI22X1 U89 ( .A0(n157), .A1(reg_w[32]), .B0(n156), .B1(reg_w[40]), .Y(n125)
         );
  AOI22X1 U90 ( .A0(n153), .A1(reg_w[0]), .B0(n152), .B1(reg_w[8]), .Y(n127)
         );
  NAND4X1 U91 ( .A(n131), .B(n130), .C(n129), .D(n128), .Y(mux_w[1]) );
  AOI22X1 U92 ( .A0(n159), .A1(reg_w[49]), .B0(n158), .B1(reg_w[57]), .Y(n128)
         );
  AOI22X1 U93 ( .A0(n157), .A1(reg_w[33]), .B0(n156), .B1(reg_w[41]), .Y(n129)
         );
  AOI22X1 U94 ( .A0(n153), .A1(reg_w[1]), .B0(n152), .B1(reg_w[9]), .Y(n131)
         );
  NAND4X1 U95 ( .A(n135), .B(n134), .C(n133), .D(n132), .Y(mux_w[2]) );
  AOI22X1 U96 ( .A0(n159), .A1(reg_w[50]), .B0(n158), .B1(reg_w[58]), .Y(n132)
         );
  AOI22X1 U97 ( .A0(n157), .A1(reg_w[34]), .B0(n156), .B1(reg_w[42]), .Y(n133)
         );
  AOI22X1 U98 ( .A0(n153), .A1(reg_w[2]), .B0(n152), .B1(reg_w[10]), .Y(n135)
         );
  NAND4X1 U99 ( .A(n139), .B(n138), .C(n137), .D(n136), .Y(mux_w[3]) );
  AOI22X1 U100 ( .A0(n159), .A1(reg_w[51]), .B0(n158), .B1(reg_w[59]), .Y(n136) );
  AOI22X1 U101 ( .A0(n157), .A1(reg_w[35]), .B0(n156), .B1(reg_w[43]), .Y(n137) );
  AOI22X1 U102 ( .A0(n153), .A1(reg_w[3]), .B0(n152), .B1(reg_w[11]), .Y(n139)
         );
  NAND4X1 U103 ( .A(n143), .B(n142), .C(n141), .D(n140), .Y(mux_w[4]) );
  AOI22X1 U104 ( .A0(n159), .A1(reg_w[52]), .B0(n158), .B1(reg_w[60]), .Y(n140) );
  AOI22X1 U105 ( .A0(n157), .A1(reg_w[36]), .B0(n156), .B1(reg_w[44]), .Y(n141) );
  AOI22X1 U106 ( .A0(n153), .A1(reg_w[4]), .B0(n152), .B1(reg_w[12]), .Y(n143)
         );
  NAND4X1 U107 ( .A(n147), .B(n146), .C(n145), .D(n144), .Y(mux_w[5]) );
  AOI22X1 U108 ( .A0(n159), .A1(reg_w[53]), .B0(n158), .B1(reg_w[61]), .Y(n144) );
  AOI22X1 U109 ( .A0(n157), .A1(reg_w[37]), .B0(n156), .B1(reg_w[45]), .Y(n145) );
  AOI22X1 U110 ( .A0(n153), .A1(reg_w[5]), .B0(n152), .B1(reg_w[13]), .Y(n147)
         );
  NAND4X1 U111 ( .A(n151), .B(n150), .C(n149), .D(n148), .Y(mux_w[6]) );
  AOI22X1 U112 ( .A0(n159), .A1(reg_w[54]), .B0(n158), .B1(reg_w[62]), .Y(n148) );
  AOI22X1 U113 ( .A0(n157), .A1(reg_w[38]), .B0(n156), .B1(reg_w[46]), .Y(n149) );
  AOI22X1 U114 ( .A0(n153), .A1(reg_w[6]), .B0(n152), .B1(reg_w[14]), .Y(n151)
         );
  NAND4X1 U115 ( .A(n163), .B(n162), .C(n161), .D(n160), .Y(mux_w[7]) );
  AOI22X1 U116 ( .A0(n159), .A1(reg_w[55]), .B0(n158), .B1(reg_w[63]), .Y(n160) );
  AOI22X1 U117 ( .A0(n157), .A1(reg_w[39]), .B0(n156), .B1(reg_w[47]), .Y(n161) );
  AOI22X1 U118 ( .A0(n153), .A1(reg_w[7]), .B0(n152), .B1(reg_w[15]), .Y(n163)
         );
  AND3X2 U119 ( .A(wr_addr[0]), .B(wr_addr[2]), .C(n14), .Y(n1) );
  INVX1 U120 ( .A(n9), .Y(n10) );
  NAND3BX1 U121 ( .AN(wr_addr[0]), .B(wr_addr[1]), .C(n11), .Y(n9) );
  INVX1 U122 ( .A(n16), .Y(n17) );
  NAND2BX1 U123 ( .AN(n15), .B(wr_addr[0]), .Y(n16) );
  INVX1 U124 ( .A(n7), .Y(n8) );
  NAND3BX1 U125 ( .AN(wr_addr[0]), .B(n14), .C(n11), .Y(n7) );
  INVX1 U126 ( .A(wr_addr[1]), .Y(n14) );
  INVX1 U127 ( .A(wr_addr[2]), .Y(n11) );
  NAND2X1 U128 ( .A(wr_addr[2]), .B(wr_addr[1]), .Y(n15) );
  AND3X2 U129 ( .A(wr_addr[0]), .B(n14), .C(n11), .Y(n2) );
  AND3X2 U130 ( .A(wr_addr[0]), .B(wr_addr[1]), .C(n11), .Y(n3) );
  INVX1 U131 ( .A(n12), .Y(n13) );
  NAND3BX1 U132 ( .AN(wr_addr[0]), .B(wr_addr[2]), .C(n14), .Y(n12) );
  NOR2X1 U133 ( .A(wr_addr[0]), .B(n15), .Y(n4) );
  SDFFRHQXL reg_w_reg_63_ ( .D(n18), .SI(reg_w[62]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[63]) );
  SDFFRHQXL reg_w_reg_62_ ( .D(n66), .SI(reg_w[61]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[62]) );
  SDFFRHQXL reg_w_reg_61_ ( .D(n58), .SI(reg_w[60]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[61]) );
  SDFFRHQXL reg_w_reg_60_ ( .D(n50), .SI(reg_w[59]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[60]) );
  SDFFRHQXL reg_w_reg_59_ ( .D(n42), .SI(reg_w[58]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[59]) );
  SDFFRHQXL reg_w_reg_58_ ( .D(n34), .SI(reg_w[57]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[58]) );
  SDFFRHQXL reg_w_reg_57_ ( .D(n26), .SI(reg_w[56]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[57]) );
  SDFFRHQXL reg_w_reg_56_ ( .D(n74), .SI(reg_w[55]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[56]) );
  SDFFRHQXL reg_w_reg_47_ ( .D(n20), .SI(reg_w[46]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[47]) );
  SDFFRHQXL reg_w_reg_46_ ( .D(n68), .SI(reg_w[45]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[46]) );
  SDFFRHQXL reg_w_reg_45_ ( .D(n60), .SI(reg_w[44]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[45]) );
  SDFFRHQXL reg_w_reg_44_ ( .D(n52), .SI(reg_w[43]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[44]) );
  SDFFRHQXL reg_w_reg_43_ ( .D(n44), .SI(reg_w[42]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[43]) );
  SDFFRHQXL reg_w_reg_42_ ( .D(n36), .SI(reg_w[41]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[42]) );
  SDFFRHQXL reg_w_reg_41_ ( .D(n28), .SI(reg_w[40]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[41]) );
  SDFFRHQXL reg_w_reg_40_ ( .D(n76), .SI(reg_w[39]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[40]) );
  SDFFRHQXL reg_w_reg_31_ ( .D(n22), .SI(reg_w[30]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[31]) );
  SDFFRHQXL reg_w_reg_30_ ( .D(n70), .SI(reg_w[29]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[30]) );
  SDFFRHQXL reg_w_reg_29_ ( .D(n62), .SI(reg_w[28]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[29]) );
  SDFFRHQXL reg_w_reg_28_ ( .D(n54), .SI(reg_w[27]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[28]) );
  SDFFRHQXL reg_w_reg_27_ ( .D(n46), .SI(reg_w[26]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[27]) );
  SDFFRHQXL reg_w_reg_26_ ( .D(n38), .SI(reg_w[25]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[26]) );
  SDFFRHQXL reg_w_reg_25_ ( .D(n30), .SI(reg_w[24]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[25]) );
  SDFFRHQXL reg_w_reg_24_ ( .D(n78), .SI(reg_w[23]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[24]) );
  SDFFRHQXL reg_w_reg_15_ ( .D(n24), .SI(reg_w[14]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[15]) );
  SDFFRHQXL reg_w_reg_14_ ( .D(n72), .SI(reg_w[13]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[14]) );
  SDFFRHQXL reg_w_reg_13_ ( .D(n64), .SI(reg_w[12]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[13]) );
  SDFFRHQXL reg_w_reg_12_ ( .D(n56), .SI(reg_w[11]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[12]) );
  SDFFRHQXL reg_w_reg_11_ ( .D(n48), .SI(reg_w[10]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[11]) );
  SDFFRHQXL reg_w_reg_10_ ( .D(n40), .SI(reg_w[9]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[10]) );
  SDFFRHQXL reg_w_reg_9_ ( .D(n32), .SI(reg_w[8]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[9]) );
  SDFFRHQXL reg_w_reg_8_ ( .D(n80), .SI(reg_w[7]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[8]) );
  SDFFRHQXL reg_w_reg_55_ ( .D(n19), .SI(reg_w[54]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[55]) );
  SDFFRHQXL reg_w_reg_54_ ( .D(n67), .SI(reg_w[53]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[54]) );
  SDFFRHQXL reg_w_reg_53_ ( .D(n59), .SI(reg_w[52]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[53]) );
  SDFFRHQXL reg_w_reg_52_ ( .D(n51), .SI(reg_w[51]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[52]) );
  SDFFRHQXL reg_w_reg_51_ ( .D(n43), .SI(reg_w[50]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[51]) );
  SDFFRHQXL reg_w_reg_50_ ( .D(n35), .SI(reg_w[49]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[50]) );
  SDFFRHQXL reg_w_reg_49_ ( .D(n27), .SI(reg_w[48]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[49]) );
  SDFFRHQXL reg_w_reg_48_ ( .D(n75), .SI(reg_w[47]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[48]) );
  SDFFRHQXL reg_w_reg_39_ ( .D(n21), .SI(reg_w[38]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[39]) );
  SDFFRHQXL reg_w_reg_38_ ( .D(n69), .SI(reg_w[37]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[38]) );
  SDFFRHQXL reg_w_reg_37_ ( .D(n61), .SI(reg_w[36]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[37]) );
  SDFFRHQXL reg_w_reg_36_ ( .D(n53), .SI(reg_w[35]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[36]) );
  SDFFRHQXL reg_w_reg_35_ ( .D(n45), .SI(reg_w[34]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[35]) );
  SDFFRHQXL reg_w_reg_34_ ( .D(n37), .SI(reg_w[33]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[34]) );
  SDFFRHQXL reg_w_reg_33_ ( .D(n29), .SI(reg_w[32]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[33]) );
  SDFFRHQXL reg_w_reg_32_ ( .D(n77), .SI(reg_w[31]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[32]) );
  SDFFRHQXL reg_w_reg_23_ ( .D(n23), .SI(reg_w[22]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[23]) );
  SDFFRHQXL reg_w_reg_22_ ( .D(n71), .SI(reg_w[21]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[22]) );
  SDFFRHQXL reg_w_reg_21_ ( .D(n63), .SI(reg_w[20]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[21]) );
  SDFFRHQXL reg_w_reg_20_ ( .D(n55), .SI(reg_w[19]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[20]) );
  SDFFRHQXL reg_w_reg_19_ ( .D(n47), .SI(reg_w[18]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[19]) );
  SDFFRHQXL reg_w_reg_18_ ( .D(n39), .SI(reg_w[17]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[18]) );
  SDFFRHQXL reg_w_reg_17_ ( .D(n31), .SI(reg_w[16]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[17]) );
  SDFFRHQXL reg_w_reg_16_ ( .D(n79), .SI(reg_w[15]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[16]) );
  SDFFRHQXL reg_w_reg_7_ ( .D(n25), .SI(reg_w[6]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[7]) );
  SDFFRHQXL reg_w_reg_6_ ( .D(n73), .SI(reg_w[5]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[6]) );
  SDFFRHQXL reg_w_reg_5_ ( .D(n65), .SI(reg_w[4]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[5]) );
  SDFFRHQXL reg_w_reg_4_ ( .D(n57), .SI(reg_w[3]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[4]) );
  SDFFRHQXL reg_w_reg_3_ ( .D(n49), .SI(reg_w[2]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[3]) );
  SDFFRHQXL reg_w_reg_2_ ( .D(n41), .SI(reg_w[1]), .SE(test_se), .CK(wr_clk), 
        .RN(n5), .Q(reg_w[2]) );
  SDFFRHQXL reg_w_reg_1_ ( .D(n33), .SI(reg_w[0]), .SE(test_se), .CK(wr_clk), 
        .RN(n6), .Q(reg_w[1]) );
  SDFFRHQXL reg_w_reg_0_ ( .D(n81), .SI(data_out[6]), .SE(test_se), .CK(wr_clk), .RN(n5), .Q(reg_w[0]) );
  SDFFRHQXL data_out_reg_7_ ( .D(mux_w[7]), .SI(test_si2), .SE(test_se), .CK(
        re_clk), .RN(n6), .Q(data_out[7]) );
  SDFFRHQXL data_out_reg_6_ ( .D(mux_w[6]), .SI(data_out[5]), .SE(test_se), 
        .CK(re_clk), .RN(n5), .Q(data_out[6]) );
  SDFFRHQXL data_out_reg_5_ ( .D(mux_w[5]), .SI(data_out[4]), .SE(test_se), 
        .CK(re_clk), .RN(n6), .Q(data_out[5]) );
  SDFFRHQXL data_out_reg_4_ ( .D(mux_w[4]), .SI(data_out[3]), .SE(test_se), 
        .CK(re_clk), .RN(n5), .Q(data_out[4]) );
  SDFFRHQXL data_out_reg_3_ ( .D(mux_w[3]), .SI(data_out[2]), .SE(test_se), 
        .CK(re_clk), .RN(n6), .Q(data_out[3]) );
  SDFFRHQXL data_out_reg_2_ ( .D(mux_w[2]), .SI(data_out[1]), .SE(test_se), 
        .CK(re_clk), .RN(n5), .Q(data_out[2]) );
  SDFFRHQXL data_out_reg_1_ ( .D(mux_w[1]), .SI(data_out[0]), .SE(test_se), 
        .CK(re_clk), .RN(n6), .Q(data_out[1]) );
  SDFFRHQXL data_out_reg_0_ ( .D(mux_w[0]), .SI(test_si1), .SE(test_se), .CK(
        re_clk), .RN(n5), .Q(data_out[0]) );
endmodule


module dec_test_1 ( dec_s, reset, rate, clk, law, dec_i, dec_s_clk, dec_s_fs, 
        dec_i_clk, dec_i_fs, test_mode, scan_in0, scan_in1, scan_in2, scan_in3, 
        scan_in4, scan_out0, scan_out1, scan_out2, scan_out3, scan_out4, 
        scan_enable, test_si3, test_si2, test_si1, test_so2, test_so1, test_se
 );
  output [7:0] dec_s;
  input [1:0] rate;
  input [7:0] dec_i;
  input reset, clk, law, dec_i_clk, dec_i_fs, test_mode, scan_in0, scan_in1,
         scan_in2, scan_in3, scan_in4, scan_enable, test_si3, test_si2,
         test_si1, test_se;
  output dec_s_clk, dec_s_fs, scan_out0, scan_out1, scan_out2, scan_out3,
         scan_out4, test_so2, test_so1;
  wire   dly_clk, sys_clk, td_w, tr_w, fa_done, dec_fs_buffin, inv_ch_clk_in,
         fa_start, wr_clk, rd_clk, n1, n2, SYNOPSYS_UNCONNECTED__1,
         SYNOPSYS_UNCONNECTED__2, n4, n5, n7, n8, n9, n10, n11;
  wire   [15:0] dq_w;
  wire   [15:0] sr_w;
  wire   [14:0] se_w;
  wire   [12:0] y_w;
  wire   [18:0] yl_w;
  wire   [6:0] al_w;
  wire   [15:0] a2p_w;
  wire   [7:0] dec_s_w;
  wire   [2:0] rd_add;
  wire   [2:0] wr_add;
  wire   [4:0] I_reg;

  BUFX3 U1 ( .A(rate[1]), .Y(n2) );
  BUFX3 U2 ( .A(test_mode), .Y(n1) );
  IN_REG_0_test_1 iIn_reg ( .data_in(dec_i), .load(inv_ch_clk_in), .reset(
        reset), .data_out({n9, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2, I_reg}), .scan_enable(1'b0), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .test_si(n10), .test_se(test_se) );
  I_ADAP_QUAN_0 top_dec_I_ADAP_QUAN ( .D(dq_w), .Y(y_w), .I(I_reg), .RATE({n2, 
        rate[0]}) );
  ADAP_PRED_REC_SIG_0_test_1 top_dec_ADAP_PRED_REC_SIG ( .DQ(dq_w), .RATE({n2, 
        rate[0]}), .clk(sys_clk), .dly_strb(dly_clk), .reset(reset), .TR(tr_w), 
        .start_trig(fa_start), .SE(se_w), .A2(a2p_w), .SR(sr_w), .done(fa_done), .test_mode(n1), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), 
        .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si2(test_si3), 
        .test_si1(n8), .test_so2(n5), .test_so1(n7), .test_se(test_se) );
  TON_TRAN_DET_0_test_1 top_dec_TON_TRAN_DET ( .A2P(a2p_w), .reset(reset), 
        .YL(yl_w), .DQ(dq_w), .TDP(td_w), .TR(tr_w), .clk(dly_clk), .scan_in0(
        1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(
        1'b0), .test_mode(n1), .scan_enable(1'b0), .test_so(test_so2), 
        .test_se(test_se) );
  ADAP_SPED_CTL_0_test_1 top_dec_ADAP_SPED_CTL ( .I(I_reg), .RATE({n2, rate[0]}), .TDP(td_w), .Y(y_w), .TR(tr_w), .reset(reset), .CLK(dly_clk), .AL(al_w), 
        .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), 
        .scan_in3(1'b0), .scan_in4(1'b0), .test_si(n5), .test_so(n4), 
        .test_se(test_se) );
  QUAN_SCAL_FAC_ADAP_0_test_1 top_dec_QUAN_SCAL_FAC_ADAP ( .CLK(dly_clk), .IC(
        I_reg), .RATE({n2, rate[0]}), .AL(al_w), .YL(yl_w), .reset(reset), .Y(
        y_w), .scan_enable(1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(
        1'b0), .scan_in3(1'b0), .scan_in4(1'b0), .test_si(n4), .test_se(
        test_se) );
  OUT_PCM top_dec_OUT_PCM ( .reset(reset), .clk(clk), .SR(sr_w), .LAW(law), 
        .SE(se_w), .I(I_reg), .Y(y_w), .RATE({n2, rate[0]}), .SD(dec_s_w) );
  CU_0_test_1 idec_CU ( .reset(reset), .FSYNC_IN(dec_fs_buffin), .FSYNC_OUT(
        dec_s_fs), .NOT_CH_CLK_IN(inv_ch_clk_in), .CH_CLK_OUT(dec_s_clk), 
        .clk(sys_clk), .FA_start(fa_start), .FA_done(fa_done), .delay_strobe(
        dly_clk), .scan_enable(1'b0), .test_mode(n1), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .RF_WR_ADDR(wr_add), .RF_RD_ADDR(rd_add), .RF_WR(wr_clk), .RF_RD(
        rd_clk), .test_si2(test_si2), .test_si1(n9), .test_so2(test_so1), 
        .test_so1(n8), .test_se(test_se) );
  CLOCK_GEN_0_test_1 dec_clock_gen ( .reset(reset), .clk(clk), .scan_enable(
        1'b0), .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(
        1'b0), .scan_in4(1'b0), .sys_clk_buffered(sys_clk), .f_sync_in(
        dec_i_fs), .f_sync_in_buffered(dec_fs_buffin), .f_sync_out_buffered(
        dec_s_fs), .ch_clk_in(dec_i_clk), .not_ch_clk_in_buffered(
        inv_ch_clk_in), .ch_clk_out_buffered(dec_s_clk), .test_mode(n1), 
        .test_si(test_si1), .test_so(n11), .test_se(test_se) );
  RF_0_test_1 dec_rf ( .data_in(dec_s_w), .data_out(dec_s), .re_addr(rd_add), 
        .wr_addr(wr_add), .wr_clk(wr_clk), .re_clk(rd_clk), .reset(reset), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .scan_enable(1'b0), .test_si2(n7), .test_si1(n11), 
        .test_so1(n10), .test_se(test_se) );
endmodule


module mcac ( reset, rate, clk, law, enc_s, enc_i, enc_s_clk, enc_s_fs, 
        enc_i_clk, enc_i_fs, dec_i, dec_s, dec_i_clk, dec_i_fs, dec_s_clk, 
        dec_s_fs, scan_in0, scan_in1, scan_in2, scan_in3, scan_in4, 
        scan_enable, test_mode, scan_out0, scan_out1, scan_out2, scan_out3, 
        scan_out4 );
  input [1:0] rate;
  input [7:0] enc_s;
  output [7:0] enc_i;
  input [7:0] dec_i;
  output [7:0] dec_s;
  input reset, clk, law, enc_s_clk, enc_s_fs, dec_i_clk, dec_i_fs, scan_in0,
         scan_in1, scan_in2, scan_in3, scan_in4, scan_enable, test_mode;
  output enc_i_clk, enc_i_fs, dec_s_clk, dec_s_fs, scan_out0, scan_out1,
         scan_out2, scan_out3, scan_out4;
  wire   n1, n2, n3, n9, n12;
  assign scan_out4 = enc_i[7];
  assign scan_out0 = dec_s[7];

  CLKBUFX8 U1 ( .A(law), .Y(n3) );
  BUFX3 U2 ( .A(rate[0]), .Y(n2) );
  BUFX3 U3 ( .A(test_mode), .Y(n1) );
  enc_test_1 mcac_enc ( .enc_s(enc_s), .reset(reset), .rate({rate[1], n2}), 
        .clk(clk), .law(n3), .enc_i(enc_i), .enc_s_clk(enc_s_clk), .enc_s_fs(
        enc_s_fs), .enc_i_clk(enc_i_clk), .enc_i_fs(enc_i_fs), .scan_in0(1'b0), 
        .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), .scan_in4(1'b0), 
        .scan_enable(1'b0), .test_mode(n1), .test_si4(scan_in4), .test_si3(
        scan_in3), .test_si2(n9), .test_si1(n12), .test_so3(scan_out3), 
        .test_so2(scan_out2), .test_so1(scan_out1), .test_se(scan_enable) );
  dec_test_1 mcac_dec ( .dec_s(dec_s), .reset(reset), .rate({rate[1], n2}), 
        .clk(clk), .law(n3), .dec_i(dec_i), .dec_s_clk(dec_s_clk), .dec_s_fs(
        dec_s_fs), .dec_i_clk(dec_i_clk), .dec_i_fs(dec_i_fs), .test_mode(n1), 
        .scan_in0(1'b0), .scan_in1(1'b0), .scan_in2(1'b0), .scan_in3(1'b0), 
        .scan_in4(1'b0), .scan_enable(1'b0), .test_si3(scan_in2), .test_si2(
        scan_in1), .test_si1(scan_in0), .test_so2(n9), .test_so1(n12), 
        .test_se(scan_enable) );
endmodule

